
14  Retrieve all comments
get
https://api.staging.insightiq.ai/v1/social/comments
Lists all comments of the given account.

Usually used in conjunction with the "CONTENTS_COMMENTS.*" webhooks, read more.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Query Parameters
from_date
string<date>
Return comments published on or after this date. (YYYY-MM-DD)

Example:
2021-01-31
limit
integer
The number of objects to be returned. It can be between 1 to 100. The default value is 10.

>= 1
<= 100
Default:
10
offset
integer
The number of objects to skip. Use this argument for pagination. The default value is 0.

>= 0
Default:
0
to_date
string<date>
Return comments published on or before this date. (YYYY-MM-DD)

Example:
2021-01-31
account_id
string<uuid>
required
Unique ID of the connected account.

content_id
string<uuid>
required
Unique ID of the content item.

Responses
200
Returns all comment objects for the given account.

Headers
request-id
string<uuid>
required
Unique ID associated with this request. Please quote this request while requesting support.

Body

application/json

application/json
responses
/
200
data
array[Comment]
id
string<uuid>
required
Unique ID of the comment.

created_at
string<date-time>
required
Object creation time (UTC date and time in ISO 8601 format)

Example:
2022-03-27T12:56:34.534978
updated_at
string<date-time>
required
Object updation time (UTC date and time in ISO 8601 format)

Example:
2022-03-27T12:56:34.534978
published_at
string<date-time>
required
Publishing timestamp of the comment.

Example:
2022-03-27T12:56:34.534978
user
UserAttribute
required
account
AccountAttribute
required
work_platform
WorkPlatformAttribute
required
content
ContentAttribute
required
external_id
string<uuid>
required
Unique comment ID on the platform.

text
string
Text content of the comment.

commenter_username
string
Commenter profile username.

commenter_display_name
string
Full display name of the commenter profile.

commenter_id
string
Unique identifier for the commenter's profile on the platform.

commenter_profile_url
string or null
Commenter's profile URL on the connected platform.

like_count
integer
Total likes.

reply_count
integer
Total replies.

metadata
array[Metadata]
Metadata object representing meta information about resources.

offset
integer
required
Offset value passed in the query parameter.

Default:
0
Example:
0
limit
integer
required
Limit value passed in the query parameter.

Default:
10
Example:
10
from_date
string<date> or null
From date passed in the query parameter (YYYY-MM-DD).

Example:
2020-12-31
to_date
string<date> or null
To date passed in the query parameter (YYYY-MM-DD).

Example:
2021-12-31


# Sample Test/Show # 


Username
:
username
Password
:
password
account_id*
:
string
content_id*
:
string
from_date
:
string
limit
:
defaults to: 10
offset
:
defaults to: 0
to_date
:
string
Send API Request

Staging



import axios from 'axios';

const options = {
  method: 'GET',
  url: 'https://api.staging.insightiq.ai/v1/social/comments',
  headers: {Accept: 'application/json', Authorization: 'Basic 123'}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}



{
  "data": [
    {
      "id": "6923b3d6-b297-4f4b-abf6-0879cf2f7ced",
      "created_at": "2021-06-26T00:00:00",
      "updated_at": null,
      "published_at": "2021-06-26T00:00:00",
      "user": {
        "id": "b0562ead-6282-404f-9e63-9da7bc0f838f",
        "name": "Mark Ruffalo"
      },
      "account": {
        "id": "1639b5c5-facb-4555-8e55-3433cafe0c6b",
        "platform_username": "mark.ruffalo@gmail.com"
      },
      "work_platform": {
        "id": "14d9ddf5-51c6-415e-bde6-f8ed36ad7054",
        "name": "YouTube",
        "logo_url": "https://cdn.insightiq.ai/platforms_logo/logos/logo_youtube.png"
      },
      "content": {
        "id": "ca094d06-f9c5-4120-b67d-a6438ab2225b",
        "url": "https://www.youtube.com/watch?v=ZJ6y8OVJRw8",
        "published_at": "2021-05-26T00:00:00"
      },
      "external_id": "aaxxdeeefg1234",
      "text": "Loved this class! Please post the notes soon!",
      "commenter_username": "johnNash",
      "commenter_display_name": "johnNash",
      "commenter_id": "77230456700",
      "commenter_profile_url": null,
      "like_count": 10,
      "reply_count": 0
    },
    {
      "id": "2ce70230-df5f-468f-bd86-fc549c4b4221",
      "created_at": "2021-06-26T00:00:00",
      "updated_at": null,
      "published_at": "2021-06-26T00:00:00",
      "user": {
        "id": "b0562ead-6282-404f-9e63-9da7bc0f838f",
        "name": "Mark Ruffalo"
      },
      "account": {
        "id": "1639b5c5-facb-4555-8e55-3433cafe0c6b",
        "platform_username": "mark.ruffalo@gmail.com"
      },
      "work_platform": {
        "id": "14d9ddf5-51c6-415e-bde6-f8ed36ad7054",
        "name": "YouTube",
        "logo_url": "https://cdn.insightiq.ai/platforms_logo/logos/logo_youtube.png"
      },
      "content": {
        "id": "93f9c7a6-e328-41dd-ac2f-9f5c8a5095d8",
        "url": "",
        "published_at": "2021-05-26T00:00:00"
      },
      "external_id": "aaxxdeeefghyz",
      "text": "Can you post a followup video to tackle the questions raised?",
      "commenter_username": "philJackson",
      "commenter_display_name": "philJackson",
      "commenter_id": "77230456789",
      "commenter_profile_url": null,
      "like_count": 5,
      "reply_count": 0
    }
  ],
  "metadata": {
    "offset": 0,
    "limit": 10,
    "from_date": null,
    "to_date": null
  }
}




**-------- Income ----------**

// I dont think we need this, when we do I would provide

**-------- Activity ----------**


1  Retrieve an artist (user activity)
get
https://api.staging.insightiq.ai/v1/media/activity/artists/{id}
Retrieve the information of the artist with the supplied artist ID.

Usually used in conjunction with the "ACTIVITY-ARTISTS.*" webhooks, read more.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Path Parameters
id
string
required
Unique identifier for the artist

Responses
200
Returns artist object.

Headers
request-id
string<uuid>
required
Unique ID associated with this request. Please quote this request while requesting support.

Body

application/json

application/json
responses
/
200
id
string<uuid>
required
Unique ID of the artist.

created_at
string<date-time>
required
Object creation time (UTC date and time in ISO 8601 format)

Example:
2020-03-27T12:56:34.534978
updated_at
string<date-time>
required
Object updation time (UTC date and time in ISO 8601 format)

Example:
2020-03-27T12:56:34.534978
user
UserAttribute
required
id
string<uuid>
required
Unique ID of the user.

Example:
fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
name
string
required
Name of the user.

Example:
John Doe
account
AccountAttribute
required
id
string<uuid>
required
Unique ID of the account linked to this object.

Example:
fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
platform_username
string
required
Username of the account linked to this object.

Example:
john.doe@gmail.com
work_platform
WorkPlatformAttribute
required
id
string<uuid>
required
Unique ID of the work platform.

Example:
9bb8913b-ddd9-430b-a66a-d74d846e6c66
name
string
required
Name of the work platform.

Example:
Instagram, Twitter
logo_url
string<uri>
required
Image URL of the work platform logo.

Example:
https://insightiq.ai/storage/instagram.png
platform_artist_id
string
required
Unique artist ID given by the source platform.

image_url
string<uri> or null
Image URL of the artist on the platform.

artist_name
string
required
Artist's name on the platform.

artist_url
string<uri> or null
URL of the artist's page/profile on the platform.

genre
array[string]
List of genres that the artist is categorised into by the work platform.

activity_type
string
required
Whether the artist is in the TOP artists of the user (as defined by the work platform) or is FOLLOWED by the user.

Allowed values:
FOLLOWED
TOP


# Sample Test/Show # 


Username
:
username
Password
:
password
id*
:
string
Send API Request

Staging


import axios from 'axios';

const options = {
  method: 'GET',
  url: 'https://api.staging.insightiq.ai/v1/media/activity/artists/{id}',
  headers: {Accept: 'application/json', Authorization: 'Basic 123'}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}


{
  "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
  "created_at": "2020-03-27T12:56:34.534978",
  "updated_at": "2020-03-27T12:56:34.534978",
  "user": {
    "id": "fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb",
    "name": "John Doe"
  },
  "account": {
    "id": "fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb",
    "platform_username": "john.doe@gmail.com"
  },
  "work_platform": {
    "id": "fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb",
    "name": "Instagram",
    "logo_url": "https://insightiq.ai/storage/instagram.png"
  },
  "platform_artist_id": "string",
  "image_url": "http://example.com",
  "artist_name": "string",
  "artist_url": "http://example.com",
  "genre": [
    "string"
  ],
  "activity_type": "FOLLOWED"
}



2  Retrieve artists for an account (user activity)
get
https://api.staging.insightiq.ai/v1/media/activity/artists
Lists all TOP and FOLLOWED artists from the activity history of the given account.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Query Parameters
limit
integer
The number of objects to be returned. It can be between 1 to 100. The default value is 10.

>= 1
<= 100
Default:
10
offset
integer
The number of objects to skip. Use this argument for pagination. The default value is 0.

>= 0
Default:
0
account_id
string<uuid>
required
Unique ID of the connected account.

Responses
200
Returns all artists for the given account.

Headers
request-id
string<uuid>
required
Unique ID associated with this request. Please quote this request while requesting support.

Body

application/json

application/json
responses
/
200
data
array[ActivityArtist]
id
string<uuid>
required
Unique ID of the artist.

created_at
string<date-time>
required
Object creation time (UTC date and time in ISO 8601 format)

Example:
2020-03-27T12:56:34.534978
updated_at
string<date-time>
required
Object updation time (UTC date and time in ISO 8601 format)

Example:
2020-03-27T12:56:34.534978
user
UserAttribute
required
account
AccountAttribute
required
work_platform
WorkPlatformAttribute
required
platform_artist_id
string
required
Unique artist ID given by the source platform.

image_url
string<uri> or null
Image URL of the artist on the platform.

artist_name
string
required
Artist's name on the platform.

artist_url
string<uri> or null
URL of the artist's page/profile on the platform.

genre
array[string]
List of genres that the artist is categorised into by the work platform.

activity_type
string
required
Whether the artist is in the TOP artists of the user (as defined by the work platform) or is FOLLOWED by the user.

Allowed values:
FOLLOWED
TOP
metadata
Metadata
Metadata object representing meta information about resources.

offset
integer
required
Offset value passed in the query parameter.

Default:
0
Example:
0
limit
integer
required
Limit value passed in the query parameter.

Default:
10
Example:
10
from_date
string<date> or null
From date passed in the query parameter (YYYY-MM-DD).

Example:
2020-12-31
to_date
string<date> or null
To date passed in the query parameter (YYYY-MM-DD).

Example:
2021-12-31


# Sample Test/Show # 


Username
:
username
Password
:
password
account_id*
:
string
limit
:
defaults to: 10
offset
:
defaults to: 0
Send API Request

Staging


import axios from 'axios';

const options = {
  method: 'GET',
  url: 'https://api.staging.insightiq.ai/v1/media/activity/artists',
  headers: {Accept: 'application/json', Authorization: 'Basic 123'}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}


{
  "data": [
    {
      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
      "created_at": "2020-03-27T12:56:34.534978",
      "updated_at": "2020-03-27T12:56:34.534978",
      "user": {
        "id": "fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb",
        "name": "John Doe"
      },
      "account": {
        "id": "fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb",
        "platform_username": "john.doe@gmail.com"
      },
      "work_platform": {
        "id": "fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb",
        "name": "Instagram",
        "logo_url": "https://insightiq.ai/storage/instagram.png"
      },
      "platform_artist_id": "string",
      "image_url": "http://example.com",
      "artist_name": "string",
      "artist_url": "http://example.com",
      "genre": [
        "string"
      ],
      "activity_type": "FOLLOWED"
    }
  ],
  "metadata": {
    "offset": 0,
    "limit": 10,
    "from_date": "2020-12-31",
    "to_date": "2021-12-31"
  }
}
