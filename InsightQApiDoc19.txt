
3 Retrieve artists for an account (user activity) in bulk
post
https://api.staging.insightiq.ai/v1/media/activity/artists/search
Search information of the artists in bulk by providing IDs.

This is best used in combination with webhooks - you can directly take the IDs from "ACTIVITY-ARTISTS.ADDED" and "ACTIVITY-ARTISTS.UPDATED" webhook notifications and pass on to this API to get the updated artist items.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Body

application/json

application/json
ids
array[string<uuid>]
required
List of upto 100 activity artist IDs for which to fetch data

>= 1 items
<= 100 items
Responses
200
Returns all activity artist objects matching the IDs.

Headers
request-id
string<uuid>
required
Unique ID associated with this request. Please quote this request while requesting support.

Body

application/json

application/json
responses
/
200
data
array[ActivityArtist]
id
string<uuid>
required
Unique ID of the artist.

created_at
string<date-time>
required
Object creation time (UTC date and time in ISO 8601 format)

Example:
2020-03-27T12:56:34.534978
updated_at
string<date-time>
required
Object updation time (UTC date and time in ISO 8601 format)

Example:
2020-03-27T12:56:34.534978
user
UserAttribute
required
account
AccountAttribute
required
work_platform
WorkPlatformAttribute
required
platform_artist_id
string
required
Unique artist ID given by the source platform.

image_url
string<uri> or null
Image URL of the artist on the platform.

artist_name
string
required
Artist's name on the platform.

artist_url
string<uri> or null
URL of the artist's page/profile on the platform.

genre
array[string]
List of genres that the artist is categorised into by the work platform.

activity_type
string
required
Whether the artist is in the TOP artists of the user (as defined by the work platform) or is FOLLOWED by the user.

Allowed values:
FOLLOWED
TOP



# Sample Test/Show # 


Username
:
username
Password
:
password
{
  "ids": [
    "497f6eca-6276-4993-bfeb-53cbbbba6f08"
  ]
}
{
  "ids": [
    "497f6eca-6276-4993-bfeb-53cbbbba6f08"
  ]
}
Send API Request

Staging



import axios from 'axios';

const options = {
  method: 'POST',
  url: 'https://api.staging.insightiq.ai/v1/media/activity/artists/search',
  headers: {
    'Content-Type': 'application/json',
    Accept: 'application/json',
    Authorization: 'Basic 123'
  },
  data: {ids: ['497f6eca-6276-4993-bfeb-53cbbbba6f08']}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}


{
  "data": [
    {
      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
      "created_at": "2020-03-27T12:56:34.534978",
      "updated_at": "2020-03-27T12:56:34.534978",
      "user": {
        "id": "fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb",
        "name": "John Doe"
      },
      "account": {
        "id": "fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb",
        "platform_username": "john.doe@gmail.com"
      },
      "work_platform": {
        "id": "fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb",
        "name": "Instagram",
        "logo_url": "https://insightiq.ai/storage/instagram.png"
      },
      "platform_artist_id": "string",
      "image_url": "http://example.com",
      "artist_name": "string",
      "artist_url": "http://example.com",
      "genre": [
        "string"
      ],
      "activity_type": "FOLLOWED"
    }
  ]
}


