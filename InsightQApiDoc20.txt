
4  Retrieve a content (user activity)
get
https://api.staging.insightiq.ai/v1/media/activity/contents/{id}
Retrieve the information of the content with the supplied content ID.

Usually used in conjunction with the "ACTIVITY-CONTENTS.*" webhooks, read more.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Path Parameters
id
string
required
Unique identifier for the content

Responses
200
Returns activity content object.

Headers
request-id
string<uuid>
required
Unique ID associated with this request. Please quote this request while requesting support.

Body

application/json

application/json
responses
/
200
id
string<uuid>
required
Unique ID of the content item.

Example:
cfcc6603-1d8f-47d9-926a-4b91cc143105
created_at
string<date-time>
required
Object creation time (UTC date and time in ISO 8601 format)

Example:
2020-03-27T12:56:34.534978
updated_at
string<date-time>
required
Object updation time (UTC date and time in ISO 8601 format)

Example:
2020-03-27T12:56:34.534978
user
UserAttribute
id
string<uuid>
required
Unique ID of the user.

Example:
fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
name
string
required
Name of the user.

Example:
John Doe
account
AccountAttribute
id
string<uuid>
required
Unique ID of the account linked to this object.

Example:
fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
platform_username
string
required
Username of the account linked to this object.

Example:
john.doe@gmail.com
work_platform
WorkPlatformAttribute
id
string<uuid>
required
Unique ID of the work platform.

Example:
9bb8913b-ddd9-430b-a66a-d74d846e6c66
name
string
required
Name of the work platform.

Example:
Instagram, Twitter
logo_url
string<uri>
required
Image URL of the work platform logo.

Example:
https://insightiq.ai/storage/instagram.png
platform_content_id
string
required
Unique content ID on the platform.

Example:
12ccaf87
title
string
required
Title of the content item.

Example:
USA Tours
format
string
Media type of the content item.

Allowed values:
VIDEO
IMAGE
AUDIO
TEXT
OTHER
Example:
VIDEO
type
string
required
Platform specific content type.

Allowed values:
VIDEO
POST
STORY
TWEET
BLOG
IMAGE
THREAD
PODCAST
TRACK
OTHER
REELS
STREAM
FEED
IGTV
Example:
VIDEO
url
string<uri>
required
Platform content URL.

Example:
https://youtu.be/jzWweY4xPe8
description
string
Description of the content item.

Example:
US tours video.
thumbnail_url
string<uri>
Thumbnail URL of the content item, which can be used to download the media thumbnail. This is usually a signed URL and may have certain expiry limits so we recommend using it for downloads as soon as possible (such as when a webhook is received), if you are looking to cache thumbnails with you.

Example:
https://youtu.be/jzWweY4xPe8.png
embed_url
string<uri>
Embed URL of the content item, which can be used to embed the media item.

Example:
https://youtu.be/jzWweY4xPe8.png
activity_type
string
required
Whether the media content is in the TOP contents of the user (as defined by the work platform) or is SAVED by the user or was a RECENT media played by the user.

Allowed values:
TOP
RECENT
SAVED
additional_info
object
Platform or type specific content related fields.

genre
array[string]
List of genres that the content is categorised into by the platform.

artists
array[string]
List of artist names associated with the content.

album
string
Name of the album that the track belongs to.


# Sample Test/Show #


Username
:
username
Password
:
password
id*
:
string
Send API Request

Staging


import axios from 'axios';

const options = {
  method: 'GET',
  url: 'https://api.staging.insightiq.ai/v1/media/activity/contents/{id}',
  headers: {Accept: 'application/json', Authorization: 'Basic 123'}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}



{
  "id": "cfcc6603-1d8f-47d9-926a-4b91cc143105",
  "created_at": "2020-03-27T12:56:34.534978",
  "updated_at": "2020-03-27T12:56:34.534978",
  "user": {
    "id": "fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb",
    "name": "John Doe"
  },
  "account": {
    "id": "fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb",
    "platform_username": "john.doe@gmail.com"
  },
  "work_platform": {
    "id": "fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb",
    "name": "Instagram",
    "logo_url": "https://insightiq.ai/storage/instagram.png"
  },
  "platform_content_id": "12ccaf87",
  "title": "USA Tours",
  "format": "VIDEO",
  "type": "VIDEO",
  "url": "https://youtu.be/jzWweY4xPe8",
  "description": "US tours video.",
  "thumbnail_url": "https://youtu.be/jzWweY4xPe8.png",
  "embed_url": "https://youtu.be/jzWweY4xPe8.png",
  "activity_type": "TOP",
  "additional_info": {
    "genre": [
      "string"
    ],
    "artists": [
      "string"
    ],
    "album": "string"
  }
}



5  Retrieve contents for an account (user activity)
get
https://api.staging.insightiq.ai/v1/media/activity/contents
Lists all RECENT, TOP and SAVED contents from the activity history of the given account.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Query Parameters
limit
integer
The number of objects to be returned. It can be between 1 to 100. The default value is 10.

>= 1
<= 100
Default:
10
offset
integer
The number of objects to skip. Use this argument for pagination. The default value is 0.

>= 0
Default:
0
account_id
string<uuid>
required
Unique ID of the connected account.

Responses
200
Returns all contents for the given account.

Headers
request-id
string<uuid>
required
Unique ID associated with this request. Please quote this request while requesting support.

Body

application/json

application/json
responses
/
200
data
array[ActivityContent]
id
string<uuid>
required
Unique ID of the content item.

Example:
cfcc6603-1d8f-47d9-926a-4b91cc143105
created_at
string<date-time>
required
Object creation time (UTC date and time in ISO 8601 format)

Example:
2020-03-27T12:56:34.534978
updated_at
string<date-time>
required
Object updation time (UTC date and time in ISO 8601 format)

Example:
2020-03-27T12:56:34.534978
user
UserAttribute
account
AccountAttribute
work_platform
WorkPlatformAttribute
platform_content_id
string
required
Unique content ID on the platform.

Example:
12ccaf87
title
string
required
Title of the content item.

Example:
USA Tours
format
string
Media type of the content item.

Allowed values:
VIDEO
IMAGE
AUDIO
TEXT
OTHER
Example:
VIDEO
type
string
required
Platform specific content type.

Allowed values:
VIDEO
POST
STORY
TWEET
BLOG
IMAGE
THREAD
PODCAST
TRACK
OTHER
REELS
STREAM
FEED
IGTV
Example:
VIDEO
url
string<uri>
required
Platform content URL.

Example:
https://youtu.be/jzWweY4xPe8
description
string
Description of the content item.

Example:
US tours video.
thumbnail_url
string<uri>
Thumbnail URL of the content item, which can be used to download the media thumbnail. This is usually a signed URL and may have certain expiry limits so we recommend using it for downloads as soon as possible (such as when a webhook is received), if you are looking to cache thumbnails with you.

Example:
https://youtu.be/jzWweY4xPe8.png
embed_url
string<uri>
Embed URL of the content item, which can be used to embed the media item.

Example:
https://youtu.be/jzWweY4xPe8.png
activity_type
string
required
Whether the media content is in the TOP contents of the user (as defined by the work platform) or is SAVED by the user or was a RECENT media played by the user.

Allowed values:
TOP
RECENT
SAVED
additional_info
object
Platform or type specific content related fields.

metadata
Metadata
Metadata object representing meta information about resources.

offset
integer
required
Offset value passed in the query parameter.

Default:
0
Example:
0
limit
integer
required
Limit value passed in the query parameter.

Default:
10
Example:
10
from_date
string<date> or null
From date passed in the query parameter (YYYY-MM-DD).

Example:
2020-12-31
to_date
string<date> or null
To date passed in the query parameter (YYYY-MM-DD).

Example:
2021-12-31



# Sample Test/Show # 


Username
:
username
Password
:
password
account_id*
:
string
limit
:
defaults to: 10
offset
:
defaults to: 0
Send API Request

Staging



import axios from 'axios';

const options = {
  method: 'GET',
  url: 'https://api.staging.insightiq.ai/v1/media/activity/contents',
  headers: {Accept: 'application/json', Authorization: 'Basic 123'}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}



{
  "data": [
    {
      "id": "cfcc6603-1d8f-47d9-926a-4b91cc143105",
      "created_at": "2020-03-27T12:56:34.534978",
      "updated_at": "2020-03-27T12:56:34.534978",
      "user": {
        "id": "fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb",
        "name": "John Doe"
      },
      "account": {
        "id": "fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb",
        "platform_username": "john.doe@gmail.com"
      },
      "work_platform": {
        "id": "fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb",
        "name": "Instagram",
        "logo_url": "https://insightiq.ai/storage/instagram.png"
      },
      "platform_content_id": "12ccaf87",
      "title": "USA Tours",
      "format": "VIDEO",
      "type": "VIDEO",
      "url": "https://youtu.be/jzWweY4xPe8",
      "description": "US tours video.",
      "thumbnail_url": "https://youtu.be/jzWweY4xPe8.png",
      "embed_url": "https://youtu.be/jzWweY4xPe8.png",
      "activity_type": "TOP",
      "additional_info": {
        "genre": [
          "string"
        ],
        "artists": [
          "string"
        ],
        "album": "string"
      }
    }
  ],
  "metadata": {
    "offset": 0,
    "limit": 10,
    "from_date": "2020-12-31",
    "to_date": "2021-12-31"
  }
}


6   Retrieve contents for an account (user activity) in bulk
post
https://api.staging.insightiq.ai/v1/media/activity/contents/search
Search information of the contents in bulk by providing IDs.

This is best used in combination with webhooks - you can directly take the IDs from "ACTIVITY-CONTENTS.ADDED" and "ACTIVITY-CONTENTS.UPDATED" webhook notifications and pass on to this API to get the updated content items.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Body

application/json

application/json
ids
array[string<uuid>]
required
List of upto 100 activity content IDs for which to fetch data

>= 1 items
<= 100 items
Responses
200
Returns all activity content objects matching the IDs.

Headers
request-id
string<uuid>
required
Unique ID associated with this request. Please quote this request while requesting support.

Body

application/json

application/json
responses
/
200
data
array[ActivityContent]
id
string<uuid>
required
Unique ID of the content item.

Example:
cfcc6603-1d8f-47d9-926a-4b91cc143105
created_at
string<date-time>
required
Object creation time (UTC date and time in ISO 8601 format)

Example:
2020-03-27T12:56:34.534978
updated_at
string<date-time>
required
Object updation time (UTC date and time in ISO 8601 format)

Example:
2020-03-27T12:56:34.534978
user
UserAttribute
account
AccountAttribute
work_platform
WorkPlatformAttribute
platform_content_id
string
required
Unique content ID on the platform.

Example:
12ccaf87
title
string
required
Title of the content item.

Example:
USA Tours
format
string
Media type of the content item.

Allowed values:
VIDEO
IMAGE
AUDIO
TEXT
OTHER
Example:
VIDEO
type
string
required
Platform specific content type.

Allowed values:
VIDEO
POST
STORY
TWEET
BLOG
IMAGE
THREAD
PODCAST
TRACK
OTHER
REELS
STREAM
FEED
IGTV
Example:
VIDEO
url
string<uri>
required
Platform content URL.

Example:
https://youtu.be/jzWweY4xPe8
description
string
Description of the content item.

Example:
US tours video.
thumbnail_url
string<uri>
Thumbnail URL of the content item, which can be used to download the media thumbnail. This is usually a signed URL and may have certain expiry limits so we recommend using it for downloads as soon as possible (such as when a webhook is received), if you are looking to cache thumbnails with you.

Example:
https://youtu.be/jzWweY4xPe8.png
embed_url
string<uri>
Embed URL of the content item, which can be used to embed the media item.

Example:
https://youtu.be/jzWweY4xPe8.png
activity_type
string
required
Whether the media content is in the TOP contents of the user (as defined by the work platform) or is SAVED by the user or was a RECENT media played by the user.

Allowed values:
TOP
RECENT
SAVED
additional_info
object
Platform or type specific content related fields.



# Sample Test/Show # 

Username
:
username
Password
:
password
{
  "ids": [
    "497f6eca-6276-4993-bfeb-53cbbbba6f08"
  ]
}
{
  "ids": [
    "497f6eca-6276-4993-bfeb-53cbbbba6f08"
  ]
}
Send API Request

Staging



import axios from 'axios';

const options = {
  method: 'POST',
  url: 'https://api.staging.insightiq.ai/v1/media/activity/contents/search',
  headers: {
    'Content-Type': 'application/json',
    Accept: 'application/json',
    Authorization: 'Basic 123'
  },
  data: {ids: ['497f6eca-6276-4993-bfeb-53cbbbba6f08']}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}



{
  "data": [
    {
      "id": "cfcc6603-1d8f-47d9-926a-4b91cc143105",
      "created_at": "2020-03-27T12:56:34.534978",
      "updated_at": "2020-03-27T12:56:34.534978",
      "user": {
        "id": "fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb",
        "name": "John Doe"
      },
      "account": {
        "id": "fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb",
        "platform_username": "john.doe@gmail.com"
      },
      "work_platform": {
        "id": "fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb",
        "name": "Instagram",
        "logo_url": "https://insightiq.ai/storage/instagram.png"
      },
      "platform_content_id": "12ccaf87",
      "title": "USA Tours",
      "format": "VIDEO",
      "type": "VIDEO",
      "url": "https://youtu.be/jzWweY4xPe8",
      "description": "US tours video.",
      "thumbnail_url": "https://youtu.be/jzWweY4xPe8.png",
      "embed_url": "https://youtu.be/jzWweY4xPe8.png",
      "activity_type": "TOP",
      "additional_info": {
        "genre": [
          "string"
        ],
        "artists": [
          "string"
        ],
        "album": "string"
      }
    }
  ]
}



**-------- Creator Discovery ----------**

1  Search public profiles of creators
post
https://api.staging.insightiq.ai/v1/social/creators/profiles/search
Search for creator profiles using publicly available data based on available filters.

This API only returns a maximum of 500 results. For more results, please use the Async version of this API.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Body

application/json

application/json
work_platform_id
string
required
Target platform to search public profiles on

follower_count
object
Filter profiles by follower count

min
integer
Minimum followers

max
integer
Maximum followers

subscriber_count
object
Filter profiles by subscriber count

min
integer
Minimum subscribers

max
integer
Maximum subscribers

content_count
object
Filter profiles by content count

min
integer
Minimum number of contents

max
integer
Maximum number of contents

audience_gender
object
Filter profiles by audience gender

type
string
required
Gender type: ANY, FEMALE, MALE

Allowed values:
ANY
FEMALE
MALE
operator
string
required
Comparison operator

Allowed value:
GT
percentage_value
integer
required
Percentage value for the comparison

creator_gender
string
Filter profiles on the basis of the gender of the creator. ORGANIZATION is only valid for Twitch platform

Allowed values:
ANY
FEMALE
GENDER_NEUTRAL
MALE
ORGANIZATION
MALE_OR_FEMALE
audience_age
object
Filter profiles by audience age

min
integer
Minimum age of audience

max
integer
Maximum age of audience

percentage_value
integer
Filter by percentage of audience in the given age range

>= 0
<= 100
Example:
25
creator_age
object
Filter profiles by creator age

min
integer
Minimum age of creator

max
integer
Maximum age of creator

description_keywords
string
Filter profiles by a list of keywords that can be found in profile bio/introduction/description/phrases in the video or captions for YouTube.

is_verified
boolean
Filter profiles by platform verification status

has_contact_details
boolean
Filter profiles by availability of contact details

specific_contact_details
array[object]
Contact information

type
string
Allowed values:
BBM
EMAIL
FACEBOOK
INSTAGRAM
ITUNES
KAKAO
KIK
LINEID
LINKTREE
PHONE
PINTEREST
SARAHAH
SAYAT
SKYPE
SNAPCHAT
TELEGRAM
TIKTOK
TUMBLR
TWITCHTV
TWITTER
VIBER
VK
WECHAT
WEIBO
WHATSAPP
YOUTUBE
preference
string
Allowed values:
MUST_HAVE
SHOULD_HAVE
Default:
SHOULD_HAVE
last_post_timestamp
string<date-time>
Filter profiles by the timestamp (ISO 8601) of last post

Example:
2019-08-24T14:15:22
audience_language
array[object]
Filter profiles by audience's language, checkout this endpoint. You may also refer the "languages" table on this Airtable base

code
string
required
2 letter language code as per ISO 639-1

percentage_value
string
required
Percentage value for the comparison, which would always be a "greater than or equal to" comparison

creator_language
object
Filter profiles by creator's language, checkout this endpoint. You may also refer the "languages" table on this Airtable base

code
string
2 letter language code as per ISO 639-1

audience_interests
array[string]
List of interest names, which will return creators whose audience match even 1 of these interests. Only for Instagram. Checkout this endpoint. You may also refer the "interests and brands" table on this Airtable base.

audience_interest_affinities
array[object]
Audience interest affinities

value
string
Name of the

operation
string
Name of the operation

Allowed value:
GT
percentage_value
string
Percentage value

creator_interests
array[string]
List of interest names, which will return creators whose audience match even 1 of these interests. Only for Instagram. Checkout this endpoint. You may also refer the "interests and brands" table on this Airtable base.

audience_brand_affinities
array[string]
List of interest names, which will return creators whose audience match even 1 of these brand affinities. Only for Instagram. Checkout this endpoint. You may also refer the "interests and brands" table on this Airtable base

creator_brand_affinities
array[string]
List of interest names, which will return creators whose audience match even 1 of these brand affinities. Only for Instagram. Checkout this endpoint. You may also refer the "interests and brands" table on this Airtable base

average_likes
object
Filter profiles by average likes

min
integer
Minimum average likes of creator

max
integer
Maximum average likes of creator

average_views
object
Filter profiles by average views

min
integer
Minimum average views of creator

max
integer
Maximum average views of creator

engagement_rate
object
Filter profiles by engagement rates

percentage_value
string
required
Percentage value for the comparison, which would always be a "greater than or equal to" comparison

has_sponsored_posts
boolean
Filter profiles which have sponsored posts. Only for Instagram.

brand_sponsors
array[string]
Filter profiles which have been sponsored by certain brands, which will return creators who match even 1 of these brands. Only for Instagram.

instagram_options
object
reel_views
object
Filter profiles by average reels views

audience_locations
array[object]
InsightIQ's location identifers to be passed to this attribute. Checkout this endpoint to know the identifier for the location filter of your choice.

location_id
string<uuid>
InsightIQ's location identifier

percentage_value
number
Percentage value for the comparison

operator
string
Comparison operator

Allowed value:
GT
Default:
GT
creator_locations
array[string<uuid>]
InsightIQ's location identifers to be passed to this attribute. Checkout this endpoint to know the identifier for the location filter of your choice.

follower_growth
object
Filter profiles by follower growth rate

interval
integer
required
Time interval of growth

interval_unit
string
required
Unit of time interval

Allowed value:
MONTH
operator
string
required
Comparison operator

Allowed value:
GT
percentage_value
integer
required
Percentage value for the comparison

subscriber_growth
object
Filter profiles by subscriber growth rate

interval
integer
required
Time interval of growth

interval_unit
string
required
Unit of time interval

Allowed value:
MONTH
operator
string
required
Comparison operator

Allowed value:
GT
percentage_value
integer
required
Percentage value for the comparison

bio_phrase
string
Filter profiles by the phrase they use in their bio

hashtags
array[object]
Filter profiles by hashtags.

name
string
required
Please provide hashtags without # prefix

mentions
array[object]
Filter profiles by mentions.

name
string
required
Please provide mentions without @ prefix

topic_relevance
object
Filter profiles by

name
array[string]
Pass the topic name.

weight
number
Default:
0.5
threshold
number
Default:
0.55
audience_lookalikes
string
Filter profiles whose posts look like the given handle/username. Please pass the social handle without the preceding @.

platform_account_type
string
Filter profiles by account type

Allowed values:
ANY
BUSINESS
CREATOR
PERSONAL
PARTNERS
AFFILIATES
NULL
creator_account_type
array[string]
Filter profiles by creator account type

Allowed values:
ANY
PERSONAL
BUSINESS
CREATOR
creator_lookalikes
string
Filter profiles whose posts look like the given handle/username. Please pass the social handle with the preceding @.

audience_location
array[object]
Avoid using this filter. Use the audience_locations filter instead.

name
string
Name of the location

percentage_value
integer
Percentage value for the comparison

operator
string
Comparsion operator.

Allowed value:
GT
Default:
GT
sort_by
object
required
Sorting order for the search results

field
string
required
Field to sort by.

Allowed values:
AVERAGE_LIKES
FOLLOWER_COUNT
ENGAGEMENT_RATE
DESCRIPTION
AVERAGE_VIEWS
CONTENT_COUNT
REELS_VIEWS
FOLLOWER_GROWTH
TOTAL_VIEWS_GROWTH
TOTAL_LIKES_GROWTH
AUDIENCE_LOCATIONS
AUDIENCE_LANGUAGE
AUDIENCE_BRAND_AFFINITIES
AUDIENCE_INTERESTS
AUDIENCE_AGE
CREATOR_LOOKALIKES
AUDIENCE_LOOKALIKES
AVERAGE_LIKE
AUDIENCE_LOCATION
TOPIC_RELEVANCE
PEAK_VIEWERS
AVG_CONCURRENT_VIEWERS
AIRTIME
HOURS_WATCHED
order
string
required
Ordering pattern

Allowed value:
DESCENDING
limit
integer
The number of search results to be returned. It can be between 1 to 100. The default value is 10. Limit + offset should be less than 500.

<= 500
Default:
10
offset
integer
The number of search results to skip. Use this argument for pagination. The default value is 0. Limit + offset should be less than 500.

Default:
0
audience_source
string
Filter profiles by source of the audience data

Allowed values:
ANY
LIKERS
FOLLOWERS
COMMENTERS
Default:
LIKERS
total_engagements
object
Filter profiles by total number of engagements

min
integer
max
integer
audience_credibility_category
array[string]
Filter profiles according to the given credibility categories given

Allowed values:
BAD
LOW
NORMAL
HIGH
EXCELLENT
audience_credibility_score
number
Filter profiles according to the given credibility score or higher

>= 0
<= 1
is_official_artist
boolean
Filter YouTube profiles which are official artists

Default:
false
has_audience_info
boolean
Fetches only profiles with audience info

Default:
false
share_count
object
Filter TikTok profiles by count of shares

min
integer
max
integer
save_count
object
Filter TikTok profiles by count of saves

min
integer
max
integer
exclude_private_profiles
boolean
Filter to exclude private profiles

Default:
false
creator_age_bracket
any
Only for Twitch

Allowed values:
OVER_18
OVER_21
livestream_options
object
Only for Twitch

recent_activity
string<uri>
Game/Category slug on Twitch. For example: if you want to search for League of Legends, the Twitch category link is https://www.twitch.tv/directory/category/league-of-legends. You should input 'league-of-legends' for this.

category
any
Allowed values:
IRL
GAMING
ESPORTS
SPORTS
MUSIC
SLOTS
CHESS
categories_streamed
any
Allowed values:
1
2-5
6-10
11-25
25-1000
hours_watched
object
average_concurrent_viewers
object
absolute_follower_growth
object
peak_viewers
object
vtubers
object
post_type
any
This filter is only applicable to YouTube. For other platforms, it will be ignored.

Allowed values:
ALL (default)
VIDEOS
SHORTS
STREAMS
views_growth
object
Filter profiles by views growth rate

operator
any
Allowed values:
GT (Greater than)
LT (Less than)
interval_unit
any
Allowed value:
Month
interval
integer
>= 1
<= 6
percentage_value
number
Responses
200
Returns search results according to the given filters

Headers
request-id
string<uuid>
required
Unique ID associated with this request. Please quote this request while requesting support.

Body

application/json

application/json
responses
/
200
data
array[CreatorProfileBasicDetails]
platform_username
string
required
Profile username on the platform

url
string<uri>
required
Profile URL from the platform

image_url
string<uri>
required
Profile image URL from the platform

follower_count
integer
required
Number of followers

subscriber_count
integer
required
Number of subscribers

is_verified
boolean
required
Whether the profile is verified by the platform

work_platform
WorkPlatformAttribute
required
full_name
string
required
Profile full name on the platform

introduction
string
required
Description of the profile.Show all...

platform_account_type
string
required
Account type of the profile, such as PERSONAL, CREATOR, BUSINESS, etc.

Allowed values:
PERSONAL
CREATOR
BUSINESS
ANY
gender
string
required
Gender of the profile

age_group
string
required
Age group of the profile

language
string
required
2 letter language code as per ISO 639-1. Checkout this endpoint. You may also refer the "languages" table on this Airtable base

content_count
integer
required
Number of contents posted by the profile

engagement_rate
number
required
Profile engagement rate, i.e., total likes of all posts divided by the number of followers

average_likes
integer
required
Average like count of the profile

average_views
integer
required
Average view count of the profile

creator_location
object
required
Profile location details. Checkout this endpoint. You may also refer the "locations" table on this Airtable base.

filter_match
FilterMatch
contact_details
array[object]
required
Publicly available contact information about the profile

metadata
object
Metadata object representing meta information about resources.

offset
integer
Default:
0
limit
integer
Default:
10


# Sample Test/Show # 

Username
:
username
Password
:
password
{
  "work_platform_id": "string",
  "follower_count": {
    "min": 0,
    "max": 0
  },
  "subscriber_count": {
    "min": 0,
    "max": 0
  },
  "content_count": {
    "min": 0,
    "max": 0
  },
  "audience_gender": {
    "type": "ANY",
    "operator": "GT",
    "percentage_value": 0
  },
  "creator_gender": "ANY",
  "audience_age": {
    "min": 0,
    "max": 0,
    "percentage_value": 25
  },
  "creator_age": {
    "min": 0,
    "max": 0
  },
  "description_keywords": "string",
  "is_verified": true,
  "has_contact_details": true,
  "specific_contact_details": [
    {
      "type": "BBM",
      "preference": "SHOULD_HAVE"
    }
  ],
  "last_post_timestamp": "2019-08-24T14:15:22",
  "audience_language": [
    {
      "code": "string",
      "percentage_value": "string"
    }
  ],
  "creator_language": {
    "code": "string"
  },
  "audience_interests": [
    "string"
  ],
  "audience_interest_affinities": [
    {
      "value": "string",
      "operation": "GT",
      "percentage_value": "string"
    }
  ],
  "creator_interests": [
    "string"
  ],
  "audience_brand_affinities": [
    "string"
  ],
  "creator_brand_affinities": [
    "string"
  ],
  "average_likes": {
    "min": 0,
    "max": 0
  },
  "average_views": {
    "min": 0,
    "max": 0
  },
  "engagement_rate": {
    "percentage_value": "string"
  },
  "has_sponsored_posts": true,
  "brand_sponsors": [
    "string"
  ],
  "instagram_options": {
    "reel_views": {
      "min": 0,
      "max": 0
    }
  },
  "audience_locations": [
    {
      "location_id": "46910cc3-ab41-4b80-b4a7-94dab9f1b795",
      "percentage_value": 0,
      "operator": "GT"
    }
  ],
  "creator_locations": [
    "497f6eca-6276-4993-bfeb-53cbbbba6f08"
  ],
  "follower_growth": {
    "interval": 0,
    "interval_unit": "MONTH",
    "operator": "GT",
    "percentage_value": 0
  },
  "subscriber_growth": {
    "interval": 0,
    "interval_unit": "MONTH",
    "operator": "GT",
    "percentage_value": 0
  },
  "bio_phrase": "string",
  "hashtags": [
    {
      "name": "string"
    }
  ],
  "mentions": [
    {
      "name": "string"
    }
  ],
  "topic_relevance": {
    "name": [
      "string"
    ],
    "weight": 0.5,
    "threshold": 0.55
  },
  "audience_lookalikes": "string",
  "platform_account_type": "ANY",
  "creator_account_type": [
    "ANY"
  ],
  "creator_lookalikes": "string",
  "audience_location": [
    {
      "name": "string",
      "percentage_value": 0,
      "operator": "GT"
    }
  ],
  "sort_by": {
    "field": "AVERAGE_LIKES",
    "order": "DESCENDING"
  },
  "limit": 10,
  "offset": 0,
  "audience_source": "LIKERS",
  "total_engagements": {
    "min": 0,
    "max": 0
  },
  "audience_credibility_category": [
    "BAD"
  ],
  "audience_credibility_score": 0,
  "is_official_artist": false,
  "has_audience_info": false,
  "share_count": {
    "min": 0,
    "max": 0
  },
  "save_count": {
    "min": 0,
    "max": 0
  },
  "exclude_private_profiles": false,
  "creator_age_bracket": "OVER_18",
  "livestream_options": {
    "recent_activity": "http://example.com",
    "category": "IRL",
    "categories_streamed": 1,
    "hours_watched": {
      "min": 0,
      "max": 0,
      "over_100_percent_growth": true
    },
    "average_concurrent_viewers": {
      "min": 0,
      "max": 0,
      "over_100_percent_growth": true
    },
    "absolute_follower_growth": {
      "min": 0,
      "max": 0,
      "over_100_percent_growth": true
    },
    "peak_viewers": {
      "min": 0,
      "max": 0
    },
    "vtubers": {
      "only_vtubers": true,
      "affiliation": "INDEPENDENT"
    }
  },
  "post_type": "ALL (default)",
  "views_growth": {
    "operator": "GT (Greater than)",
    "interval_unit": "Month",
    "interval": 1,
    "percentage_value": 0
  }
}
{
  "work_platform_id": "string",
  "follower_count": {
    "min": 0,
    "max": 0
  },
  "subscriber_count": {
    "min": 0,
    "max": 0
  },
  "content_count": {
    "min": 0,
    "max": 0
  },
  "audience_gender": {
    "type": "ANY",
    "operator": "GT",
    "percentage_value": 0
  },
  "creator_gender": "ANY",
  "audience_age": {
    "min": 0,
    "max": 0,
    "percentage_value": 25
  },
  "creator_age": {
    "min": 0,
    "max": 0
  },
  "description_keywords": "string",
  "is_verified": true,
  "has_contact_details": true,
  "specific_contact_details": [
    {
      "type": "BBM",
      "preference": "SHOULD_HAVE"
    }
  ],
  "last_post_timestamp": "2019-08-24T14:15:22",
  "audience_language": [
    {
      "code": "string",
      "percentage_value": "string"
    }
  ],
  "creator_language": {
    "code": "string"
  },
  "audience_interests": [
    "string"
  ],
  "audience_interest_affinities": [
    {
      "value": "string",
      "operation": "GT",
      "percentage_value": "string"
    }
  ],
  "creator_interests": [
    "string"
  ],
  "audience_brand_affinities": [
    "string"
  ],
  "creator_brand_affinities": [
    "string"
  ],
  "average_likes": {
    "min": 0,
    "max": 0
  },
  "average_views": {
    "min": 0,
    "max": 0
  },
  "engagement_rate": {
    "percentage_value": "string"
  },
  "has_sponsored_posts": true,
  "brand_sponsors": [
    "string"
  ],
  "instagram_options": {
    "reel_views": {
      "min": 0,
      "max": 0
    }
  },
  "audience_locations": [
    {
      "location_id": "46910cc3-ab41-4b80-b4a7-94dab9f1b795",
      "percentage_value": 0,
      "operator": "GT"
    }
  ],
  "creator_locations": [
    "497f6eca-6276-4993-bfeb-53cbbbba6f08"
  ],
  "follower_growth": {
    "interval": 0,
    "interval_unit": "MONTH",
    "operator": "GT",
    "percentage_value": 0
  },
  "subscriber_growth": {
    "interval": 0,
    "interval_unit": "MONTH",
    "operator": "GT",
    "percentage_value": 0
  },
  "bio_phrase": "string",
  "hashtags": [
    {
      "name": "string"
    }
  ],
  "mentions": [
    {
      "name": "string"
    }
  ],
  "topic_relevance": {
    "name": [
      "string"
    ],
    "weight": 0.5,
    "threshold": 0.55
  },
  "audience_lookalikes": "string",
  "platform_account_type": "ANY",
  "creator_account_type": [
    "ANY"
  ],
  "creator_lookalikes": "string",
  "audience_location": [
    {
      "name": "string",
      "percentage_value": 0,
      "operator": "GT"
    }
  ],
  "sort_by": {
    "field": "AVERAGE_LIKES",
    "order": "DESCENDING"
  },
  "limit": 10,
  "offset": 0,
  "audience_source": "LIKERS",
  "total_engagements": {
    "min": 0,
    "max": 0
  },
  "audience_credibility_category": [
    "BAD"
  ],
  "audience_credibility_score": 0,
  "is_official_artist": false,
  "has_audience_info": false,
  "share_count": {
    "min": 0,
    "max": 0
  },
  "save_count": {
    "min": 0,
    "max": 0
  },
  "exclude_private_profiles": false,
  "creator_age_bracket": "OVER_18",
  "livestream_options": {
    "recent_activity": "http://example.com",
    "category": "IRL",
    "categories_streamed": 1,
    "hours_watched": {
      "min": 0,
      "max": 0,
      "over_100_percent_growth": true
    },
    "average_concurrent_viewers": {
      "min": 0,
      "max": 0,
      "over_100_percent_growth": true
    },
    "absolute_follower_growth": {
      "min": 0,
      "max": 0,
      "over_100_percent_growth": true
    },
    "peak_viewers": {
      "min": 0,
      "max": 0
    },
    "vtubers": {
      "only_vtubers": true,
      "affiliation": "INDEPENDENT"
    }
  },
  "post_type": "ALL (default)",
  "views_growth": {
    "operator": "GT (Greater than)",
    "interval_unit": "Month",
    "interval": 1,
    "percentage_value": 0
  }
}
Send API Request

Staging


import axios from 'axios';

const options = {
  method: 'POST',
  url: 'https://api.staging.insightiq.ai/v1/social/creators/profiles/search',
  headers: {
    'Content-Type': 'application/json',
    Accept: 'application/json',
    Authorization: 'Basic 123'
  },
  data: {
    work_platform_id: 'string',
    follower_count: {min: 0, max: 0},
    subscriber_count: {min: 0, max: 0},
    content_count: {min: 0, max: 0},
    audience_gender: {type: 'ANY', operator: 'GT', percentage_value: 0},
    creator_gender: 'ANY',
    audience_age: {min: 0, max: 0, percentage_value: 25},
    creator_age: {min: 0, max: 0},
    description_keywords: 'string',
    is_verified: true,
    has_contact_details: true,
    specific_contact_details: [{type: 'BBM', preference: 'SHOULD_HAVE'}],
    last_post_timestamp: '2019-08-24T14:15:22',
    audience_language: [{code: 'string', percentage_value: 'string'}],
    creator_language: {code: 'string'},
    audience_interests: ['string'],
    audience_interest_affinities: [{value: 'string', operation: 'GT', percentage_value: 'string'}],
    creator_interests: ['string'],
    audience_brand_affinities: ['string'],
    creator_brand_affinities: ['string'],
    average_likes: {min: 0, max: 0},
    average_views: {min: 0, max: 0},
    engagement_rate: {percentage_value: 'string'},
    has_sponsored_posts: true,
    brand_sponsors: ['string'],
    instagram_options: {reel_views: {min: 0, max: 0}},
    audience_locations: [
      {
        location_id: '46910cc3-ab41-4b80-b4a7-94dab9f1b795',
        percentage_value: 0,
        operator: 'GT'
      }
    ],
    creator_locations: ['497f6eca-6276-4993-bfeb-53cbbbba6f08'],
    follower_growth: {interval: 0, interval_unit: 'MONTH', operator: 'GT', percentage_value: 0},
    subscriber_growth: {interval: 0, interval_unit: 'MONTH', operator: 'GT', percentage_value: 0},
    bio_phrase: 'string',
    hashtags: [{name: 'string'}],
    mentions: [{name: 'string'}],
    topic_relevance: {name: ['string'], weight: 0.5, threshold: 0.55},
    audience_lookalikes: 'string',
    platform_account_type: 'ANY',
    creator_account_type: ['ANY'],
    creator_lookalikes: 'string',
    audience_location: [{name: 'string', percentage_value: 0, operator: 'GT'}],
    sort_by: {field: 'AVERAGE_LIKES', order: 'DESCENDING'},
    limit: 10,
    offset: 0,
    audience_source: 'LIKERS',
    total_engagements: {min: 0, max: 0},
    audience_credibility_category: ['BAD'],
    audience_credibility_score: 0,
    is_official_artist: false,
    has_audience_info: false,
    share_count: {min: 0, max: 0},
    save_count: {min: 0, max: 0},
    exclude_private_profiles: false,
    creator_age_bracket: 'OVER_18',
    livestream_options: {
      recent_activity: 'http://example.com',
      category: 'IRL',
      categories_streamed: 1,
      hours_watched: {min: 0, max: 0, over_100_percent_growth: true},
      average_concurrent_viewers: {min: 0, max: 0, over_100_percent_growth: true},
      absolute_follower_growth: {min: 0, max: 0, over_100_percent_growth: true},
      peak_viewers: {min: 0, max: 0},
      vtubers: {only_vtubers: true, affiliation: 'INDEPENDENT'}
    },
    post_type: 'ALL (default)',
    views_growth: {
      operator: 'GT (Greater than)',
      interval_unit: 'Month',
      interval: 1,
      percentage_value: 0
    }
  }
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}



{
  "data": [
    {
      "platform_username": "string",
      "url": "http://example.com",
      "image_url": "http://example.com",
      "follower_count": 0,
      "subscriber_count": 0,
      "is_verified": true,
      "work_platform": {
        "id": "fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb",
        "name": "Instagram",
        "logo_url": "https://insightiq.ai/storage/instagram.png"
      },
      "full_name": "string",
      "introduction": "string",
      "platform_account_type": "PERSONAL",
      "gender": "string",
      "age_group": "string",
      "language": "string",
      "content_count": 0,
      "engagement_rate": 0,
      "location": {
        "city": "string",
        "state": "string",
        "country": "string"
      },
      "contact_details": [
        {
          "type": "string",
          "value": "string"
        }
      ]
    }
  ],
  "metadata": {
    "offset": 0,
    "limit": 10
  }
}


2   Search public profiles of creators
post
https://api.staging.insightiq.ai/v1/social/creators/profiles/quick-search
Search for creator profiles using publicly available data based on available filters. This API does not return contact information, to obtain contact info please use the /profiles/search API instead.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Body

application/json

application/json
work_platform_id
string
required
Target platform to search public profiles on

follower_count
object
Filter profiles by follower count

min
integer
Minimum followers

max
integer
Maximum followers

subscriber_count
object
Filter profiles by subscriber count

min
integer
Minimum subscribers

max
integer
Maximum subscribers

content_count
object
Filter profiles by content count

min
integer
Minimum number of contents

max
integer
Maximum number of contents

audience_gender
object
Filter profiles by audience gender

type
string
required
Gender type: ANY, FEMALE, MALE

Allowed values:
ANY
FEMALE
MALE
operator
string
required
Comparison operator

Allowed value:
GT
percentage_value
integer
required
Percentage value for the comparison

creator_gender
string
Filter profiles on the basis of the gender of the creator. ORGANIZATION is only valid for Twitch platform

Allowed values:
ANY
FEMALE
GENDER_NEUTRAL
MALE
ORGANIZATION
MALE_OR_FEMALE
audience_age
object
Filter profiles by audience age

min
integer
Minimum age of audience

max
integer
Maximum age of audience

percentage_value
integer
Filter by percentage of audience in the given age range

>= 0
<= 100
Example:
25
creator_age
object
Filter profiles by creator age

min
integer
Minimum age of creator

max
integer
Maximum age of creator

description_keywords
string
Filter profiles by a list of keywords that can be found in profile bio/introduction/description/phrases in the video or captions for YouTube.

is_verified
boolean
Filter profiles by platform verification status

has_contact_details
boolean
Filter profiles by availability of contact details

specific_contact_details
array[object]
Contact information

type
string
Allowed values:
BBM
EMAIL
FACEBOOK
INSTAGRAM
ITUNES
KAKAO
KIK
LINEID
LINKTREE
PHONE
PINTEREST
SARAHAH
SAYAT
SKYPE
SNAPCHAT
TELEGRAM
TIKTOK
TUMBLR
TWITCHTV
TWITTER
VIBER
VK
WECHAT
WEIBO
WHATSAPP
YOUTUBE
preference
string
Allowed values:
MUST_HAVE
SHOULD_HAVE
Default:
SHOULD_HAVE
last_post_timestamp
string<date-time>
Filter profiles by the timestamp (ISO 8601) of last post

Example:
2019-08-24T14:15:22
audience_language
array[object]
Filter profiles by audience's language, checkout this endpoint. You may also refer the "languages" table on this Airtable base

code
string
required
2 letter language code as per ISO 639-1

percentage_value
string
required
Percentage value for the comparison, which would always be a "greater than or equal to" comparison

creator_language
object
Filter profiles by creator's language, checkout this endpoint. You may also refer the "languages" table on this Airtable base

code
string
2 letter language code as per ISO 639-1

audience_interests
array[string]
List of interest names, which will return creators whose audience match even 1 of these interests. Only for Instagram. Checkout this endpoint. You may also refer the "interests and brands" table on this Airtable base.

audience_interest_affinities
array[object]
Audience interest affinities

value
string
Name of the

operation
string
Name of the operation

Allowed value:
GT
percentage_value
string
Percentage value

creator_interests
array[string]
List of interest names, which will return creators whose audience match even 1 of these interests. Only for Instagram. Checkout this endpoint. You may also refer the "interests and brands" table on this Airtable base.

audience_brand_affinities
array[string]
List of interest names, which will return creators whose audience match even 1 of these brand affinities. Only for Instagram. Checkout this endpoint. You may also refer the "interests and brands" table on this Airtable base

creator_brand_affinities
array[string]
List of interest names, which will return creators whose audience match even 1 of these brand affinities. Only for Instagram. Checkout this endpoint. You may also refer the "interests and brands" table on this Airtable base

average_likes
object
Filter profiles by average likes

min
integer
Minimum average likes of creator

max
integer
Maximum average likes of creator

average_views
object
Filter profiles by average views

min
integer
Minimum average views of creator

max
integer
Maximum average views of creator

engagement_rate
object
Filter profiles by engagement rates

percentage_value
string
required
Percentage value for the comparison, which would always be a "greater than or equal to" comparison

has_sponsored_posts
boolean
Filter profiles which have sponsored posts. Only for Instagram.

brand_sponsors
array[string]
Filter profiles which have been sponsored by certain brands, which will return creators who match even 1 of these brands. Only for Instagram.

instagram_options
object
reel_views
object
Filter profiles by average reels views

audience_locations
array[object]
InsightIQ's location identifers to be passed to this attribute. Checkout this endpoint to know the identifier for the location filter of your choice.

location_id
string<uuid>
InsightIQ's location identifier

percentage_value
number
Percentage value for the comparison

operator
string
Comparison operator

Allowed value:
GT
Default:
GT
creator_locations
array[string<uuid>]
InsightIQ's location identifers to be passed to this attribute. Checkout this endpoint to know the identifier for the location filter of your choice.

follower_growth
object
Filter profiles by follower growth rate

interval
integer
required
Time interval of growth

interval_unit
string
required
Unit of time interval

Allowed value:
MONTH
operator
string
required
Comparison operator

Allowed value:
GT
percentage_value
integer
required
Percentage value for the comparison

subscriber_growth
object
Filter profiles by subscriber growth rate

interval
integer
required
Time interval of growth

interval_unit
string
required
Unit of time interval

Allowed value:
MONTH
operator
string
required
Comparison operator

Allowed value:
GT
percentage_value
integer
required
Percentage value for the comparison

bio_phrase
string
Filter profiles by the phrase they use in their bio

hashtags
array[object]
Filter profiles by hashtags.

name
string
required
Please provide hashtags without # prefix

mentions
array[object]
Filter profiles by mentions.

name
string
required
Please provide mentions without @ prefix

topic_relevance
object
Filter profiles by

name
array[string]
Pass the topic name.

weight
number
Default:
0.5
threshold
number
Default:
0.55
audience_lookalikes
string
Filter profiles whose posts look like the given handle/username. Please pass the social handle without the preceding @.

platform_account_type
string
Filter profiles by account type

Allowed values:
ANY
BUSINESS
CREATOR
PERSONAL
PARTNERS
AFFILIATES
NULL
creator_account_type
array[string]
Filter profiles by creator account type

Allowed values:
ANY
PERSONAL
BUSINESS
CREATOR
creator_lookalikes
string
Filter profiles whose posts look like the given handle/username. Please pass the social handle with the preceding @.

audience_location
array[object]
Avoid using this filter. Use the audience_locations filter instead.

name
string
Name of the location

percentage_value
integer
Percentage value for the comparison

operator
string
Comparsion operator.

Allowed value:
GT
Default:
GT
sort_by
object
required
Sorting order for the search results

field
string
required
Field to sort by.

Allowed values:
AVERAGE_LIKES
FOLLOWER_COUNT
ENGAGEMENT_RATE
DESCRIPTION
AVERAGE_VIEWS
CONTENT_COUNT
REELS_VIEWS
FOLLOWER_GROWTH
TOTAL_VIEWS_GROWTH
TOTAL_LIKES_GROWTH
AUDIENCE_LOCATIONS
AUDIENCE_LANGUAGE
AUDIENCE_BRAND_AFFINITIES
AUDIENCE_INTERESTS
AUDIENCE_AGE
CREATOR_LOOKALIKES
AUDIENCE_LOOKALIKES
AVERAGE_LIKE
AUDIENCE_LOCATION
TOPIC_RELEVANCE
PEAK_VIEWERS
AVG_CONCURRENT_VIEWERS
AIRTIME
HOURS_WATCHED
order
string
required
Ordering pattern

Allowed value:
DESCENDING
limit
integer
The number of search results to be returned. It can be between 1 to 100. The default value is 10. Limit + offset should be less than 500.

<= 500
Default:
10
offset
integer
The number of search results to skip. Use this argument for pagination. The default value is 0. Limit + offset should be less than 500.

Default:
0
audience_source
string
Filter profiles by source of the audience data

Allowed values:
ANY
LIKERS
FOLLOWERS
COMMENTERS
Default:
LIKERS
total_engagements
object
Filter profiles by total number of engagements

min
integer
max
integer
audience_credibility_category
array[string]
Filter profiles according to the given credibility categories given

Allowed values:
BAD
LOW
NORMAL
HIGH
EXCELLENT
audience_credibility_score
number
Filter profiles according to the given credibility score or higher

>= 0
<= 1
is_official_artist
boolean
Filter YouTube profiles which are official artists

Default:
false
has_audience_info
boolean
Fetches only profiles with audience info

Default:
false
share_count
object
Filter TikTok profiles by count of shares

min
integer
max
integer
save_count
object
Filter TikTok profiles by count of saves

min
integer
max
integer
exclude_private_profiles
boolean
Filter to exclude private profiles

Default:
false
creator_age_bracket
any
Only for Twitch

Allowed values:
OVER_18
OVER_21
livestream_options
object
Only for Twitch

recent_activity
string<uri>
Game/Category slug on Twitch. For example: if you want to search for League of Legends, the Twitch category link is https://www.twitch.tv/directory/category/league-of-legends. You should input 'league-of-legends' for this.

category
any
Allowed values:
IRL
GAMING
ESPORTS
SPORTS
MUSIC
SLOTS
CHESS
categories_streamed
any
Allowed values:
1
2-5
6-10
11-25
25-1000
hours_watched
object
average_concurrent_viewers
object
absolute_follower_growth
object
peak_viewers
object
vtubers
object
post_type
any
This filter is only applicable to YouTube. For other platforms, it will be ignored.

Allowed values:
ALL (default)
VIDEOS
SHORTS
STREAMS
views_growth
object
Filter profiles by views growth rate

operator
any
Allowed values:
GT (Greater than)
LT (Less than)
interval_unit
any
Allowed value:
Month
interval
integer
>= 1
<= 6
percentage_value
number
Responses
200
OK

Body

application/json

application/json
responses
/
200
data
array[CreatorProfileBasicDetails]
platform_username
string
required
Profile username on the platform

url
string<uri>
required
Profile URL from the platform

image_url
string<uri>
required
Profile image URL from the platform

follower_count
integer
required
Number of followers

subscriber_count
integer
required
Number of subscribers

is_verified
boolean
required
Whether the profile is verified by the platform

work_platform
WorkPlatformAttribute
required
full_name
string
required
Profile full name on the platform

introduction
string
required
Description of the profile.Show all...

platform_account_type
string
required
Account type of the profile, such as PERSONAL, CREATOR, BUSINESS, etc.

Allowed values:
PERSONAL
CREATOR
BUSINESS
PARTNERS
AFFILIATES
NULL
gender
string
required
Gender of the profile

age_group
string
required
Age group of the profile

language
string
required
2 letter language code as per ISO 639-1. Checkout this endpoint. You may also refer the "languages" table on this Airtable base

content_count
integer
required
Number of contents posted by the profile

engagement_rate
number
required
Profile engagement rate, i.e., total likes of all posts divided by the number of followers

location
object
required
Profile location details. Checkout this endpoint. You may also refer the "locations" table on this Airtable base.

livestream_metrics
object
Only for Twitch

metadata
Metadata
required
Metadata object representing meta information about resources.

offset
integer
required
Offset value passed in the query parameter.

Default:
0
Example:
0
limit
integer
required
Limit value passed in the query parameter.

Default:
10
Example:
10
from_date
string<date> or null
From date passed in the query parameter (YYYY-MM-DD).

Example:
2020-12-31
to_date
string<date> or null
To date passed in the query parameter (YYYY-MM-DD).

Example:
2021-12-31


# Sample Test/Show # 

Username
:
username
Password
:
password
{
  "work_platform_id": "string",
  "follower_count": {
    "min": 0,
    "max": 0
  },
  "subscriber_count": {
    "min": 0,
    "max": 0
  },
  "content_count": {
    "min": 0,
    "max": 0
  },
  "audience_gender": {
    "type": "ANY",
    "operator": "GT",
    "percentage_value": 0
  },
  "creator_gender": "ANY",
  "audience_age": {
    "min": 0,
    "max": 0,
    "percentage_value": 25
  },
  "creator_age": {
    "min": 0,
    "max": 0
  },
  "description_keywords": "string",
  "is_verified": true,
  "has_contact_details": true,
  "specific_contact_details": [
    {
      "type": "BBM",
      "preference": "SHOULD_HAVE"
    }
  ],
  "last_post_timestamp": "2019-08-24T14:15:22",
  "audience_language": [
    {
      "code": "string",
      "percentage_value": "string"
    }
  ],
  "creator_language": {
    "code": "string"
  },
  "audience_interests": [
    "string"
  ],
  "audience_interest_affinities": [
    {
      "value": "string",
      "operation": "GT",
      "percentage_value": "string"
    }
  ],
  "creator_interests": [
    "string"
  ],
  "audience_brand_affinities": [
    "string"
  ],
  "creator_brand_affinities": [
    "string"
  ],
  "average_likes": {
    "min": 0,
    "max": 0
  },
  "average_views": {
    "min": 0,
    "max": 0
  },
  "engagement_rate": {
    "percentage_value": "string"
  },
  "has_sponsored_posts": true,
  "brand_sponsors": [
    "string"
  ],
  "instagram_options": {
    "reel_views": {
      "min": 0,
      "max": 0
    }
  },
  "audience_locations": [
    {
      "location_id": "46910cc3-ab41-4b80-b4a7-94dab9f1b795",
      "percentage_value": 0,
      "operator": "GT"
    }
  ],
  "creator_locations": [
    "497f6eca-6276-4993-bfeb-53cbbbba6f08"
  ],
  "follower_growth": {
    "interval": 0,
    "interval_unit": "MONTH",
    "operator": "GT",
    "percentage_value": 0
  },
  "subscriber_growth": {
    "interval": 0,
    "interval_unit": "MONTH",
    "operator": "GT",
    "percentage_value": 0
  },
  "bio_phrase": "string",
  "hashtags": [
    {
      "name": "string"
    }
  ],
  "mentions": [
    {
      "name": "string"
    }
  ],
  "topic_relevance": {
    "name": [
      "string"
    ],
    "weight": 0.5,
    "threshold": 0.55
  },
  "audience_lookalikes": "string",
  "platform_account_type": "ANY",
  "creator_account_type": [
    "ANY"
  ],
  "creator_lookalikes": "string",
  "audience_location": [
    {
      "name": "string",
      "percentage_value": 0,
      "operator": "GT"
    }
  ],
  "sort_by": {
    "field": "AVERAGE_LIKES",
    "order": "DESCENDING"
  },
  "limit": 10,
  "offset": 0,
  "audience_source": "LIKERS",
  "total_engagements": {
    "min": 0,
    "max": 0
  },
  "audience_credibility_category": [
    "BAD"
  ],
  "audience_credibility_score": 0,
  "is_official_artist": false,
  "has_audience_info": false,
  "share_count": {
    "min": 0,
    "max": 0
  },
  "save_count": {
    "min": 0,
    "max": 0
  },
  "exclude_private_profiles": false,
  "creator_age_bracket": "OVER_18",
  "livestream_options": {
    "recent_activity": "http://example.com",
    "category": "IRL",
    "categories_streamed": 1,
    "hours_watched": {
      "min": 0,
      "max": 0,
      "over_100_percent_growth": true
    },
    "average_concurrent_viewers": {
      "min": 0,
      "max": 0,
      "over_100_percent_growth": true
    },
    "absolute_follower_growth": {
      "min": 0,
      "max": 0,
      "over_100_percent_growth": true
    },
    "peak_viewers": {
      "min": 0,
      "max": 0
    },
    "vtubers": {
      "only_vtubers": true,
      "affiliation": "INDEPENDENT"
    }
  },
  "post_type": "ALL (default)",
  "views_growth": {
    "operator": "GT (Greater than)",
    "interval_unit": "Month",
    "interval": 1,
    "percentage_value": 0
  }
}
{
  "work_platform_id": "string",
  "follower_count": {
    "min": 0,
    "max": 0
  },
  "subscriber_count": {
    "min": 0,
    "max": 0
  },
  "content_count": {
    "min": 0,
    "max": 0
  },
  "audience_gender": {
    "type": "ANY",
    "operator": "GT",
    "percentage_value": 0
  },
  "creator_gender": "ANY",
  "audience_age": {
    "min": 0,
    "max": 0,
    "percentage_value": 25
  },
  "creator_age": {
    "min": 0,
    "max": 0
  },
  "description_keywords": "string",
  "is_verified": true,
  "has_contact_details": true,
  "specific_contact_details": [
    {
      "type": "BBM",
      "preference": "SHOULD_HAVE"
    }
  ],
  "last_post_timestamp": "2019-08-24T14:15:22",
  "audience_language": [
    {
      "code": "string",
      "percentage_value": "string"
    }
  ],
  "creator_language": {
    "code": "string"
  },
  "audience_interests": [
    "string"
  ],
  "audience_interest_affinities": [
    {
      "value": "string",
      "operation": "GT",
      "percentage_value": "string"
    }
  ],
  "creator_interests": [
    "string"
  ],
  "audience_brand_affinities": [
    "string"
  ],
  "creator_brand_affinities": [
    "string"
  ],
  "average_likes": {
    "min": 0,
    "max": 0
  },
  "average_views": {
    "min": 0,
    "max": 0
  },
  "engagement_rate": {
    "percentage_value": "string"
  },
  "has_sponsored_posts": true,
  "brand_sponsors": [
    "string"
  ],
  "instagram_options": {
    "reel_views": {
      "min": 0,
      "max": 0
    }
  },
  "audience_locations": [
    {
      "location_id": "46910cc3-ab41-4b80-b4a7-94dab9f1b795",
      "percentage_value": 0,
      "operator": "GT"
    }
  ],
  "creator_locations": [
    "497f6eca-6276-4993-bfeb-53cbbbba6f08"
  ],
  "follower_growth": {
    "interval": 0,
    "interval_unit": "MONTH",
    "operator": "GT",
    "percentage_value": 0
  },
  "subscriber_growth": {
    "interval": 0,
    "interval_unit": "MONTH",
    "operator": "GT",
    "percentage_value": 0
  },
  "bio_phrase": "string",
  "hashtags": [
    {
      "name": "string"
    }
  ],
  "mentions": [
    {
      "name": "string"
    }
  ],
  "topic_relevance": {
    "name": [
      "string"
    ],
    "weight": 0.5,
    "threshold": 0.55
  },
  "audience_lookalikes": "string",
  "platform_account_type": "ANY",
  "creator_account_type": [
    "ANY"
  ],
  "creator_lookalikes": "string",
  "audience_location": [
    {
      "name": "string",
      "percentage_value": 0,
      "operator": "GT"
    }
  ],
  "sort_by": {
    "field": "AVERAGE_LIKES",
    "order": "DESCENDING"
  },
  "limit": 10,
  "offset": 0,
  "audience_source": "LIKERS",
  "total_engagements": {
    "min": 0,
    "max": 0
  },
  "audience_credibility_category": [
    "BAD"
  ],
  "audience_credibility_score": 0,
  "is_official_artist": false,
  "has_audience_info": false,
  "share_count": {
    "min": 0,
    "max": 0
  },
  "save_count": {
    "min": 0,
    "max": 0
  },
  "exclude_private_profiles": false,
  "creator_age_bracket": "OVER_18",
  "livestream_options": {
    "recent_activity": "http://example.com",
    "category": "IRL",
    "categories_streamed": 1,
    "hours_watched": {
      "min": 0,
      "max": 0,
      "over_100_percent_growth": true
    },
    "average_concurrent_viewers": {
      "min": 0,
      "max": 0,
      "over_100_percent_growth": true
    },
    "absolute_follower_growth": {
      "min": 0,
      "max": 0,
      "over_100_percent_growth": true
    },
    "peak_viewers": {
      "min": 0,
      "max": 0
    },
    "vtubers": {
      "only_vtubers": true,
      "affiliation": "INDEPENDENT"
    }
  },
  "post_type": "ALL (default)",
  "views_growth": {
    "operator": "GT (Greater than)",
    "interval_unit": "Month",
    "interval": 1,
    "percentage_value": 0
  }
}
Send API Request

Staging



import axios from 'axios';

const options = {
  method: 'POST',
  url: 'https://api.staging.insightiq.ai/v1/social/creators/profiles/quick-search',
  headers: {
    'Content-Type': 'application/json',
    Accept: 'application/json',
    Authorization: 'Basic 123'
  },
  data: {
    work_platform_id: 'string',
    follower_count: {min: 0, max: 0},
    subscriber_count: {min: 0, max: 0},
    content_count: {min: 0, max: 0},
    audience_gender: {type: 'ANY', operator: 'GT', percentage_value: 0},
    creator_gender: 'ANY',
    audience_age: {min: 0, max: 0, percentage_value: 25},
    creator_age: {min: 0, max: 0},
    description_keywords: 'string',
    is_verified: true,
    has_contact_details: true,
    specific_contact_details: [{type: 'BBM', preference: 'SHOULD_HAVE'}],
    last_post_timestamp: '2019-08-24T14:15:22',
    audience_language: [{code: 'string', percentage_value: 'string'}],
    creator_language: {code: 'string'},
    audience_interests: ['string'],
    audience_interest_affinities: [{value: 'string', operation: 'GT', percentage_value: 'string'}],
    creator_interests: ['string'],
    audience_brand_affinities: ['string'],
    creator_brand_affinities: ['string'],
    average_likes: {min: 0, max: 0},
    average_views: {min: 0, max: 0},
    engagement_rate: {percentage_value: 'string'},
    has_sponsored_posts: true,
    brand_sponsors: ['string'],
    instagram_options: {reel_views: {min: 0, max: 0}},
    audience_locations: [
      {
        location_id: '46910cc3-ab41-4b80-b4a7-94dab9f1b795',
        percentage_value: 0,
        operator: 'GT'
      }
    ],
    creator_locations: ['497f6eca-6276-4993-bfeb-53cbbbba6f08'],
    follower_growth: {interval: 0, interval_unit: 'MONTH', operator: 'GT', percentage_value: 0},
    subscriber_growth: {interval: 0, interval_unit: 'MONTH', operator: 'GT', percentage_value: 0},
    bio_phrase: 'string',
    hashtags: [{name: 'string'}],
    mentions: [{name: 'string'}],
    topic_relevance: {name: ['string'], weight: 0.5, threshold: 0.55},
    audience_lookalikes: 'string',
    platform_account_type: 'ANY',
    creator_account_type: ['ANY'],
    creator_lookalikes: 'string',
    audience_location: [{name: 'string', percentage_value: 0, operator: 'GT'}],
    sort_by: {field: 'AVERAGE_LIKES', order: 'DESCENDING'},
    limit: 10,
    offset: 0,
    audience_source: 'LIKERS',
    total_engagements: {min: 0, max: 0},
    audience_credibility_category: ['BAD'],
    audience_credibility_score: 0,
    is_official_artist: false,
    has_audience_info: false,
    share_count: {min: 0, max: 0},
    save_count: {min: 0, max: 0},
    exclude_private_profiles: false,
    creator_age_bracket: 'OVER_18',
    livestream_options: {
      recent_activity: 'http://example.com',
      category: 'IRL',
      categories_streamed: 1,
      hours_watched: {min: 0, max: 0, over_100_percent_growth: true},
      average_concurrent_viewers: {min: 0, max: 0, over_100_percent_growth: true},
      absolute_follower_growth: {min: 0, max: 0, over_100_percent_growth: true},
      peak_viewers: {min: 0, max: 0},
      vtubers: {only_vtubers: true, affiliation: 'INDEPENDENT'}
    },
    post_type: 'ALL (default)',
    views_growth: {
      operator: 'GT (Greater than)',
      interval_unit: 'Month',
      interval: 1,
      percentage_value: 0
    }
  }
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}



{
  "data": [
    {
      "platform_username": "string",
      "url": "http://example.com",
      "image_url": "http://example.com",
      "follower_count": 0,
      "subscriber_count": 0,
      "is_verified": true,
      "work_platform": {
        "id": "9bb8913b-ddd9-430b-a66a-d74d846e6c66",
        "name": "Instagram, Twitter",
        "logo_url": "https://insightiq.ai/storage/instagram.png"
      },
      "full_name": "string",
      "introduction": "string",
      "platform_account_type": "PERSONAL",
      "gender": "string",
      "age_group": "string",
      "language": "string",
      "content_count": 0,
      "engagement_rate": 0,
      "location": {
        "city": "string",
        "state": "string",
        "country": "string"
      },
      "livestream_metrics": {
        "recent_activity": "string",
        "hours_watched": 0,
        "peak_viewers": 0,
        "average_viewers": -3.402823669209385e+38,
        "airtime": 0,
        "follower_growth": 0,
        "total_live_view_count": 0
      }
    }
  ],
  "metadata": {
    "offset": 0,
    "limit": 10,
    "from_date": "2020-12-31",
    "to_date": "2021-12-31"
  }
}



3  Asynchronous creator profiles export
post
https://api.staging.insightiq.ai/v1/social/creators/profiles/search-export
Search for creator profiles using publicly available data based on available filters. This endpoint is asynchronous in nature. CREATOR_SEARCH_EXPORT.SUCCESS webhook event will be triggered once the submitted job is successful. Please refer the webhook events guide for more information.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Body

application/json

application/json
work_platform_id
string
required
Target platform to search public profiles on

follower_count
object
Filter profiles by follower count

min
integer
Minimum followers

max
integer
Maximum followers

subscriber_count
object
Filter profiles by subscriber count

min
integer
Minimum subscribers

max
integer
Maximum subscribers

content_count
object
Filter profiles by content count

min
integer
Minimum number of contents

max
integer
Maximum number of contents

audience_gender
object
Filter profiles by audience gender

type
string
required
Gender type: ANY, FEMALE, MALE

Allowed values:
ANY
FEMALE
MALE
operator
string
required
Comparison operator

Allowed value:
GT
percentage_value
integer
required
Percentage value for the comparison

creator_gender
string
Filter profiles by gender of the creator

Allowed values:
ANY
FEMALE
GENDER_NEUTRAL
MALE
MALE_OR_FEMALE
audience_age
object
Filter profiles by audience age

min
integer
Minimum age of audience

max
integer
Maximum age of audience

percentage
integer
Filter by percentage of audience in the given age range

>= 0
<= 100
Example:
25
creator_age
object
Filter profiles by creator age

min
integer
Minimum age of creator

max
integer
Maximum age of creator

description_keywords
string
Filter profiles by a list of keywords that can be found in profile bio/introduction/description/phrases in the video or captions for YouTube.

is_verified
boolean
Filter profiles by platform verification status

has_contact_details
boolean
Filter profiles by availability of contact details

specific_contact_details
array[object]
Contact information

type
string
Allowed values:
BBM
EMAIL
FACEBOOK
INSTAGRAM
ITUNES
KAKAO
KIK
LINEID
LINKTREE
PHONE
PINTEREST
SARAHAH
SAYAT
SKYPE
SNAPCHAT
TELEGRAM
TIKTOK
TUMBLR
TWITCHTV
TWITTER
VIBER
VK
WECHAT
WEIBO
WHATSAPP
YOUTUBE
preference
string
Allowed values:
MUST_HAVE
SHOULD_HAVE
Default:
SHOULD_HAVE
last_post_timestamp
string<date-time>
Filter profiles by the timestamp (ISO 8601) of last post

Example:
2019-08-24T14:15:22
audience_language
array[object]
Filter profiles by audience's language, checkout this endpoint. You may also refer the "languages" table on this Airtable base

code
string
required
2 letter language code as per ISO 639-1

percentage_value
string
required
Percentage value for the comparison, which would always be a "greater than or equal to" comparison

creator_language
object
Filter profiles by creator's language, checkout this endpoint. You may also refer the "languages" table on this Airtable base

code
string
2 letter language code as per ISO 639-1

audience_interests
array[string]
List of interest names, which will return creators whose audience match even 1 of these interests. Only for Instagram. Checkout this endpoint. You may also refer the "interests and brands" table on this Airtable base.

audience_interest_affinities
array[object]
Audience interest affinities

value
string
Name of the

operation
string
Name of the operation

Allowed value:
GT
percentage_value
string
Percentage value

creator_interests
array[string]
List of interest names, which will return creators whose audience match even 1 of these interests. Only for Instagram. Checkout this endpoint. You may also refer the "interests and brands" table on this Airtable base.

audience_brand_affinities
array[string]
List of interest names, which will return creators whose audience match even 1 of these brand affinities. Only for Instagram. Checkout this endpoint. You may also refer the "interests and brands" table on this Airtable base

creator_brand_affinities
array[string]
List of interest names, which will return creators whose audience match even 1 of these brand affinities. Only for Instagram. Checkout this endpoint. You may also refer the "interests and brands" table on this Airtable base

average_likes
object
Filter profiles by average likes

min
integer
Minimum average likes of creator

max
integer
Maximum average likes of creator

average_views
object
Filter profiles by average views

min
integer
Minimum average views of creator

max
integer
Maximum average views of creator

engagement_rate
object
Filter profiles by engagement rates

percentage_value
string
required
Percentage value for the comparison, which would always be a "greater than or equal to" comparison

has_sponsored_posts
boolean
Filter profiles which have sponsored posts. Only for Instagram.

brand_sponsors
array[string]
Filter profiles which have been sponsored by certain brands, which will return creators who match even 1 of these brands. Only for Instagram.

instagram_options
object
reel_views
object
Filter profiles by average reels views

audience_locations
array[object]
InsightIQ's location identifers to be passed to this attribute. Checkout this endpoint to know the identifier for the location filter of your choice.

location_id
string<uuid>
InsightIQ's location identifier

percentage_value
number
Percentage value for the comparison

operator
string
Comparison operator

Allowed value:
GT
Default:
GT
creator_locations
array[string<uuid>]
InsightIQ's location identifers to be passed to this attribute. Checkout this endpoint to know the identifier for the location filter of your choice.

follower_growth
object
Filter profiles by follower growth rate

interval
integer
required
Time interval of growth

interval_unit
string
required
Unit of time interval

Allowed value:
MONTH
operator
string
required
Comparison operator

Allowed value:
GT
percentage_value
integer
required
Percentage value for the comparison

subscriber_growth
object
Filter profiles by subscriber growth rate

interval
integer
required
Time interval of growth

interval_unit
string
required
Unit of time interval

Allowed value:
MONTH
operator
string
required
Comparison operator

Allowed value:
GT
percentage_value
integer
required
Percentage value for the comparison

bio_phrase
string
Filter profiles by the phrase they use in their bio

hashtags
array[object]
Filter profiles by hashtags.

name
string
required
Please provide hashtags without # prefix

mentions
array[object]
Filter profiles by mentions. Please provide mentions without @ prefix

string
required
Please provide mentions without @ prefix

topic_relevance
object
Filter profiles by

name
array[string]
Pass the topic name.

weight
number
Default:
0.5
threshold
number
Default:
0.55
audience_lookalikes
string
Filter profiles whose audience looks like the given handle/username

platform_account_type
string
Filter profiles by account type

Allowed values:
ANY
BUSINESS
CREATOR
PERSONAL
creator_account_type
array[string]
Filter profiles by creator account type

Allowed values:
ANY
BUSINESS
CREATOR
PERSONAL
creator_lookalikes
string
Filter profiles whose posts look like the given handle/username

creator_location
array[string]
Avoid using this filter. Use the creator_locations filter instead.

audience_location
array[object]
Avoid using this filter. Use the audience_locations filter instead.

name
string
Name of the location

percentage_value
integer
Percentage value for the comparison

operator
string
Comparsion operator.

Allowed value:
GT
Default:
GT
sort_by
object
required
Sorting order for the search results

field
string
required
Field to sort by.

Allowed values:
AVERAGE_LIKES
FOLLOWER_COUNT
ENGAGEMENT_RATE
DESCRIPTION
AVERAGE_VIEWS
CONTENT_COUNT
REELS_VIEWS
FOLLOWER_GROWTH
TOTAL_VIEWS_GROWTH
TOTAL_LIKES_GROWTH
AUDIENCE_LOCATIONS
AUDIENCE_LANGUAGE
AUDIENCE_BRAND_AFFINITIES
AUDIENCE_INTERESTS
AUDIENCE_AGE
CREATOR_LOOKALIKES
AUDIENCE_LOOKALIKES
AVERAGE_LIKE
AUDIENCE_LOCATION
TOPIC_RELEVANCE
order
string
required
Ordering pattern

Allowed value:
DESCENDING
max_results
integer
required
Maximum number of search results

audience_ethnicity
object
Filter profiles by ethnicity of the audience

type
string
Allowed values:
ANY
MALE
FEMALE
operator
string
Allowed value:
GT
percentage_value
number
views_growth
object
Filter profiles by views growth rate

interval
integer
>= 1
<= 6
interval_unit
string
Allowed value:
month
operator
string
Allowed value:
LT
percentage_value
number
audience_source
string
Filter profiles by source of the audience data

Allowed values:
ANY
LIKERS
FOLLOWERS
COMMENTERS
Default:
LIKERS
total_engagements
object
Filter profiles by total number of engagements

min
integer
max
integer
audience_credibility_category
array[string]
Filter profiles according to the given credibility categories given in the array

Allowed values:
BAD
LOW
NORMAL
HIGH
EXCELLENT
post_type
any
The value ALL is applicable for YouTube, Instagram and Tiktok. Rest are only applicable to YouTube.

Allowed values:
ALL (Default)
VIDEOS
SHORTS
STREAMS
Responses
202
Body

application/json

application/json
responses
/
202
id
string<uuid>
required
Job ID for the request

filters
AsyncCreatorSearchRequest
required
work_platform_id
string
required
Target platform to search public profiles on

follower_count
object
Filter profiles by follower count

subscriber_count
object
Filter profiles by subscriber count

content_count
object
Filter profiles by content count

audience_gender
object
Filter profiles by audience gender

creator_gender
string
Filter profiles by gender of the creator

Allowed values:
ANY
FEMALE
GENDER_NEUTRAL
MALE
MALE_OR_FEMALE
audience_age
object
Filter profiles by audience age

creator_age
object
Filter profiles by creator age

description_keywords
string
Filter profiles by a list of keywords that can be found in profile bio/introduction/description/phrases in the video or captions for YouTube.

is_verified
boolean
Filter profiles by platform verification status

has_contact_details
boolean
Filter profiles by availability of contact details

specific_contact_details
array[object]
Contact information

last_post_timestamp
string<date-time>
Filter profiles by the timestamp (ISO 8601) of last post

Example:
2019-08-24T14:15:22
audience_language
array[object]
Filter profiles by audience's language, checkout this endpoint. You may also refer the "languages" table on this Airtable base

creator_language
object
Filter profiles by creator's language, checkout this endpoint. You may also refer the "languages" table on this Airtable base

audience_interests
array[string]
List of interest names, which will return creators whose audience match even 1 of these interests. Only for Instagram. Checkout this endpoint. You may also refer the "interests and brands" table on this Airtable base.

audience_interest_affinities
array[object]
Audience interest affinities

creator_interests
array[string]
List of interest names, which will return creators whose audience match even 1 of these interests. Only for Instagram. Checkout this endpoint. You may also refer the "interests and brands" table on this Airtable base.

audience_brand_affinities
array[string]
List of interest names, which will return creators whose audience match even 1 of these brand affinities. Only for Instagram. Checkout this endpoint. You may also refer the "interests and brands" table on this Airtable base

creator_brand_affinities
array[string]
List of interest names, which will return creators whose audience match even 1 of these brand affinities. Only for Instagram. Checkout this endpoint. You may also refer the "interests and brands" table on this Airtable base

average_likes
object
Filter profiles by average likes

average_views
object
Filter profiles by average views

engagement_rate
object
Filter profiles by engagement rates

has_sponsored_posts
boolean
Filter profiles which have sponsored posts. Only for Instagram.

brand_sponsors
array[string]
Filter profiles which have been sponsored by certain brands, which will return creators who match even 1 of these brands. Only for Instagram.

instagram_options
object
audience_locations
array[object]
InsightIQ's location identifers to be passed to this attribute. Checkout this endpoint to know the identifier for the location filter of your choice.

creator_locations
array[string<uuid>]
InsightIQ's location identifers to be passed to this attribute. Checkout this endpoint to know the identifier for the location filter of your choice.

follower_growth
object
Filter profiles by follower growth rate

subscriber_growth
object
Filter profiles by subscriber growth rate

bio_phrase
string
Filter profiles by the phrase they use in their bio

hashtags
array[object]
Filter profiles by hashtags.

mentions
array[object]
Filter profiles by mentions. Please provide mentions without @ prefix

topic_relevance
object
Filter profiles by

audience_lookalikes
string
Filter profiles whose audience looks like the given handle/username

platform_account_type
string
Filter profiles by account type

Allowed values:
ANY
BUSINESS
CREATOR
PERSONAL
creator_account_type
array[string]
Filter profiles by creator account type

Allowed values:
ANY
BUSINESS
CREATOR
PERSONAL
creator_lookalikes
string
Filter profiles whose posts look like the given handle/username

creator_location
array[string]
Avoid using this filter. Use the creator_locations filter instead.

audience_location
array[object]
Avoid using this filter. Use the audience_locations filter instead.

sort_by
object
required
Sorting order for the search results

max_results
integer
required
Maximum number of search results

audience_ethnicity
object
Filter profiles by ethnicity of the audience

views_growth
object
Filter profiles by views growth rate

audience_source
string
Filter profiles by source of the audience data

Allowed values:
ANY
LIKERS
FOLLOWERS
COMMENTERS
Default:
LIKERS
total_engagements
object
Filter profiles by total number of engagements

audience_credibility_category
array[string]
Filter profiles according to the given credibility categories given in the array

Allowed values:
BAD
LOW
NORMAL
HIGH
EXCELLENT
post_type
any
The value ALL is applicable for YouTube, Instagram and Tiktok. Rest are only applicable to YouTube.

Allowed values:
ALL (Default)
VIDEOS
SHORTS
STREAMS
status
string
required
Status of the job

Allowed values:
SUCCESS
IN_PROGRESS
FAILURE
work_platform
WorkPlatformAttribute
id
string<uuid>
required
Unique ID of the work platform.

Example:
9bb8913b-ddd9-430b-a66a-d74d846e6c66
name
string
required
Name of the work platform.

Example:
Instagram, Twitter
logo_url
string<uri>
required
Image URL of the work platform logo.

Example:
https://insightiq.ai/storage/instagram.png


# Sample Test/Show # 


Username
:
username
Password
:
password
{
  "work_platform_id": "string",
  "follower_count": {
    "min": 0,
    "max": 0
  },
  "subscriber_count": {
    "min": 0,
    "max": 0
  },
  "content_count": {
    "min": 0,
    "max": 0
  },
  "audience_gender": {
    "type": "ANY",
    "operator": "GT",
    "percentage_value": 0
  },
  "creator_gender": "ANY",
  "audience_age": {
    "min": 0,
    "max": 0,
    "percentage": 25
  },
  "creator_age": {
    "min": 0,
    "max": 0
  },
  "description_keywords": "string",
  "is_verified": true,
  "has_contact_details": true,
  "specific_contact_details": [
    {
      "type": "BBM",
      "preference": "SHOULD_HAVE"
    }
  ],
  "last_post_timestamp": "2019-08-24T14:15:22",
  "audience_language": [
    {
      "code": "string",
      "percentage_value": "string"
    }
  ],
  "creator_language": {
    "code": "string"
  },
  "audience_interests": [
    "string"
  ],
  "audience_interest_affinities": [
    {
      "value": "string",
      "operation": "GT",
      "percentage_value": "string"
    }
  ],
  "creator_interests": [
    "string"
  ],
  "audience_brand_affinities": [
    "string"
  ],
  "creator_brand_affinities": [
    "string"
  ],
  "average_likes": {
    "min": 0,
    "max": 0
  },
  "average_views": {
    "min": 0,
    "max": 0
  },
  "engagement_rate": {
    "percentage_value": "string"
  },
  "has_sponsored_posts": true,
  "brand_sponsors": [
    "string"
  ],
  "instagram_options": {
    "reel_views": {
      "min": 0,
      "max": 0
    }
  },
  "audience_locations": [
    {
      "location_id": "46910cc3-ab41-4b80-b4a7-94dab9f1b795",
      "percentage_value": 0,
      "operator": "GT"
    }
  ],
  "creator_locations": [
    "497f6eca-6276-4993-bfeb-53cbbbba6f08"
  ],
  "follower_growth": {
    "interval": 0,
    "interval_unit": "MONTH",
    "operator": "GT",
    "percentage_value": 0
  },
  "subscriber_growth": {
    "interval": 0,
    "interval_unit": "MONTH",
    "operator": "GT",
    "percentage_value": 0
  },
  "bio_phrase": "string",
  "hashtags": [
    {
      "name": "string"
    }
  ],
  "mentions": [
    {
      "": "string"
    }
  ],
  "topic_relevance": {
    "name": [
      "string"
    ],
    "weight": 0.5,
    "threshold": 0.55
  },
  "audience_lookalikes": "string",
  "platform_account_type": "ANY",
  "creator_account_type": "ANY",
  "creator_lookalikes": "string",
  "creator_location": [
    "string"
  ],
  "audience_location": [
    {
      "name": "string",
      "percentage_value": 0,
      "operator": "GT"
    }
  ],
  "sort_by": {
    "field": "AVERAGE_LIKES",
    "order": "DESCENDING"
  },
  "max_results": 0,
  "audience_ethnicity": {
    "type": "ANY",
    "operator": "GT",
    "percentage_value": 0
  },
  "views_growth": {
    "interval": 1,
    "interval_unit": "month",
    "operator": "LT",
    "percentage_value": 0
  },
  "audience_source": "LIKERS",
  "total_engagements": {
    "min": 0,
    "max": 0
  },
  "audience_credibility_category": [
    "BAD"
  ],
  "post_type": "ALL (Default)"
}
{
  "work_platform_id": "string",
  "follower_count": {
    "min": 0,
    "max": 0
  },
  "subscriber_count": {
    "min": 0,
    "max": 0
  },
  "content_count": {
    "min": 0,
    "max": 0
  },
  "audience_gender": {
    "type": "ANY",
    "operator": "GT",
    "percentage_value": 0
  },
  "creator_gender": "ANY",
  "audience_age": {
    "min": 0,
    "max": 0,
    "percentage": 25
  },
  "creator_age": {
    "min": 0,
    "max": 0
  },
  "description_keywords": "string",
  "is_verified": true,
  "has_contact_details": true,
  "specific_contact_details": [
    {
      "type": "BBM",
      "preference": "SHOULD_HAVE"
    }
  ],
  "last_post_timestamp": "2019-08-24T14:15:22",
  "audience_language": [
    {
      "code": "string",
      "percentage_value": "string"
    }
  ],
  "creator_language": {
    "code": "string"
  },
  "audience_interests": [
    "string"
  ],
  "audience_interest_affinities": [
    {
      "value": "string",
      "operation": "GT",
      "percentage_value": "string"
    }
  ],
  "creator_interests": [
    "string"
  ],
  "audience_brand_affinities": [
    "string"
  ],
  "creator_brand_affinities": [
    "string"
  ],
  "average_likes": {
    "min": 0,
    "max": 0
  },
  "average_views": {
    "min": 0,
    "max": 0
  },
  "engagement_rate": {
    "percentage_value": "string"
  },
  "has_sponsored_posts": true,
  "brand_sponsors": [
    "string"
  ],
  "instagram_options": {
    "reel_views": {
      "min": 0,
      "max": 0
    }
  },
  "audience_locations": [
    {
      "location_id": "46910cc3-ab41-4b80-b4a7-94dab9f1b795",
      "percentage_value": 0,
      "operator": "GT"
    }
  ],
  "creator_locations": [
    "497f6eca-6276-4993-bfeb-53cbbbba6f08"
  ],
  "follower_growth": {
    "interval": 0,
    "interval_unit": "MONTH",
    "operator": "GT",
    "percentage_value": 0
  },
  "subscriber_growth": {
    "interval": 0,
    "interval_unit": "MONTH",
    "operator": "GT",
    "percentage_value": 0
  },
  "bio_phrase": "string",
  "hashtags": [
    {
      "name": "string"
    }
  ],
  "mentions": [
    {
      "": "string"
    }
  ],
  "topic_relevance": {
    "name": [
      "string"
    ],
    "weight": 0.5,
    "threshold": 0.55
  },
  "audience_lookalikes": "string",
  "platform_account_type": "ANY",
  "creator_account_type": "ANY",
  "creator_lookalikes": "string",
  "creator_location": [
    "string"
  ],
  "audience_location": [
    {
      "name": "string",
      "percentage_value": 0,
      "operator": "GT"
    }
  ],
  "sort_by": {
    "field": "AVERAGE_LIKES",
    "order": "DESCENDING"
  },
  "max_results": 0,
  "audience_ethnicity": {
    "type": "ANY",
    "operator": "GT",
    "percentage_value": 0
  },
  "views_growth": {
    "interval": 1,
    "interval_unit": "month",
    "operator": "LT",
    "percentage_value": 0
  },
  "audience_source": "LIKERS",
  "total_engagements": {
    "min": 0,
    "max": 0
  },
  "audience_credibility_category": [
    "BAD"
  ],
  "post_type": "ALL (Default)"
}
Send API Request

Staging
import axios from 'axios';

const options = {
  method: 'POST',
  url: 'https://api.staging.insightiq.ai/v1/social/creators/profiles/search-export',
  headers: {
    'Content-Type': 'application/json',
    Accept: 'application/json',
    Authorization: 'Basic 123'
  },
  data: {
    work_platform_id: 'string',
    follower_count: {min: 0, max: 0},
    subscriber_count: {min: 0, max: 0},
    content_count: {min: 0, max: 0},
    audience_gender: {type: 'ANY', operator: 'GT', percentage_value: 0},
    creator_gender: 'ANY',
    audience_age: {min: 0, max: 0, percentage: 25},
    creator_age: {min: 0, max: 0},
    description_keywords: 'string',
    is_verified: true,
    has_contact_details: true,
    specific_contact_details: [{type: 'BBM', preference: 'SHOULD_HAVE'}],
    last_post_timestamp: '2019-08-24T14:15:22',
    audience_language: [{code: 'string', percentage_value: 'string'}],
    creator_language: {code: 'string'},
    audience_interests: ['string'],
    audience_interest_affinities: [{value: 'string', operation: 'GT', percentage_value: 'string'}],
    creator_interests: ['string'],
    audience_brand_affinities: ['string'],
    creator_brand_affinities: ['string'],
    average_likes: {min: 0, max: 0},
    average_views: {min: 0, max: 0},
    engagement_rate: {percentage_value: 'string'},
    has_sponsored_posts: true,
    brand_sponsors: ['string'],
    instagram_options: {reel_views: {min: 0, max: 0}},
    audience_locations: [
      {
        location_id: '46910cc3-ab41-4b80-b4a7-94dab9f1b795',
        percentage_value: 0,
        operator: 'GT'
      }
    ],
    creator_locations: ['497f6eca-6276-4993-bfeb-53cbbbba6f08'],
    follower_growth: {interval: 0, interval_unit: 'MONTH', operator: 'GT', percentage_value: 0},
    subscriber_growth: {interval: 0, interval_unit: 'MONTH', operator: 'GT', percentage_value: 0},
    bio_phrase: 'string',
    hashtags: [{name: 'string'}],
    mentions: [{'': 'string'}],
    topic_relevance: {name: ['string'], weight: 0.5, threshold: 0.55},
    audience_lookalikes: 'string',
    platform_account_type: 'ANY',
    creator_account_type: 'ANY',
    creator_lookalikes: 'string',
    creator_location: ['string'],
    audience_location: [{name: 'string', percentage_value: 0, operator: 'GT'}],
    sort_by: {field: 'AVERAGE_LIKES', order: 'DESCENDING'},
    max_results: 0,
    audience_ethnicity: {type: 'ANY', operator: 'GT', percentage_value: 0},
    views_growth: {interval: 1, interval_unit: 'month', operator: 'LT', percentage_value: 0},
    audience_source: 'LIKERS',
    total_engagements: {min: 0, max: 0},
    audience_credibility_category: ['BAD'],
    post_type: 'ALL (Default)'
  }
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
  "filters": {
    "work_platform_id": "string",
    "follower_count": {
      "min": 0,
      "max": 0
    },
    "subscriber_count": {
      "min": 0,
      "max": 0
    },
    "content_count": {
      "min": 0,
      "max": 0
    },
    "audience_gender": {
      "type": "ANY",
      "operator": "GT",
      "percentage_value": 0
    },
    "creator_gender": "ANY",
    "audience_age": {
      "min": 0,
      "max": 0,
      "percentage": 25
    },
    "creator_age": {
      "min": 0,
      "max": 0
    },
    "description_keywords": "string",
    "is_verified": true,
    "has_contact_details": true,
    "specific_contact_details": [
      {
        "type": "BBM",
        "preference": "SHOULD_HAVE"
      }
    ],
    "last_post_timestamp": "2019-08-24T14:15:22",
    "audience_language": [
      {
        "code": "string",
        "percentage_value": "string"
      }
    ],
    "creator_language": {
      "code": "string"
    },
    "audience_interests": [
      "string"
    ],
    "audience_interest_affinities": [
      {
        "value": "string",
        "operation": "GT",
        "percentage_value": "string"
      }
    ],
    "creator_interests": [
      "string"
    ],
    "audience_brand_affinities": [
      "string"
    ],
    "creator_brand_affinities": [
      "string"
    ],
    "average_likes": {
      "min": 0,
      "max": 0
    },
    "average_views": {
      "min": 0,
      "max": 0
    },
    "engagement_rate": {
      "percentage_value": "string"
    },
    "has_sponsored_posts": true,
    "brand_sponsors": [
      "string"
    ],
    "instagram_options": {
      "reel_views": {
        "min": 0,
        "max": 0
      }
    },
    "audience_locations": [
      {
        "location_id": "46910cc3-ab41-4b80-b4a7-94dab9f1b795",
        "percentage_value": 0,
        "operator": "GT"
      }
    ],
    "creator_locations": [
      "497f6eca-6276-4993-bfeb-53cbbbba6f08"
    ],
    "follower_growth": {
      "interval": 0,
      "interval_unit": "MONTH",
      "operator": "GT",
      "percentage_value": 0
    },
    "subscriber_growth": {
      "interval": 0,
      "interval_unit": "MONTH",
      "operator": "GT",
      "percentage_value": 0
    },
    "bio_phrase": "string",
    "hashtags": [
      {
        "name": "string"
      }
    ],
    "mentions": [
      {
        "": "string"
      }
    ],
    "topic_relevance": {
      "name": [
        "string"
      ],
      "weight": 0.5,
      "threshold": 0.55
    },
    "audience_lookalikes": "string",
    "platform_account_type": "ANY",
    "creator_account_type": "ANY",
    "creator_lookalikes": "string",
    "creator_location": [
      "string"
    ],
    "audience_location": [
      {
        "name": "string",
        "percentage_value": 0,
        "operator": "GT"
      }
    ],
    "sort_by": {
      "field": "AVERAGE_LIKES",
      "order": "DESCENDING"
    },
    "max_results": 0,
    "audience_ethnicity": {
      "type": "ANY",
      "operator": "GT",
      "percentage_value": 0
    },
    "views_growth": {
      "interval": 1,
      "interval_unit": "month",
      "operator": "LT",
      "percentage_value": 0
    },
    "audience_source": "LIKERS",
    "total_engagements": {
      "min": 0,
      "max": 0
    },
    "audience_credibility_category": [
      "BAD"
    ],
    "post_type": "ALL (Default)"
  },
  "status": "SUCCESS",
  "work_platform": {
    "id": "9bb8913b-ddd9-430b-a66a-d74d846e6c66",
    "name": "Instagram, Twitter",
    "logo_url": "https://insightiq.ai/storage/instagram.png"
  }
}


4  Fetch creator search export results
get
https://api.staging.insightiq.ai/v1/social/creators/profiles/search-export/{id}
Fetch creator search export results by supplying the job ID.

Usually used in conjunction with the "CREATORS_SEARCH_EXPORT.*" webhooks, read more.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Path Parameters
id
string<uuid>
required
Job ID

Query Parameters
limit
integer
Number of search results to be returned.

Default:
100
offset
integer
Number of search results to skip.

Default:
0
Responses
200
OK

Body

application/json

application/json
responses
/
200
id
string<uuid>
status
string
Allowed values:
SUCCESS
IN_PROGRESS
FAILURE
data
array[object]
work_platform
WorkPlatformAttribute
platform_username
string
url
string<uri>
image_url
string<uri>
full_name
string
introduction
string
is_verified
boolean
platform_account_type
string
gender
string
age_group
string
language
string
follower_count
integer
subscriber_count
integer
content_count
integer
engagement_rate
number
location
object
contact_details
object
metadata
object
total_results
string
limit
string
offset
string


# Sample Test/Show # 


Username
:
username
Password
:
password
id*
:
string
limit
:
defaults to: 100
offset
:
defaults to: 0
Send API Request

Staging
import axios from 'axios';

const options = {
  method: 'GET',
  url: 'https://api.staging.insightiq.ai/v1/social/creators/profiles/search-export/{id}',
  headers: {Accept: 'application/json', Authorization: 'Basic 123'}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
  "status": "SUCCESS",
  "data": [
    {
      "work_platform": {
        "id": "9bb8913b-ddd9-430b-a66a-d74d846e6c66",
        "name": "Instagram, Twitter",
        "logo_url": "https://insightiq.ai/storage/instagram.png"
      },
      "platform_username": "string",
      "url": "http://example.com",
      "image_url": "http://example.com",
      "full_name": "string",
      "introduction": "string",
      "is_verified": true,
      "platform_account_type": "string",
      "gender": "string",
      "age_group": "string",
      "language": "string",
      "follower_count": 0,
      "subscriber_count": 0,
      "content_count": 0,
      "engagement_rate": 0,
      "location": {
        "city": "string",
        "state": "string",
        "country": "string"
      },
      "contact_details": {
        "type": "string",
        "value": "string"
      },
      "metadata": {
        "total_results": "string",
        "limit": "string",
        "offset": "string"
      }
    }
  ]
}


5   Autocomplete functionality for user handles
get
https://api.staging.insightiq.ai/v1/social/creators/dictionary/userhandles
Retrieve list of userhandles matching the query text. Lookalike provides a set of users for whom creator lookalikes data isavailable. Topic-tags is related to users for whom we have top tags data. Search type is for profiles for whom both audience lookalikes and audience data is available.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Query Parameters
query_text
string
required
Search query

type
string
required
type in lookalike, search, topic-tags

work_platform_id
string<uuid>
required
Work platform id

limit
integer
The number of objects to be returned. It can be between 1 to 1000. The default value is 10

Responses
200
OK

Body

application/json

application/json
responses
/
200
array of:
user_id
string
required
InsightIQ's unique identifier for the profile

username
string
required
Profile username

fullname
string
required
Full name of the profile

picture
string
required
Profile display picture

followers
string
required
Follower count

is_verified
boolean
required
Profile verification status


# Sample Test/Show # 

Username
:
username
Password
:
password
query_text*
:
string
type*
:
string
work_platform_id*
:
string
limit
:
integer
Send API Request

Staging
import axios from 'axios';

const options = {
  method: 'GET',
  url: 'https://api.staging.insightiq.ai/v1/social/creators/dictionary/userhandles',
  headers: {Accept: 'application/json', Authorization: 'Basic 123'}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
[
  {
    "user_id": "string",
    "username": "string",
    "fullname": "string",
    "picture": "string",
    "followers": "string",
    "is_verified": true
  }
]



6  Get brands for public profiles search
get
https://api.staging.insightiq.ai/v1/social/creators/dictionary/brands
Dictionary of brands for the public profiles search endpoint.

We recommend caching the response at your end for 15 days.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Responses
200
Body
application/jsonapplication/xml

application/json
responses
/
200
Brands dictionary for public profiles search

brands
array[object]
name
string


# Sample Test/Show # 


Username
:
username
Password
:
password
Send API Request

Staging
import axios from 'axios';

const options = {
  method: 'GET',
  url: 'https://api.staging.insightiq.ai/v1/social/creators/dictionary/brands',
  headers: {Accept: 'application/json, application/xml', Authorization: 'Basic 123'}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "brands": [
    {
      "name": "20th Century Fox"
    },
    {
      "name": "2Pac"
    },
    {
      "name": "7-Eleven"
    },
    {
      "name": "7UP"
    },
    {
      "name": "A Game of Tones"
    },
    {
      "name": "A.P.C."
    },
    {
      "name": "ABC"
    },
    {
      "name": "Abercrombie & Fitch"
    },
    {
      "name": "Ableton"
    },
    {
      "name": "Absolut"
    },
    {
      "name": "Abus"
    },
    {
      "name": "Acacia Swimwear"
    }
  ]
}


7  Get interests for public profiles search
get
https://api.staging.insightiq.ai/v1/social/creators/dictionary/interests
Dictionary of interests for the public profiles search endpoint.

We recommend caching the response at your end for 15 days.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Responses
200
Body
application/jsonapplication/xml

application/json
responses
/
200
Interests dictionary for public profiles search

interests
array[object]
name
string


# Sample Test/Show # 


Username
:
username
Password
:
password
Send API Request

Staging
import axios from 'axios';

const options = {
  method: 'GET',
  url: 'https://api.staging.insightiq.ai/v1/social/creators/dictionary/interests',
  headers: {Accept: 'application/json, application/xml', Authorization: 'Basic 123'}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "interests": [
    {
      "name": "Television & Film"
    },
    {
      "name": "Music"
    },
    {
      "name": "Shopping & Retail"
    },
    {
      "name": "Coffee, Tea & Beverages"
    },
    {
      "name": "Camera & Photography"
    },
    {
      "name": "Clothes, Shoes, Handbags & Accessories"
    },
    {
      "name": "Beer, Wine & Spirits"
    },
    {
      "name": "Sports"
    },
    {
      "name": "Electronics & Computers"
    },
    {
      "name": "Gaming"
    },
    {
      "name": "Activewear"
    },
    {
      "name": "Art & Design"
    },
    {
      "name": "Travel, Tourism & Aviation"
    },
    {
      "name": "Business & Careers"
    },
    {
      "name": "Beauty & Cosmetics"
    },
    {
      "name": "Healthcare & Medicine"
    },
    {
      "name": "Jewellery & Watches"
    },
    {
      "name": "Restaurants, Food & Grocery"
    },
    {
      "name": "Toys, Children & Baby"
    },
    {
      "name": "Fitness & Yoga"
    },
    {
      "name": "Wedding"
    },
    {
      "name": "Tobacco & Smoking"
    },
    {
      "name": "Pets"
    },
    {
      "name": "Healthy Lifestyle"
    },
    {
      "name": "Luxury Goods"
    },
    {
      "name": "Home Decor, Furniture & Garden"
    },
    {
      "name": "Friends, Family & Relationships"
    },
    {
      "name": "Cars & Motorbikes"
    }
  ]
}


8 Get languages for public profiles search
get
https://api.staging.insightiq.ai/v1/social/creators/dictionary/languages
Dictionary of languages for the public profiles search endpoint.

We recommend caching the response at your end for 15 days.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Responses
200
Body
application/jsonapplication/xml

application/json
responses
/
200
Languages dictionary for public profiles search

languages
array[object]
name
string
code
string



# Sample Test/Show # 

Username
:
username
Password
:
password
Send API Request

Staging
import axios from 'axios';

const options = {
  method: 'GET',
  url: 'https://api.staging.insightiq.ai/v1/social/creators/dictionary/languages',
  headers: {Accept: 'application/json, application/xml', Authorization: 'Basic 123'}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "languages": [
    {
      "name": "English",
      "code": "en"
    },
    {
      "name": "Spanish",
      "code": "es"
    },
    {
      "name": "Portuguese",
      "code": "pt"
    },
    {
      "name": "French",
      "code": "fr"
    },
    {
      "name": "Arabic",
      "code": "ar"
    },
    {
      "name": "Russian",
      "code": "ru"
    },
    {
      "name": "Italian",
      "code": "it"
    },
    {
      "name": "German",
      "code": "de"
    },
    {
      "name": "Persian",
      "code": "fa"
    },
    {
      "name": "Indonesian",
      "code": "id"
    },
    {
      "name": "Turkish",
      "code": "tr"
    },
    {
      "name": "Japanese",
      "code": "ja"
    }
  ]
}



9  Get locations for public profiles search
get
https://api.staging.insightiq.ai/v1/social/creators/dictionary/locations
Dictionary of countries for the public profiles search endpoint.

We recommend caching the response at your end for 15 days.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Query Parameters
limit
integer
The number of objects to be returned. It can be between 1 to 100. The default value is 10

Example:
10
offset
integer
The number of objects to skip. Use this argument for pagination. The default value is 0.

Example:
0
search_string
string
The user can search location by passing a substring

Responses
200
Body

application/json

application/json
responses
/
200
Locations dictionary for public profiles search

locations
array[object]
id
string<uuid>
InsightIQ's unique identifier for the location. Pass this identifier to the creator discovery endpoint to search creators.

name
string
Name of the location.

type
string
Type of the location.

Allowed values:
CITY
STATE
COUNTRY



# Sample Test/Show # 


Username
:
username
Password
:
password
limit
:
integer
offset
:
integer
search_string
:
string
Send API Request

Staging
import axios from 'axios';

const options = {
  method: 'GET',
  url: 'https://api.staging.insightiq.ai/v1/social/creators/dictionary/locations',
  headers: {Accept: 'application/json', Authorization: 'Basic 123'}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "locations": [
    {
      "id": "0244d71d-3b9c-4f3f-971a-5b2d545911a7",
      "name": "San Francisco",
      "type": "city"
    },
    {
      "id": "431025c0-888b-4305-a737-590303ea2659",
      "name": "Franca",
      "type": "city"
    },
    {
      "id": "531f6797-c8eb-41ea-b3c5-9ac472b72a5f",
      "name": "France",
      "type": "country"
    },
    {
      "id": "fc031241-109e-460f-8b59-1f1e77c2e642",
      "name": "Frankfurt",
      "type": "city"
    }
  ]
}


10  Get topic tags for public profiles search
get
https://api.staging.insightiq.ai/v1/social/creators/dictionary/topics
Dictionary of topic tags for the public profiles search endpoint.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Query Parameters
identifier
string
required
Name of the tag

work_platform_id
string<uuid>
required
Work platform ID

limit
integer
The number of objects to be returned. It can be between 1 to 100. The default value is 10

Default:
25
Example:
10
Responses
200
Body

application/json

application/json
responses
/
200
Topic tags dictionary for public profiles search

data
array[object]
required
name
string
required
value
string
required


# Sample Test/Show # 

Username
:
username
Password
:
password
identifier*
:
string
work_platform_id*
:
string
limit
:
defaults to: 25
Send API Request

Staging
import axios from 'axios';

const options = {
  method: 'GET',
  url: 'https://api.staging.insightiq.ai/v1/social/creators/dictionary/topics',
  headers: {Accept: 'application/json', Authorization: 'Basic 123'}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "data": [
    {
      "name": "string",
      "value": "string"
    }
  ]
}


11   Get topic tag weight for public profiles search
get
https://api.staging.insightiq.ai/v1/social/creators/dictionary/topics/relevance
Dictionary of relevance weights of topic tags for the public profiles search endpoint.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Query Parameters
identifier
string
required
Name of the tag obtained from tags dictionary

work_platform_id
string<uuid>
required
Work platform ID

limit
integer
The number of objects to be returned. It can be between 1 to 100. The default value is 10

Default:
60
Example:
10
Responses
200
Body

application/json

application/json
responses
/
200
Topic tags relevance weight dictionary for public profiles search

data
array[object]
required
name
string
required
Name of the tag from tags dictionary

distance
number
required
Lesser the distance, more relevant the tag

frequency
integer
required
Number of occurrences of the tag in the work platform


# Sample Test/Show # 


Username
:
username
Password
:
password
identifier*
:
string
work_platform_id*
:
string
limit
:
defaults to: 60
Send API Request

Staging
import axios from 'axios';

const options = {
  method: 'GET',
  url: 'https://api.staging.insightiq.ai/v1/social/creators/dictionary/topics/relevance',
  headers: {Accept: 'application/json', Authorization: 'Basic 123'}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "data": [
    {
      "name": "string",
      "distance": 0,
      "frequency": 0
    }
  ]
}


12   
Get follower count and other basic profile information
get
https://api.staging.insightiq.ai/v1/social/creators/profiles
Get live updated follower count and other related information (bios, verification status, profile images etc)

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Query Parameters
identifier
string
required
Identifier of the profile: username or profile URL

work_platform_id
string<uuid>
required
Work platform id

Responses
200
OK

Body

application/json

application/json
responses
/
200
work_platform
WorkPlatformAttribute
required
id
string<uuid>
required
Unique ID of the work platform.

Example:
9bb8913b-ddd9-430b-a66a-d74d846e6c66
name
string
required
Name of the work platform.

Example:
Instagram, Twitter
logo_url
string<uri>
required
Image URL of the work platform logo.

Example:
https://insightiq.ai/storage/instagram.png
platform_username
string
required
Profile username

url
string<uri>
required
Profile url

image_url
string<uri>
Profile image url

full_name
string
Full name

follower_count
integer
Follower count

following_count
integer
Following count

subscriber_count
integer
Subscriber count. Only for YouTube.

is_verified
boolean
is_business
boolean
is_private
boolean
content_count
integer
Total number of content items

total_view_count
integer
Total channel view count. Only for YouTube.

introduction
string
Bio description.

category
string
Category of creator account. Only for Instagram, if it's a business/creator account.

external_id
string
required
Unique profile identifier by the platform.

platform_profile_id
string
required
Unique profile identifier by the platform.

profile_links
array[object]
Links in bio.

url
string<uri>



# Sample Test/Show # 

Username
:
username
Password
:
password
identifier*
:
string
work_platform_id*
:
string
Send API Request

Staging
import axios from 'axios';

const options = {
  method: 'GET',
  url: 'https://api.staging.insightiq.ai/v1/social/creators/profiles',
  headers: {Accept: 'application/json', Authorization: 'Basic 123'}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "work_platform": {
    "id": "9bb8913b-ddd9-430b-a66a-d74d846e6c66",
    "name": "Instagram, Twitter",
    "logo_url": "https://insightiq.ai/storage/instagram.png"
  },
  "platform_username": "string",
  "url": "http://example.com",
  "image_url": "http://example.com",
  "full_name": "string",
  "follower_count": 0,
  "following_count": 0,
  "subscriber_count": 0,
  "is_verified": true,
  "is_business": true,
  "is_private": true,
  "content_count": 0,
  "total_view_count": 0,
  "introduction": "string",
  "category": "string",
  "external_id": "string",
  "platform_profile_id": "string",
  "profile_links": [
    {
      "url": "http://example.com"
    }
  ]
}


13   Get direct contact information of a profile
post
https://api.staging.insightiq.ai/v1/social/creators/profiles/contact-info
Get contact details of a particular handle on Instagram, YouTube and TikTok, without fetching the analytics.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Body

application/json

application/json
identifier
string
required
Identifier of the profile: username or profile URL

work_platform_id
string<uuid>
required
Work platform ID

Responses
200
OK

Body

application/json

application/json
responses
/
200
work_platform
WorkPlatformAttribute
required
id
string<uuid>
required
Unique ID of the work platform.

Example:
9bb8913b-ddd9-430b-a66a-d74d846e6c66
name
string
required
Name of the work platform.

Example:
Instagram, Twitter
logo_url
string<uri>
required
Image URL of the work platform logo.

Example:
https://insightiq.ai/storage/instagram.png
profile
object
required
platform_username
string
required
Profile username

url
string<uri>
required
Profile url

image_url
string<uri>
Profile image url

full_name
string
Full name

follower_count
integer
Follower count

following_count
integer
Following count

subscriber_count
integer
Subscriber count. Only for YouTube.

is_verified
boolean
is_business
boolean
external_id
string
required
Unique profile identifier by the platform.

platform_profile_id
string
required
Unique profile identifier by the platform.

contact_details
array[object]
Array containing contact details

type
string
required
Type of contact detail

value
string
required


# Sample Test/Show # 


Username
:
username
Password
:
password
{
  "identifier": "string",
  "work_platform_id": "string"
}
{
  "identifier": "string",
  "work_platform_id": "string"
}
Send API Request

Sandbox
import axios from 'axios';

const options = {
  method: 'POST',
  url: 'https://api.sandbox.insightiq.ai/v1/social/creators/profiles/analytics',
  headers: {
    'Content-Type': 'application/json',
    Accept: 'application/json',
    Authorization: 'Basic 123'
  },
  data: {identifier: 'string', work_platform_id: 'string'}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "id": "string",
  "work_platform": {
    "id": "9bb8913b-ddd9-430b-a66a-d74d846e6c66",
    "name": "Instagram, Twitter",
    "logo_url": "https://insightiq.ai/storage/instagram.png"
  },
  "profile": {
    "platform_username": "string",
    "url": "http://example.com",
    "image_url": "http://example.com",
    "follower_count": 0,
    "subscriber_count": 0,
    "is_verified": true,
    "full_name": "string",
    "introduction": "string",
    "platform_account_type": "string",
    "gender": "string",
    "age_group": "string",
    "language": "string",
    "average_likes": 0,
    "average_comments": 0,
    "average_views": 0,
    "average_reels_views": 0,
    "engagement_rate": 0,
    "content_count": 0,
    "sponsored_posts_performance": 0,
    "reputation_history": [
      {
        "month": "string",
        "follower_count": 0,
        "subscriber_count": 0,
        "following_count": 0,
        "average_likes": 0
      }
    ],
    "location": {
      "city": "string",
      "state": "string",
      "country": "string"
    },
    "top_hashtags": [
      {
        "name": "string"
      }
    ],
    "top_mentions": [
      {
        "name": "string"
      }
    ],
    "top_interests": [
      {
        "name": "string"
      }
    ],
    "brand_affinity": [
      {
        "name": "string",
        "value": 0
      }
    ],
    "top_contents": [
      {
        "type": "VIDEO",
        "url": "http://example.com",
        "description": "string",
        "thumbnail_url": "http://example.com",
        "engagement": {
          "like_count": 0,
          "comment_count": 0
        },
        "published_at": "2020-03-27T12:56:34.534978"
      }
    ],
    "recent_contents": [
      {
        "type": "VIDEO",
        "url": "http://example.com",
        "description": "string",
        "thumbnail_url": "http://example.com",
        "engagement": {
          "like_count": 0,
          "comment_count": 0
        },
        "published_at": "2020-03-27T12:56:34.534978"
      }
    ],
    "posts_hidden_likes_percentage_value": 0,
    "sponsored_contents": [
      {
        "type": "VIDEO",
        "url": "http://example.com",
        "description": "string",
        "thumbnail_url": "http://example.com",
        "engagement": {
          "like_count": 0,
          "comment_count": 0
        },
        "published_at": "2020-03-27T12:56:34.534978"
      }
    ],
    "lookalikes": [
      {
        "platform_username": "string",
        "url": "http://example.com",
        "image_url": "http://example.com",
        "follower_count": 0,
        "subscriber_count": 0,
        "is_verified": true
      }
    ],
    "audience": {
      "ethnicities": [
        {
          "name": "string",
          "value": 0
        }
      ],
      "languages": [
        {
          "code": "string",
          "value": 0
        }
      ],
      "brand_affinity": [
        {
          "name": "string",
          "value": 0
        }
      ],
      "interests": [
        {
          "name": "string",
          "value": 0
        }
      ],
      "follower_types": [
        {
          "name": "MASS_FOLLOWERS",
          "value": 0
        }
      ],
      "lookalikes": [
        {
          "platform_username": "string",
          "url": "http://example.com",
          "image_url": "http://example.com",
          "follower_count": 0,
          "subscriber_count": 0,
          "is_verified": true
        }
      ],
      "credibility_score": 0,
      "credibility_score_band": [
        {
          "min": 0,
          "max": "string",
          "total_profile_count": 0
        }
      ],
      "significant_followers_percentage": 0,
      "significant_followers": {
        "platform_username": "string",
        "url": "http://example.com",
        "image_url": "http://example.com",
        "follower_count": 0,
        "subscriber_count": 0,
        "is_verified": true
      },
      "countries": [
        {
          "code": "US",
          "value": 78.9
        }
      ],
      "cities": [
        {
          "name": "Boulder",
          "value": 45.6
        }
      ],
      "gender_age_distribution": [
        {
          "gender": "FEMALE",
          "age_range": "13-18",
          "value": 12.3
        }
      ]
    },
    "engagement_rate_histogram": [
      {
        "engagement_rate_band": {
          "min": 0,
          "max": 0,
          "": true
        }
      }
    ],
    "audience_likes": [
      {
        "credibility": {
          "min": 0,
          "max": 0,
          "total_profile_count": 0
        }
      }
    ],
    "audience_likers": {
      "countries": [
        {
          "code": "string",
          "value": 0
        }
      ],
      "cities": [
        {
          "name": "string",
          "value": 0
        }
      ],
      "gender_age_distribution": [
        {
          "gender": "string",
          "age_range": "string",
          "value": 0
        }
      ],
      "ethnicities": [
        {
          "name": "string",
          "value": 0
        }
      ],
      "languages": [
        {
          "code": "string",
          "value": 0
        }
      ],
      "brand_affinity": [
        {
          "name": "string",
          "value": 0
        }
      ],
      "interests": [
        {
          "name": "string",
          "value": 0
        }
      ],
      "follower_types": [
        {
          "type": "MASS_FOLLOWERS",
          "value": 0
        }
      ],
      "lookalikes": "string",
      "significant_likers_percentage": 0,
      "credibility_score": 0,
      "significant_likers": [
        {
          "platform_username": "string",
          "url": "http://example.com",
          "image_url": "http://example.com",
          "follower_count": 0,
          "subscriber_count": 0,
          "is_verified": true
        }
      ]
    },
    "contact_details": [
      {
        "type": "string",
        " value": "string"
      }
    ],
    "livestream_metrics": {
      "hours_watched": 0,
      "peak_viewers": 0,
      "average_viewers": -3.402823669209385e+38,
      "airtime": 0,
      "days_streamed": 0,
      "follower_growth": {
        "percentage": -3.402823669209385e+38,
        "count": 0,
        "per_hour": -3.402823669209385e+38
      },
      "games": [
        {
          "count": 0,
          "top": {
            "name": "string",
            "hours_watched": 0,
            "hours_watched_percentage": -3.402823669209385e+38
          }
        }
      ],
      "viewership": {
        "total_live_view_count": 0,
        "unique_viewers": 0,
        "auth_unique_viewers": 0
      },
      "estimated_audience": {
        "daily_average": 0,
        "average_view_duration": -3.402823669209385e+38
      },
      "subscribers": {
        "total": 0,
        "income": {
          "min": 0,
          "max": 0
        },
        "tier_breakdown": {
          "paid": 0,
          "gifted": 0,
          "prime": 0,
          "tier_1": 0,
          "tier_2": 0,
          "tier_3": 0
        }
      },
      "chat": {
        "total_messages": 0,
        "active_chatters": 0,
        "daily_engagement_rate": -3.402823669209385e+38,
        "messages_per_chatter": -3.402823669209385e+38
      },
      "bits": {
        "total_bits": 0,
        "income": -3.402823669209385e+38
      }
    }
  },
  "pricing": {
    "currency": "string",
    "post_type": {
      "reels": {
        "min": 2500,
        "max": 6000
      },
      "story": {
        "min": 2500,
        "max": 6000
      },
      "static_post": {
        "min": 2500,
        "max": 6000
      },
      "carousel": {
        "min": 2500,
        "max": 6000
      }
    }
  },
  "pricing_explanations": {
    "engagement": {
      "level": "Very High",
      "description": "Very high engagement rate increases pricing, reflecting strong connection with audience."
    },
    "follower_level": {
      "level": "Celebrity Influencer",
      "description": "Celebrity influencer status commands higher pricing due to widespread fame and global appeal."
    },
    "audience_location": {
      "level": "Tier 1",
      "description": "Audience is primarily in Tier 1 countries, where purchasing power and prices are highest."
    },
    "audience_credibility": {
      "level": "High",
      "description": "High follower credibility score increases pricing, reflecting authenticity of audience."
    }
  }
}


14   Create a public profile analytics request
post
https://api.sandbox.insightiq.ai/v1/social/creators/async/profiles/analytics
Get analytics for creator's profile using publicly available data based on their username or link. This endpoint is asynchronous in nature. PROFILE_ANALYTICS.SUCCESS webhook event will be triggered once the submitted job is successful. Please refer the webhook events guide for more information.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Body

application/json

application/json
identifier
string
required
URL/username/handle of the profile you want to generate a report for

work_platform_id
string
required
Work platform ID for the platform on which you want to search for the profile using the above identifier

is_premium
boolean
Only for Twitch

Default:
false
Responses
202
Accepted

Body

application/json

application/json
responses
/
202
id
string<uuid>
required
InsightIQ's unique job ID for the submitted request

status
string
required
Status of the submitted job

Allowed values:
IN_PROGRESS
SUCCESS
FAILURE
identifier
string
required
Submitted URL/username/handle of the profile

work_platform
WorkPlatformAttribute
required
id
string<uuid>
required
Unique ID of the work platform.

Example:
9bb8913b-ddd9-430b-a66a-d74d846e6c66
name
string
required
Name of the work platform.

Example:
Instagram, Twitter
logo_url
string<uri>
required
Image URL of the work platform logo.

Example:
https://insightiq.ai/storage/instagr



# Sample Test/Show # 


Username
:
username
Password
:
password
{
  "identifier": "string",
  "work_platform_id": "string"
}
{
  "identifier": "string",
  "work_platform_id": "string"
}
Send API Request

Sandbox
import axios from 'axios';

const options = {
  method: 'POST',
  url: 'https://api.sandbox.insightiq.ai/v1/social/creators/async/profiles/analytics',
  headers: {
    'Content-Type': 'application/json',
    Accept: 'application/json',
    Authorization: 'Basic 123'
  },
  data: {identifier: 'string', work_platform_id: 'string'}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
  "status": "IN_PROGRESS",
  "identifier": "string",
  "work_platform": {
    "id": "9bb8913b-ddd9-430b-a66a-d74d846e6c66",
    "name": "Instagram",
    "logo_url": "https://insightiq.ai/storage/instagram.png"
  },
  "pricing": {
    "currency": "string",
    "post_type": {
      "reels": {
        "min": 2500,
        "max": 6000
      },
      "story": {
        "min": 2500,
        "max": 6000
      },
      "static_post": {
        "min": 2500,
        "max": 6000
      },
      "carousel": {
        "min": 2500,
        "max": 6000
      }
    }
  },
  "pricing_explanations": {
    "engagement": {
      "level": "Very High",
      "description": "Very high engagement rate increases pricing, reflecting strong connection with audience."
    },
    "follower_level": {
      "level": "Celebrity Influencer",
      "description": "Celebrity influencer status commands higher pricing due to widespread fame and global appeal."
    },
    "audience_location": {
      "level": "Tier 1",
      "description": "Audience is primarily in Tier 1 countries, where purchasing power and prices are highest."
    },
    "audience_credibility": {
      "level": "High",
      "description": "High follower credibility score increases pricing, reflecting authenticity of audience."
    }
  }
}


15  Fetch public analytics report of a profile
get
https://api.sandbox.insightiq.ai/v1/social/creators/async/profiles/analytics/{id}
Endpoint to get the profile analytics data with the supplied job ID.

Usually used in conjunction with the "PROFILE_ANALYTICS.*" webhooks, read more.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Path Parameters
id
string<uuid>
required
InsightIQ's unique job ID for the submitted profile analytics job

Responses
200
OK

Body

application/json

application/json
responses
/
200
id
string
required
Unique ID of the analytics report

status
string
required
Status of the submitted job

Allowed values:
IN_PROGRESS
SUCCESS
FAILURE
report_generated_at
string<date-time>
required
Timestamp of when the report was generated.

updated_at
string<date-time>
required
Timestamp of report updation.

work_platform
WorkPlatformAttribute
required
id
string<uuid>
required
Unique ID of the work platform.

Example:
9bb8913b-ddd9-430b-a66a-d74d846e6c66
name
string
required
Name of the work platform.

Example:
Instagram, Twitter
logo_url
string<uri>
required
Image URL of the work platform logo.

Example:
https://insightiq.ai/storage/instagram.png
profile
CreatorProfileBasicDetails
required
platform_username
string
required
Profile username on the platform

url
string<uri>
required
Profile URL from the platform

image_url
string<uri>
required
Profile image URL from the platform

follower_count
integer
required
Number of followers

subscriber_count
integer
required
Number of subscribers

is_verified
boolean
required
Whether the profile is verified by the platform

full_name
string
required
Profile full name on the platform

introduction
string
required
Description of the profile.Show all...

platform_account_type
string
required
Account type of the profile, such as PERSONAL, CREATOR, BUSINESS, etc.

gender
string
required
Gender of the profile

age_group
string
required
Age group of the profile

language
string
required
2 letter language code as per ISO 639-1, heckout this endpoint. You may also refer the "languages" table on this Airtable base

average_likes
integer
required
Average number of likes on posts

average_comments
integer
required
Average number of comments on posts

average_views
integer
required
Average number of views on posts

average_reels_views
integer
required
Average number of views on reels

engagement_rate
number
required
Profile engagement rate, i.e., total average likes of all posts divided by the number of followers

content_count
integer
required
Profile content count

sponsored_posts_performance
number
required
Performance of sponsored posts vs organic posts

reputation_history
array[object]
required
Profile reputation metrics over

location
object
required
Profile location details. Checkout this endpoint. You may also refer the "locations" table on this Airtable base.

top_hashtags
array[object]
required
List of top hashtags used by the creator

top_mentions
array[object]
required
List of top ment used by the creator

top_interests
array[object]
required
List of top interests of the creator. Checkout this endpoint. You may also refer the "interests and brands" table on this Airtable base.

brand_affinity
array[object]
Brand affinities of the profile

top_contents
array[CreatorContentBasicDetails]
required
List of top contents posted on the profile

recent_contents
array[CreatorContentBasicDetails]
required
List of recent contents posted on the profile

sponsored_contents
array[CreatorContentBasicDetails]
required
List of sponsored contents posted on the profile

lookalikes
array[CreatorProfileBasicDetails]
required
List of look alike profiles

audience
DemographicsAttributes
required
engagement_rate_histogram
array[object]
audience_likers
object
contact_details
array[object]
required
Publicly available contact information about the profile


# Sample Test/Show # 


Username
:
username
Password
:
password
id*
:
string
Send API Request

Sandbox
import axios from 'axios';

const options = {
  method: 'GET',
  url: 'https://api.sandbox.insightiq.ai/v1/social/creators/async/profiles/analytics/{id}',
  headers: {Accept: 'application/json', Authorization: 'Basic 123'}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "id": "string",
  "status": "IN_PROGRESS",
  "report_generated_at": "2019-08-24T14:15:22Z",
  "updated_at": "2019-08-24T14:15:22Z",
  "work_platform": {
    "id": "9bb8913b-ddd9-430b-a66a-d74d846e6c66",
    "name": "Instagram, Twitter",
    "logo_url": "https://insightiq.ai/storage/instagram.png"
  },
  "profile": {
    "platform_username": "string",
    "url": "http://example.com",
    "image_url": "http://example.com",
    "follower_count": 0,
    "subscriber_count": 0,
    "is_verified": true,
    "full_name": "string",
    "introduction": "string",
    "platform_account_type": "string",
    "gender": "string",
    "age_group": "string",
    "language": "string",
    "average_likes": 0,
    "average_comments": 0,
    "average_views": 0,
    "average_reels_views": 0,
    "engagement_rate": 0,
    "content_count": 0,
    "sponsored_posts_performance": 0,
    "reputation_history": [
      {
        "month": "string",
        "follower_count": 0,
        "subscriber_count": 0,
        "following_count": 0,
        "average_likes": 0
      }
    ],
    "location": {
      "city": "string",
      "state": "string",
      "country": "string"
    },
    "top_hashtags": [
      {
        "name": "string"
      }
    ],
    "top_mentions": [
      {
        "name": "string"
      }
    ],
    "top_interests": [
      {
        "name": "string"
      }
    ],
    "brand_affinity": [
      {
        "name": "string",
        "value": 0
      }
    ],
    "top_contents": [
      {
        "type": "VIDEO",
        "url": "http://example.com",
        "description": "string",
        "thumbnail_url": "http://example.com",
        "engagement": {
          "like_count": 0,
          "comment_count": 0
        },
        "published_at": "2020-03-27T12:56:34.534978"
      }
    ],
    "recent_contents": [
      {
        "type": "VIDEO",
        "url": "http://example.com",
        "description": "string",
        "thumbnail_url": "http://example.com",
        "engagement": {
          "like_count": 0,
          "comment_count": 0
        },
        "published_at": "2020-03-27T12:56:34.534978"
      }
    ],
    "sponsored_contents": [
      {
        "type": "VIDEO",
        "url": "http://example.com",
        "description": "string",
        "thumbnail_url": "http://example.com",
        "engagement": {
          "like_count": 0,
          "comment_count": 0
        },
        "published_at": "2020-03-27T12:56:34.534978"
      }
    ],
    "lookalikes": [
      {
        "platform_username": "string",
        "url": "http://example.com",
        "image_url": "http://example.com",
        "follower_count": 0,
        "subscriber_count": 0,
        "is_verified": true
      }
    ],
    "audience": {
      "ethnicities": [
        {
          "name": "string",
          "value": 0
        }
      ],
      "languages": [
        {
          "code": "string",
          "value": 0
        }
      ],
      "brand_affinity": [
        {
          "name": "string",
          "value": 0
        }
      ],
      "interests": [
        {
          "name": "string",
          "value": 0
        }
      ],
      "follower_types": [
        {
          "name": "MASS_FOLLOWERS",
          "value": 0
        }
      ],
      "lookalikes": [
        {
          "platform_username": "string",
          "url": "http://example.com",
          "image_url": "http://example.com",
          "follower_count": 0,
          "subscriber_count": 0,
          "is_verified": true
        }
      ],
      "credibility_score": 0,
      "credibility_score_band": [
        {
          "min": 0,
          "max": "string",
          "total_profile_count": 0
        }
      ],
      "significant_followers_percentage": 0,
      "significant_followers": {
        "platform_username": "string",
        "url": "http://example.com",
        "image_url": "http://example.com",
        "follower_count": 0,
        "subscriber_count": 0,
        "is_verified": true
      },
      "countries": [
        {
          "code": "US",
          "value": 78.9
        }
      ],
      "cities": [
        {
          "name": "Boulder",
          "value": 45.6
        }
      ],
      "gender_age_distribution": [
        {
          "gender": "FEMALE",
          "age_range": "13-18",
          "value": 12.3
        }
      ]
    },
    "engagement_rate_histogram": [
      {
        "engagement_rate_band": {
          "min": 0,
          "max": 0,
          "": true
        }
      }
    ],
    "audience_likers": {
      "countries": [
        {
          "code": "string",
          "value": 0
        }
      ],
      "cities": [
        {
          "name": "string",
          "value": 0
        }
      ],
      "gender_age_distribution": [
        {
          "gender": "string",
          "age_range": "string",
          "value": 0
        }
      ],
      "ethnicities": [
        {
          "name": "string",
          "value": 0
        }
      ],
      "languages": [
        {
          "code": "string",
          "value": 0
        }
      ],
      "brand_affinity": [
        {
          "name": "string",
          "value": 0
        }
      ],
      "interests": [
        {
          "name": "string",
          "value": 0
        }
      ],
      "follower_types": [
        {
          "type": "MASS_FOLLOWERS",
          "value": 0
        }
      ],
      "lookalikes": "string",
      "significant_likers_percentage": 0,
      "credibility_score": 0,
      "significant_likers": [
        {
          "platform_username": "string",
          "url": "http://example.com",
          "image_url": "http://example.com",
          "follower_count": 0,
          "subscriber_count": 0,
          "is_verified": true
        }
      ]
    },
    "contact_details": [
      {
        "type": "string",
        " value": "string"
      }
    ]
  }
}


16   Find social media profiles associated with supplied email ids.
post
https://api.sandbox.insightiq.ai/v1/social/creators/email-lookup
This API enables you to look up a social media profile associated with a specific email id. EMAIL_LOOKUP.SUCCESS webhook event will be triggered once the submitted job is successful. Please refer the webhook events guide for more information.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Body

application/json

application/json
emails
array[string]
required
Array of email id's to match profiles to.

Responses
202
Accepted

Body

application/json

application/json
responses
/
202
id
string<uuid>
required
Job ID for the request

created_at
string<date-time>
required
Timestamp of job submission.

emails
array[string]
required
Array of emails to look up for profiles.

status
string
required
Status of the job.

Allowed values:
IN_PROGRESS
SUCCESS
FAILURE



# Sample Test/Show # 


Username
:
username
Password
:
password
{
  "emails": [
    "string"
  ]
}
{
  "emails": [
    "string"
  ]
}
Send API Request

Sandbox
import axios from 'axios';

const options = {
  method: 'POST',
  url: 'https://api.sandbox.insightiq.ai/v1/social/creators/email-lookup',
  headers: {
    'Content-Type': 'application/json',
    Accept: 'application/json',
    Authorization: 'Basic 123'
  },
  data: {emails: ['string']}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
  "created_at": "2019-08-24T14:15:22Z",
  "emails": [
    "string"
  ],
  "status": "IN_PROGRESS"
}



17  Get results of the reverse email lookup
get
https://api.sandbox.insightiq.ai/v1/social/creators/email-lookup/{id}
Retrieve the results of the email to social profile lookup by supplying the job ID.

Usually used in conjunction with the "EMAIL_LOOKUP.*" webhooks, read more.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Path Parameters
id
string<uuid>
required
Job ID

Responses
200
OK

Body

application/json

application/json
responses
/
200
lookup_report
object
required
id
string<uuid>
emails
array[string]
status
string
Allowed values:
IN_PROGRESS
SUCCESS
FAILURE
matched_count
integer
required
non_matched_count
integer
required
matched_emails
array[object]
required
email
string
required
work_platform
WorkPlatformAttribute
required
platform_username
string
required
full_name
string
follower_count
integer
subscriber_count
integer
url
string<uri>
image_url
string<uri>
is_verified
boolean
non_matched_emails
array[string]
required


# Sample Test/Show # 

Username
:
username
Password
:
password
id*
:
string
Send API Request

Sandbox
import axios from 'axios';

const options = {
  method: 'GET',
  url: 'https://api.sandbox.insightiq.ai/v1/social/creators/email-lookup/{id}',
  headers: {Accept: 'application/json', Authorization: 'Basic 123'}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "lookup_report": {
    "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
    "emails": [
      "string"
    ],
    "status": "IN_PROGRESS",
    "matched_count": 0,
    "non_matched_count": 0
  },
  "matched_emails": [
    {
      "email": "string",
      "work_platform": {
        "id": "9bb8913b-ddd9-430b-a66a-d74d846e6c66",
        "name": "Instagram, Twitter",
        "logo_url": "https://insightiq.ai/storage/instagram.png"
      },
      "platform_username": "string",
      "full_name": "string",
      "follower_count": 0,
      "subscriber_count": 0,
      "url": "http://example.com",
      "image_url": "http://example.com",
      "is_verified": true
    }
  ],
  "non_matched_emails": [
    "string"
  ]
}


18   Find audience overlap information
post
https://api.sandbox.insightiq.ai/v1/social/creators/audience-overlap
Find the unique and overlapping audience among the followers of a set of creators of the same platform. AUDIENCE_OVERLAP.SUCCESS webhook event will be triggered once the submitted job is successful. Please refer the webhook events guide for more information.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Body

application/json

application/json
work_platform_id
string<uuid>
required
Work platform id

identifiers
array[string]
required
Array of usernames/profiles to compare the audience overlap. Please pass the identifiers without the preceding @.

Responses
202
Accepted

Body

application/json

application/json
responses
/
202
id
string<uuid>
required
Job ID for the request

identifiers
array[string]
required
Array of profile identifiers to find audience overlap between.

status
string
required
Status of the job.

Allowed values:
IN_PROGRESS
SUCCESS
FAILURE
work_platform
WorkPlatformAttribute
required
id
string<uuid>
required
Unique ID of the work platform.

Example:
9bb8913b-ddd9-430b-a66a-d74d846e6c66
name
string
required
Name of the work platform.

Example:
Instagram, Twitter
logo_url
string<uri>
required
Image URL of the work platform logo.

Example:
https://insightiq.ai/storage/instagram.png


# Sample Test/Show # 


Username
:
username
Password
:
password
{
  "work_platform_id": "69dc0dd2-b78e-4013-b0d6-5693bb48b548",
  "identifiers": [
    "string"
  ]
}
{
  "work_platform_id": "69dc0dd2-b78e-4013-b0d6-5693bb48b548",
  "identifiers": [
    "string"
  ]
}
Send API Request

Sandbox
import axios from 'axios';

const options = {
  method: 'POST',
  url: 'https://api.sandbox.insightiq.ai/v1/social/creators/audience-overlap',
  headers: {
    'Content-Type': 'application/json',
    Accept: 'application/json',
    Authorization: 'Basic 123'
  },
  data: {
    work_platform_id: '69dc0dd2-b78e-4013-b0d6-5693bb48b548',
    identifiers: ['string']
  }
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
  "identifiers": [
    "string"
  ],
  "status": "IN_PROGRESS",
  "work_platform": {
    "id": "9bb8913b-ddd9-430b-a66a-d74d846e6c66",
    "name": "Instagram, Twitter",
    "logo_url": "https://insightiq.ai/storage/instagram.png"
  }
}




19  Fetch the audience overlap information
get
https://api.sandbox.insightiq.ai/v1/social/creators/audience-overlap/{id}
Retrieve the audience overlap information by supplying the job ID.

Usually used in conjunction with the "AUDIENCE_OVERLAP.*" webhooks, read more.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Path Parameters
id
string
required
Job ID

Responses
200
OK

Body

application/json

application/json
responses
/
200
id
string<uuid>
required
status
string
required
Allowed values:
IN_PROGRESS
SUCCESS
FAILURE
total_follower_count
integer
unique_follower_count
integer
total_subscriber_count
integer
unique_subscriber_count
integer
profiles
array[object]
required
platform_username
string
required
follower_count
integer
required
subscriber_count
integer
required
unique_follower_percentage
number
required
overlap_follower_percentage
number
required
unique_subscriber_percentage
number
required
overlap_subscriber_percentage
number
required


# Sample Test/Show # 

Username
:
username
Password
:
password
id*
:
string
Send API Request

Sandbox
import axios from 'axios';

const options = {
  method: 'GET',
  url: 'https://api.sandbox.insightiq.ai/v1/social/creators/audience-overlap/{id}',
  headers: {Accept: 'application/json', Authorization: 'Basic 123'}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
  "status": "IN_PROGRESS",
  "total_follower_count": 0,
  "unique_follower_count": 0,
  "total_subscriber_count": 0,
  "unique_subscriber_count": 0,
  "profiles": [
    {
      "platform_username": "string",
      "follower_count": 0,
      "subscriber_count": 0,
      "unique_follower_percentage": 0,
      "overlap_follower_percentage": 0,
      "unique_subscriber_percentage": 0,
      "overlap_subscriber_percentage": 0
    }
  ]
}



20  Create an estimated reach & impressions request
post
https://api.sandbox.insightiq.ai/v1/social/creators/estimated-metrics
Estimate the reach and impressions for a content item of a creator.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Body

application/json

application/json
profile_url
string<uri>
required
Creator profile URL for which reach and impressions is to be estimated.

content_type
any
required
Content type for which the estimation is to be made.

Allowed values:
REELS
STORY
FEED
format
any
Format of the content item. Provide the format if the content type is STORY or FEED.

Allowed values:
IMAGE
VIDEO
work_platform_id
string<uuid>
required
Work platform id

Example:
9bb8913b-ddd9-430b-a66a-d74d846e6c66
Responses
202
Accepted

Body

application/json

application/json
responses
/
202
id
string<uuid>
required
Job ID for the request

profile_url
string<uri>
required
Creator profile URL for which reach and impressions is estimated.

content_type
any
required
Content type for which the estimation is made.

Allowed values:
REELS
STORY
FEED
format
any
Format of the content type

Allowed values:
IMAGE
VIDEO
work_platform
WorkPlatformAttribute
required
id
string<uuid>
required
Unique ID of the work platform.

Example:
9bb8913b-ddd9-430b-a66a-d74d846e6c66
name
string
required
Name of the work platform.

Example:
Instagram, Twitter
logo_url
string<uri>
required
Image URL of the work platform logo.

Example:
https://insightiq.ai/storage/instagram.png
status
any
required
Status of the submitted job

Allowed values:
IN_PROGRESS
SUCCESS
FAILURE


# Sample Test/Show # 


Username
:
username
Password
:
password
{
  "profile_url": "http://example.com",
  "content_type": "REELS",
  "format": "IMAGE",
  "work_platform_id": "9bb8913b-ddd9-430b-a66a-d74d846e6c66"
}
{
  "profile_url": "http://example.com",
  "content_type": "REELS",
  "format": "IMAGE",
  "work_platform_id": "9bb8913b-ddd9-430b-a66a-d74d846e6c66"
}
Send API Request

Sandbox
import axios from 'axios';

const options = {
  method: 'POST',
  url: 'https://api.sandbox.insightiq.ai/v1/social/creators/estimated-metrics',
  headers: {
    'Content-Type': 'application/json',
    Accept: 'application/json',
    Authorization: 'Basic 123'
  },
  data: {
    profile_url: 'http://example.com',
    content_type: 'REELS',
    format: 'IMAGE',
    work_platform_id: '9bb8913b-ddd9-430b-a66a-d74d846e6c66'
  }
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
  "profile_url": "http://example.com",
  "content_type": "REELS",
  "format": "IMAGE",
  "work_platform": {
    "id": "9bb8913b-ddd9-430b-a66a-d74d846e6c66",
    "name": "Instagram, Twitter",
    "logo_url": "https://insightiq.ai/storage/instagram.png"
  },
  "status": "IN_PROGRESS"
}



21  Get the estimated reach & impressions for a content item
get
https://api.sandbox.insightiq.ai/v1/social/creators/estimated-metrics/{id}
Get the estimated reach & impressions for a content item.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Path Parameters
id
string
required
Job ID

Responses
200
OK

Body

application/json

application/json
responses
/
200
id
string
required
Job ID

profile_url
string
required
Submitted profile url

content_type
string
required
Submitted content type

format
string
Submitted content format

status
string
required
Status of the submitted job

work_platform
WorkPlatformAttribute
required
id
string<uuid>
required
Unique ID of the work platform.

Example:
9bb8913b-ddd9-430b-a66a-d74d846e6c66
name
string
required
Name of the work platform.

Example:
Instagram, Twitter
logo_url
string<uri>
required
Image URL of the work platform logo.

Example:
https://insightiq.ai/storage/instagram.png
estimated_reach
object
required
min
number
Lower bound of the estimated range.

max
number
Upper bound of the estimated range.

absolute
number
Estimated absolute value.

estimated_impressions
object
required
min
number
Lower bound of the estimated range.

max
number
Upper bound of the estimated range.

absolute
number
Estimated absolute value.


# Sample Test/Show # 


Username
:
username
Password
:
password
id*
:
string
Send API Request

Sandbox
import axios from 'axios';

const options = {
  method: 'GET',
  url: 'https://api.sandbox.insightiq.ai/v1/social/creators/estimated-metrics/{id}',
  headers: {Accept: 'application/json', Authorization: 'Basic 123'}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "id": "string",
  "profile_url": "string",
  "content_type": "string",
  "format": "string",
  "status": "string",
  "work_platform": {
    "id": "9bb8913b-ddd9-430b-a66a-d74d846e6c66",
    "name": "Instagram, Twitter",
    "logo_url": "https://insightiq.ai/storage/instagram.png"
  },
  "estimated_reach": {
    "min": 0,
    "max": 0,
    "absolute": 0
  },
  "estimated_impressions": {
    "min": 0,
    "max": 0,
    "absolute": 0
  }
}


22  Get the number of high-follower followers of a specific creator
post
https://api.sandbox.insightiq.ai/v1/social/creators/highfollower-audience
Retrieves the number of high-follower followers of a specified social media creator based on multiple filtering parameters.
This API supports three work platforms; YouTube, TiKTok, and Instagram.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Body

application/json

application/json
work_platform_id
string
required
The social platform of the creator (e.g., instagram, tiktok, youtube)

identifier
string
required
The creator’s username or profile link

dry_run
boolean
If true, provides a count estimation of followers without returning their full data.

Default:
false
audience_type
any
Segment of the creator’s audience should be exportedShow all...

Allowed values:
all
followers
likers
commenters
Default:
all
follower_count
object
Follower count of the creator

min
integer
The minimum follower count a user must have to be included

Default:
1000
has_email
boolean
For dry_run=true requests, also returns how many users have a known email (optional)

Default:
false
limit
integer
Limits the number of results returned up to 100. For requests higher than 100, use multiple requests

Responses
200
OK

Body

application/json

application/json
responses
/
200
id
string
work_platform
WorkPlatformAttribute
required
id
string<uuid>
required
Unique ID of the work platform.

Example:
9bb8913b-ddd9-430b-a66a-d74d846e6c66
name
string
required
Name of the work platform.

Example:
Instagram, Twitter
logo_url
string<uri>
required
Image URL of the work platform logo.

Example:
https://insightiq.ai/storage/instagram.png
identifier
string
required
The creator’s username or profile link

dry_run
boolean
If false, provides a count estimation and follower's full data. If true, provides a count estimation without returning the full data.

Default:
false
audience_type
any
Specifies which segment of the creator’s audience should be exported

Allowed values:
all
followers
likers
commenters
Default:
all
follower_count
object
min
integer
The minimum follower count a user must have to be included

Default:
1000
has_email
boolean
If the follower has an email or not

Default:
false
status
string


# Sample Test/Show # 


Username
:
username
Password
:
password
{
  "work_platform_id": "string",
  "identifier": "string",
  "dry_run": false,
  "audience_type": "all",
  "follower_count": {
    "min": 1000
  },
  "has_email": false,
  "limit": 0
}
{
  "work_platform_id": "string",
  "identifier": "string",
  "dry_run": false,
  "audience_type": "all",
  "follower_count": {
    "min": 1000
  },
  "has_email": false,
  "limit": 0
}
Send API Request

Sandbox
import axios from 'axios';

const options = {
  method: 'POST',
  url: 'https://api.sandbox.insightiq.ai/v1/social/creators/highfollower-audience',
  headers: {
    'Content-Type': 'application/json',
    Accept: 'application/json',
    Authorization: 'Basic 123'
  },
  data: {
    work_platform_id: 'string',
    identifier: 'string',
    dry_run: false,
    audience_type: 'all',
    follower_count: {min: 1000},
    has_email: false,
    limit: 0
  }
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "id": "string",
  "work_platform": {
    "id": "9bb8913b-ddd9-430b-a66a-d74d846e6c66",
    "name": "Instagram, Twitter",
    "logo_url": "https://insightiq.ai/storage/instagram.png"
  },
  "identifier": "string",
  "dry_run": false,
  "audience_type": "all",
  "follower_count": {
    "min": 1000
  },
  "has_email": false,
  "status": "string"
}


24  Fetching profile information of followers of a creator who match the given criteria
get
https://api.sandbox.insightiq.ai/v1/social/creators/highfollower-audience/{id}
For API to return the number of followers as well as their profile data, value of dry_run has to be false.
This API supports three work platforms; YouTube, TiKTok, and Instagram.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Path Parameters
id
string
required
Responses
200
OK

Headers
header-0
string
Body

application/json

application/json
responses
/
200
Data of followers of a specific social creator.

id
string
required
Unique identifier for the follower

Example:
21110560-9501-4d85-9654-ed060e040a5e
status
string
required
Description of the profile.Show all...

Example:
SUCCESS
data
array[object]
work_platform
WorkPlatformAttribute
required
platform_username
string
required
Username of the follower

url
string
required
Url of the follower's social account

image_url
string
required
full_name
string
required
Profile full name on the platform of the follower

introduction
string
required
Introduction or bio of the follower

is_verified
boolean
If the follower is verfied or not

platform_account_type
string
required
Account type of the profile, such as PERSONAL, CREATOR, BUSINESS, etc. of the follower

gender
string
required
Gender of the follower

age_group
string
required
Age group of the follower

language
string
2 letter language code as per ISO 639-1. Checkout this endpoint. You may also refer to the "languages" table on this Airtable base

follower_count
integer
Follower count of the follower of a creator

engagement_rate
integer
Profile engagement rate, i.e., total likes of all posts divided by the number of followers

location
object
required
contact_details
array[object]
audience_details
any
metadata
BasicMetadata
Basic metadata object representing meta information about resources.

offset
integer
required
Offset value passed in the query parameter.

Default:
0
Example:
0
limit
integer
required
Limit value passed in the query parameter.

Default:
10
Example:
10


# Sample Test/Show # 



Username
:
username
Password
:
password
id*
:
string
Send API Request

Sandbox
import axios from 'axios';

const options = {
  method: 'GET',
  url: 'https://api.sandbox.insightiq.ai/v1/social/creators/highfollower-audience/{id}',
  headers: {Accept: 'application/json', Authorization: 'Basic 123'}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "id": "21110560-9501-4d85-9654-ed060e040a5e",
  "status": "SUCCESS",
  "data": [
    {
      "work_platform": {
        "id": "9bb8913b-ddd9-430b-a66a-d74d846e6c66",
        "name": "Instagram, Twitter",
        "logo_url": "https://insightiq.ai/storage/instagram.png"
      },
      "platform_username": "string",
      "url": "string",
      "image_url": "string",
      "full_name": "string",
      "introduction": "string",
      "is_verified": true,
      "platform_account_type": "string",
      "gender": "string",
      "age_group": "string",
      "language": "string",
      "follower_count": 0,
      "engagement_rate": 0,
      "location": {
        "city": "string",
        "state": "string",
        "country": "string"
      },
      "contact_details": [
        {
          "type": "string",
          "value": "string"
        }
      ]
    }
  ],
  "audience_details": null,
  "metadata": {
    "offset": 0,
    "limit": 10
  }
}



**-------- Pofessional Creator Discovery ----------**


1  Search public profiles of creators
post
https://api.sandbox.insightiq.ai/v1/professional/creators/profiles/search
Search for LinkedIn creator profiles using publicly available data based on available filters.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Body

application/json

application/json
work_platform_id
string
required
Target platform to search public profiles on

follower_count
object
Filter profiles by follower count

min
integer
Minimum followers

max
integer
Maximum followers

content_count
object
Filter profiles by content count

min
integer
Minimum number of contents

max
integer
Maximum number of contents

has_contact_details
boolean
Filter profiles by availability of contact details

last_post_timestamp
string<date-time>
Filter profiles by the timestamp (ISO 8601) of last post

Example:
2019-08-24T14:15:22
average_likes
object
Filter profiles by average likes

min
integer
Minimum average likes of creator

max
integer
Maximum average likes of creator

average_comments
object
Filter profiles by average comments

min
integer
Minimum average views of creator

max
integer
Maximum average views of creator

average_shares
object
Filter profiles by average shares

min
integer
Minimum average views of creator

max
integer
Maximum average views of creator

engagement_rate
object
Filter profiles by engagement rates

percentage_value
string
required
Percentage value for the comparison, which would always be a "greater than or equal to" comparison

creator_location_names
array[string]
InsightIQ's location identifers to be passed to this attribute. Checkout this endpoint to know the identifier for the location filter of your choice

bio_phrase
string
Filter profiles by the phrase they use in their bio

hashtags
array[object]
Filter profiles by hashtags in posts.

name
string
required
Please provide hashtags without # prefix

talks_about
array[object]
Filter profiles by hashtags mentioned in profile.

name
string
required
InsightIQ's talks about identifers to be passed to this attribute. Checkout this endpoint to know the identifier for the talks about filter of your choice.

mentions
array[object]
Filter profiles by post mentions.

name
string
required
Please provide mentions without @ prefix

type
any
required
Allowed value:
COMPANY
creator_account_type
array[string]
Filter profiles by creator account type

Allowed values:
CREATOR
TOP_VOICE
PREMIUM_USER
sort_by
object
required
Sorting order for the search results

field
string
required
Field to sort by.

Allowed values:
AVERAGE_LIKES
FOLLOWER_COUNT
AVERAGE_SHARES
CONTENT_COUNT
AVERAGE_COMMENTS
order
string
required
Ordering pattern

Allowed value:
DESCENDING
limit
integer
The number of search results to be returned. It can be between 1 to 500. The default value is 10. Limit + offset should be less than 500.

<= 500
Default:
10
offset
integer
The number of search results to skip. Use this argument for pagination. The default value is 0. Limit + offset should be less than 500.

Default:
0
work_experiences
array[object]
title
string
company
string<uuid>
InsightIQ's company identifer to be passed to this attribute. Checkout this endpoint to know the identifier for the company filter of your choice.

education
array[object]
institute
string<uuid>
InsightIQ's institute identifers to be passed to this attribute. Checkout this endpoint to know the identifier for the institute filter of your choice.

degree
string<uuid>
InsightIQ's degree identifers to be passed to this attribute. Checkout this endpoint to know the identifier for the degree filter of your choice.

Responses
200
Returns search results according to the given filters

Headers
request-id
string<uuid>
required
Unique ID associated with this request. Please quote this request while requesting support.

Body

application/json

application/json
responses
/
200
data
array[object]
full_name
string
required
Profile full name on the platform

url
string<uri>
required
Profile URL from the platform

image_url
string<uri>
required
Profile image URL from the platform

follower_count
integer
required
Number of followers

connection_count
integer
required
Number of connections

work_platform
WorkPlatformAttribute
required
introduction
string
required
Description of the profile.Show all...

engagement_rate
number
required
Profile engagement rate, i.e., total likes of all posts divided by the number of followers

creator_location
object
required
Profile location details. Checkout this endpoint. You may also refer the "locations" table on this Airtable base.

external_id
string
profile_headline
string
talks_about
array[string]
current_positions
array[object]
creator_account_type
array
Allowed values:
CREATOR
TOP_VOICE
PREMIUM_USER
open_to
array[string]
metadata
object
Metadata object representing meta information about resources.

offset
integer
Default:
0
limit
integer
Default:
10


# Sample Test/Show # 

Username
:
username
Password
:
password
{
  "work_platform_id": "string",
  "follower_count": {
    "min": 0,
    "max": 0
  },
  "content_count": {
    "min": 0,
    "max": 0
  },
  "has_contact_details": true,
  "last_post_timestamp": "2019-08-24T14:15:22",
  "average_likes": {
    "min": 0,
    "max": 0
  },
  "average_comments": {
    "min": 0,
    "max": 0
  },
  "average_shares": {
    "min": 0,
    "max": 0
  },
  "engagement_rate": {
    "percentage_value": "string"
  },
  "creator_location_names": [
    "string"
  ],
  "bio_phrase": "string",
  "hashtags": [
    {
      "name": "string"
    }
  ],
  "talks_about": [
    {
      "name": "string"
    }
  ],
  "mentions": [
    {
      "name": "string",
      "type": "COMPANY"
    }
  ],
  "creator_account_type": [
    "CREATOR"
  ],
  "sort_by": {
    "field": "AVERAGE_LIKES",
    "order": "DESCENDING"
  },
  "limit": 10,
  "offset": 0,
  "work_experiences": [
    {
      "title": "string",
      "company": "87340f10-f684-4b06-8427-5981380bd9a9"
    }
  ],
  "education": [
    {
      "institute": "d0f64f43-fd38-4960-972b-ae963272f207",
      "degree": "bb2e1bc4-2583-409b-875e-c656eecee1b9"
    }
  ]
}
{
  "work_platform_id": "string",
  "follower_count": {
    "min": 0,
    "max": 0
  },
  "content_count": {
    "min": 0,
    "max": 0
  },
  "has_contact_details": true,
  "last_post_timestamp": "2019-08-24T14:15:22",
  "average_likes": {
    "min": 0,
    "max": 0
  },
  "average_comments": {
    "min": 0,
    "max": 0
  },
  "average_shares": {
    "min": 0,
    "max": 0
  },
  "engagement_rate": {
    "percentage_value": "string"
  },
  "creator_location_names": [
    "string"
  ],
  "bio_phrase": "string",
  "hashtags": [
    {
      "name": "string"
    }
  ],
  "talks_about": [
    {
      "name": "string"
    }
  ],
  "mentions": [
    {
      "name": "string",
      "type": "COMPANY"
    }
  ],
  "creator_account_type": [
    "CREATOR"
  ],
  "sort_by": {
    "field": "AVERAGE_LIKES",
    "order": "DESCENDING"
  },
  "limit": 10,
  "offset": 0,
  "work_experiences": [
    {
      "title": "string",
      "company": "87340f10-f684-4b06-8427-5981380bd9a9"
    }
  ],
  "education": [
    {
      "institute": "d0f64f43-fd38-4960-972b-ae963272f207",
      "degree": "bb2e1bc4-2583-409b-875e-c656eecee1b9"
    }
  ]
}
Send API Request

Sandbox
import axios from 'axios';

const options = {
  method: 'POST',
  url: 'https://api.sandbox.insightiq.ai/v1/professional/creators/profiles/search',
  headers: {
    'Content-Type': 'application/json',
    Accept: 'application/json',
    Authorization: 'Basic 123'
  },
  data: {
    work_platform_id: 'string',
    follower_count: {min: 0, max: 0},
    content_count: {min: 0, max: 0},
    has_contact_details: true,
    last_post_timestamp: '2019-08-24T14:15:22',
    average_likes: {min: 0, max: 0},
    average_comments: {min: 0, max: 0},
    average_shares: {min: 0, max: 0},
    engagement_rate: {percentage_value: 'string'},
    creator_location_names: ['string'],
    bio_phrase: 'string',
    hashtags: [{name: 'string'}],
    talks_about: [{name: 'string'}],
    mentions: [{name: 'string', type: 'COMPANY'}],
    creator_account_type: ['CREATOR'],
    sort_by: {field: 'AVERAGE_LIKES', order: 'DESCENDING'},
    limit: 10,
    offset: 0,
    work_experiences: [{title: 'string', company: '87340f10-f684-4b06-8427-5981380bd9a9'}],
    education: [
      {
        institute: 'd0f64f43-fd38-4960-972b-ae963272f207',
        degree: 'bb2e1bc4-2583-409b-875e-c656eecee1b9'
      }
    ]
  }
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "data": [
    {
      "full_name": "string",
      "url": "http://example.com",
      "image_url": "http://example.com",
      "follower_count": 0,
      "connection_count": 0,
      "work_platform": {
        "id": "9bb8913b-ddd9-430b-a66a-d74d846e6c66",
        "name": "Instagram, Twitter",
        "logo_url": "https://insightiq.ai/storage/instagram.png"
      },
      "introduction": "string",
      "engagement_rate": 0,
      "creator_location": {
        "city": "string",
        "state": "string",
        "country": "string"
      },
      "external_id": "string",
      "profile_headline": "string",
      "talks_about": [
        "string"
      ],
      "current_positions": [
        {
          "title": "string",
          "company": "string",
          "description": "string",
          "location": "string",
          "time_period": {
            "start_date": "2019-08-24T14:15:22"
          }
        }
      ],
      "creator_account_type": [
        "CREATOR"
      ],
      "open_to": [
        "string"
      ]
    }
  ],
  "metadata": {
    "offset": 0,
    "limit": 10
  }
}



2   Get public analytics of a professional profile
post
https://api.sandbox.insightiq.ai/v1/professional/creators/profiles/analytics
Get analytics of profile using publicly available data based on their profile link.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Body

application/json

application/json
Public Analytics of Professional profiles

profile_url
string<uri>
required
URL of the profile you want to generate analytics for

work_platform_id
string<uuid>
required
Work platform ID for the platform of the above profile url

Responses
200
Returns detailed analytics of the given professional profile

Body

application/json

application/json
responses
/
200
id
string
required
Unique ID of the analytics report

created_at
string
required
User creation timestamp (UTC date and time in ISO 8601 format)

updated_at
string
required
User updation timestamp (UTC date and time in ISO 8601 format)

work_platform
object
required
is_creator
boolean
is_influencer
boolean
skills
array[string]
first_name
string
required
First name of the profile

middle_name
string
Middle name of the profile

sales_id
string
sales_link
string
last_name
string
required
Last name of the profile

platform_username
string
profile_summary
string
platform_account_type
array[string]
url
string
required
profile_headline
string
image_url
string
industry
string
Name of the industry mentioned on the profile

follower_count
integer
required
average_likes
integer
average_comments
integer
average_shares
integer
engagement_rate
integer
languages
array[string]
reputation
object
follower_count
integer
connection_count
integer
location
object
Profile location details. Checkout this endpoint. You may also refer the "locations" table on this Airtable base.

name
string
country
string
Profile location country

country_name
string
city
string
Profile location city

state
string
Profile location state

contact_details
array[object]
Publicly available contact information about the professional profile

type
string
required
Type of contact, for example: phone, email, twitter

value
string
required
Contact information

top_contents
array[object]
type
string
url
string
description
string
thumbnail_url
any
engagement
object
published_at
string
recent_contents
array[object]
type
string
url
string
description
string
thumbnail_url
any
engagement
object
published_at
string
top_hashtags
array[object]
List of top hashtags used by the creator

name
string
top_mentions
array[object]
List of top mentions used by the creator

name
string
talks_about
array[object]
name
string
work_experiences
WorkExperiences
Work experiences listed on the profile

title
string
Job title

company
object
Company related information object

description
string or null
Work experience description mentioned on the profile

time_period
TimePeriod
Time period object

location
object
Work location

education
Education
Education listed on the profile

degree
string or null
Degree name

field_study
array[string] or null
Field of study

grade
string or null
Grade secured

school
object
School related information object

description
string or null
Description mentioned on the profile, if any

time_period
TimePeriod
Time period object

activities
string or null
Activities participated in

publications
array[object]
certifications
array[object]
volunteer_experiences
array[object]
people_also_viewed
array[object]
last_name
string
first_name
string
profile_headline
string
entity_urn
string
public_identifier
string
premium
boolean
image_url
string
url
string
reputation
object
honors
array[object]
projects
array[object]
external_id
string
patents
array[object]
recommendations_received
array[object]
name
string
subtitle
string
date
string
context
string
description
string
urn
string
url
string
recommendations_given
array[object]
name
string
subtitle
string
date
string
context
string
urn
string
url
string



# Sample Test/Show # 

Username
:
username
Password
:
password
{
  "profile_url": "http://example.com",
  "work_platform_id": "69dc0dd2-b78e-4013-b0d6-5693bb48b548"
}
{
  "profile_url": "http://example.com",
  "work_platform_id": "69dc0dd2-b78e-4013-b0d6-5693bb48b548"
}
Send API Request

Sandbox
import axios from 'axios';

const options = {
  method: 'POST',
  url: 'https://api.sandbox.insightiq.ai/v1/professional/creators/profiles/analytics',
  headers: {
    'Content-Type': 'application/json',
    Accept: 'application/json',
    Authorization: 'Basic 123'
  },
  data: {
    profile_url: 'http://example.com',
    work_platform_id: '69dc0dd2-b78e-4013-b0d6-5693bb48b548'
  }
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "id": "string",
  "created_at": "string",
  "updated_at": "string",
  "work_platform": {},
  "is_creator": true,
  "is_influencer": true,
  "skills": [
    "string"
  ],
  "first_name": "string",
  "middle_name": "string",
  "sales_id": "string",
  "sales_link": "string",
  "last_name": "string",
  "platform_username": "string",
  "profile_summary": "string",
  "platform_account_type": [
    "string"
  ],
  "url": "string",
  "profile_headline": "string",
  "image_url": "string",
  "industry": "string",
  "follower_count": 0,
  "average_likes": 0,
  "average_comments": 0,
  "average_shares": 0,
  "engagement_rate": 0,
  "languages": [
    "string"
  ],
  "reputation": {
    "follower_count": 0,
    "connection_count": 0
  },
  "location": {
    "name": "string",
    "country": "string",
    "country_name": "string",
    "city": "string",
    "state": "string"
  },
  "contact_details": [
    {
      "type": "string",
      "value": "string"
    }
  ],
  "top_contents": [
    {
      "type": "string",
      "url": "string",
      "description": "string",
      "thumbnail_url": null,
      "engagement": {
        "like_count": 0,
        "comment_count": 0
      },
      "published_at": "string"
    }
  ],
  "recent_contents": [
    {
      "type": "string",
      "url": "string",
      "description": "string",
      "thumbnail_url": null,
      "engagement": {
        "like_count": 0,
        "comment_count": 0
      },
      "published_at": "string"
    }
  ],
  "top_hashtags": [
    {
      "name": "string"
    }
  ],
  "top_mentions": [
    {
      "name": "string"
    }
  ],
  "talks_about": [
    {
      "name": "string"
    }
  ],
  "work_experiences": {
    "title": "string",
    "company": {
      "name": "string",
      "industries": [
        null
      ],
      "logo_url": "http://example.com",
      "employee_count": {
        "min": 0,
        "max": 0
      }
    },
    "description": "string",
    "time_period": {
      "start_date": {
        "month": 5,
        "year": 1998
      },
      "end_date": {
        "month": 8,
        "year": 2000
      }
    },
    "location": {
      "name": "string",
      "country": "string",
      "country_name": "string",
      "city": "string",
      "state": "string"
    }
  },
  "education": {
    "degree": "string",
    "field_study": [
      "string"
    ],
    "grade": "string",
    "school": {
      "name": "string",
      "logo_url": "http://example.com"
    },
    "description": "string",
    "time_period": {
      "start_date": {
        "month": 5,
        "year": 1998
      },
      "end_date": {
        "month": 8,
        "year": 2000
      }
    },
    "activities": "string"
  },
  "publications": [
    {}
  ],
  "certifications": [
    {}
  ],
  "volunteer_experiences": [
    {}
  ],
  "people_also_viewed": [
    {
      "last_name": "string",
      "first_name": "string",
      "profile_headline": "string",
      "entity_urn": "string",
      "public_identifier": "string",
      "premium": true,
      "image_url": "string",
      "url": "string",
      "reputation": {
        "follower_count": 0
      }
    }
  ],
  "honors": [
    {}
  ],
  "projects": [
    {}
  ],
  "external_id": "string",
  "patents": [
    {}
  ],
  "recommendations_received": [
    {
      "name": "string",
      "subtitle": "string",
      "date": "string",
      "context": "string",
      "description": "string",
      "urn": "string",
      "url": "string"
    }
  ],
  "recommendations_given": [
    {
      "name": "string",
      "subtitle": "string",
      "date": "string",
      "context": "string",
      "urn": "string",
      "url": "string"
    }
  ]
}



3  Get locations for public profiles search
get
https://api.sandbox.insightiq.ai/v1/professional/creators/dictionary/locations
Dictionary of countries for the public profiles search endpoint.

We recommend caching the response at your end for 15 days.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Query Parameters
identifier
string
Use this to search for matching items

Example:
New York
limit
integer
The number of objects to be returned. It can be between 1 to 100. The default value is 10.

>= 1
<= 100
Default:
10
offset
integer
The number of objects to skip. Use this argument for pagination. The default value is 0.

>= 0
Default:
0
Responses
200
Body

application/json

application/json
responses
/
200
Locations dictionary for public profiles search

data
array[object]
required
id
string<uuid>
required
InsightIQ's unique identifier for the location. Pass this identifier to the professional creator discovery endpoint to search creators.

name
string
required
Name of the location.

metadata
BasicMetadata
required
Basic metadata object representing meta information about resources.

offset
integer
required
Offset value passed in the query parameter.

Default:
0
Example:
0
limit
integer
required
Limit value passed in the query parameter.

Default:
10
Example:
10


# Sample Test/Show # 

Username
:
username
Password
:
password
identifier
:
string
limit
:
defaults to: 10
offset
:
defaults to: 0
Send API Request

Sandbox
import axios from 'axios';

const options = {
  method: 'GET',
  url: 'https://api.sandbox.insightiq.ai/v1/professional/creators/dictionary/locations',
  headers: {Accept: 'application/json', Authorization: 'Basic 123'}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "data": [
    {
      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
      "name": "string"
    }
  ],
  "metadata": {
    "offset": 0,
    "limit": 10
  }
}



4  Get education institutes for public profiles search
get
https://api.sandbox.insightiq.ai/v1/professional/creators/dictionary/education-institutes
Dictionary of education institutes for the public profiles search endpoint.

We recommend caching the response at your end for 15 days.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Query Parameters
identifier
string
Use this to search for matching items

Example:
New York
limit
integer
The number of objects to be returned. It can be between 1 to 100. The default value is 10.

>= 1
<= 100
Default:
10
offset
integer
The number of objects to skip. Use this argument for pagination. The default value is 0.

>= 0
Default:
0
Responses
200
Body

application/json

application/json
responses
/
200
Education institutes dictionary for public profiles search

data
array[object]
required
id
string<uuid>
required
InsightIQ's unique identifier for the education institute. Pass this identifier to the professional creator discovery endpoint to search creators.

name
string
required
Name of the education institute.

image_url
string or null
Logo of the education institute.

metadata
BasicMetadata
required
Basic metadata object representing meta information about resources.

offset
integer
required
Offset value passed in the query parameter.

Default:
0
Example:
0
limit
integer
required
Limit value passed in the query parameter.

Default:
10
Example:
10


# Sample Test/Show # 

Username
:
username
Password
:
password
identifier
:
string
limit
:
defaults to: 10
offset
:
defaults to: 0
Send API Request

Sandbox
import axios from 'axios';

const options = {
  method: 'GET',
  url: 'https://api.sandbox.insightiq.ai/v1/professional/creators/dictionary/education-institutes',
  headers: {Accept: 'application/json', Authorization: 'Basic 123'}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "data": [
    {
      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
      "name": "string",
      "image_url": "string"
    }
  ],
  "metadata": {
    "offset": 0,
    "limit": 10
  }
}



5   Get education degrees for public profiles search
get
https://api.sandbox.insightiq.ai/v1/professional/creators/dictionary/education-degrees
Dictionary of education-degrees for the public profiles search endpoint.

We recommend caching the response at your end for 15 days.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Query Parameters
identifier
string
Use this to search for matching items

Example:
New York
limit
integer
The number of objects to be returned. It can be between 1 to 100. The default value is 10.

>= 1
<= 100
Default:
10
offset
integer
The number of objects to skip. Use this argument for pagination. The default value is 0.

>= 0
Default:
0
Responses
200
Body

application/json

application/json
responses
/
200
Education degrees dictionary for public profiles search

data
array[object]
required
id
string<uuid>
required
InsightIQ's unique identifier for the education degree. Pass this identifier to the professional creator discovery endpoint to search creators.

name
string
required
Name of the education degree.

metadata
BasicMetadata
required
Basic metadata object representing meta information about resources.

offset
integer
required
Offset value passed in the query parameter.

Default:
0
Example:
0
limit
integer
required
Limit value passed in the query parameter.

Default:
10
Example:
10



# Sample Test/Show # 


Username
:
username
Password
:
password
identifier
:
string
limit
:
defaults to: 10
offset
:
defaults to: 0
Send API Request

Sandbox
import axios from 'axios';

const options = {
  method: 'GET',
  url: 'https://api.sandbox.insightiq.ai/v1/professional/creators/dictionary/education-degrees',
  headers: {Accept: 'application/json', Authorization: 'Basic 123'}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "data": [
    {
      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
      "name": "string"
    }
  ],
  "metadata": {
    "offset": 0,
    "limit": 10
  }
}



6   Get talks about topics for public profiles search
get
https://api.sandbox.insightiq.ai/v1/professional/creators/dictionary/talks-about
Dictionary of talks about topics for the public profiles search endpoint.

We recommend caching the response at your end for 15 days.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Query Parameters
identifier
string
Use this to search for matching items

Example:
New York
limit
integer
The number of objects to be returned. It can be between 1 to 100. The default value is 10.

>= 1
<= 100
Default:
10
offset
integer
The number of objects to skip. Use this argument for pagination. The default value is 0.

>= 0
Default:
0
Responses
200
Body

application/json

application/json
responses
/
200
Talks about dictionary for public profiles search

data
array[object]
required
id
string<uuid>
required
InsightIQ's unique identifier for the talks about topic. Pass this identifier to the professional creator discovery endpoint to search creators.

name
string
required
Name of the talks about topic.

metadata
BasicMetadata
required
Basic metadata object representing meta information about resources.

offset
integer
required
Offset value passed in the query parameter.

Default:
0
Example:
0
limit
integer
required
Limit value passed in the query parameter.

Default:
10
Example:
10


# Sample Test/Show # 

Username
:
username
Password
:
password
identifier
:
string
limit
:
defaults to: 10
offset
:
defaults to: 0
Send API Request

Sandbox
import axios from 'axios';

const options = {
  method: 'GET',
  url: 'https://api.sandbox.insightiq.ai/v1/professional/creators/dictionary/talks-about',
  headers: {Accept: 'application/json', Authorization: 'Basic 123'}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "data": [
    {
      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
      "name": "string"
    }
  ],
  "metadata": {
    "offset": 0,
    "limit": 10
  }
}



7  Get companies for public profiles search
get
https://api.sandbox.insightiq.ai/v1/professional/creators/dictionary/companies
Dictionary of companies for the public profiles search endpoint.

We recommend caching the response at your end for 15 days.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Query Parameters
identifier
string
Use this to search for matching items

Example:
New York
limit
integer
The number of objects to be returned. It can be between 1 to 100. The default value is 10.

>= 1
<= 100
Default:
10
offset
integer
The number of objects to skip. Use this argument for pagination. The default value is 0.

>= 0
Default:
0
Responses
200
Body

application/json

application/json
responses
/
200
Companies dictionary for public profiles search

data
array[object]
required
id
string<uuid>
required
InsightIQ's unique identifier for the company. Pass this identifier to the professional creator discovery endpoint to search creators.

name
string
required
Name of the company.

image_url
string<uuid>
Logo of the company.

metadata
BasicMetadata
required
Basic metadata object representing meta information about resources.

offset
integer
required
Offset value passed in the query parameter.

Default:
0
Example:
0
limit
integer
required
Limit value passed in the query parameter.

Default:
10
Example:
10


# Sample Test/Show # 

Username
:
username
Password
:
password
identifier
:
string
limit
:
defaults to: 10
offset
:
defaults to: 0
Send API Request

Sandbox
import axios from 'axios';

const options = {
  method: 'GET',
  url: 'https://api.sandbox.insightiq.ai/v1/professional/creators/dictionary/companies',
  headers: {Accept: 'application/json', Authorization: 'Basic 123'}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "data": [
    {
      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
      "name": "string",
      "image_url": "a200b41f-11e6-48ce-81a9-7938c48118f7"
    }
  ],
  "metadata": {
    "offset": 0,
    "limit": 10
  }
}


8  Get topic and subtopic tags for professional profiles
get
https://api.sandbox.insightiq.ai/v1/professional/creators/dictionary/topics
Dictionary of topic and subtopic tags for the public profiles search endpoint.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Body

application/json

application/json
identifier
string
required
Search term

Example:
Mark
limit
integer
<= 100
Default:
10
offset
integer
Responses
default
Default

Body

application/json

application/json
responses
/
default
topics
object
Array of topic objects

id
string<uuid>
InsightIQ generated UUID for the topic

name
string
Name of the topic

Example:
Marketing, Software Engineering,
sub_topics
object


# Sample Test/Show # 


Username
:
username
Password
:
password
{
  "identifier": "Mark",
  "limit": 10,
  "offset": 0
}
{
  "identifier": "Mark",
  "limit": 10,
  "offset": 0
}
Send API Request

Sandbox
import axios from 'axios';

const options = {
  method: 'GET',
  url: 'https://api.sandbox.insightiq.ai/v1/professional/creators/dictionary/topics',
  headers: {Accept: 'application/json', Authorization: 'Basic 123'}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "topics ": {
    "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
    "name": "Marketing, Software Engineering, ",
    "sub_topics": {
      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
      "name": "Digital Marketing, Product Marketing"
    }
  }
}


**-------- Public Content ----------**

1  Get public content information for a profile or single content item (beta, subject to change)
post
https://api.sandbox.insightiq.ai/v1/social/creators/contents/fetch
Retrieve the information of a profile's content or information of a single content item with the supplied content url.
Platforms supported: Instagram, X (formerly Twitter), YouTube and TikTok.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Body

application/json

application/json
CreatorContentFetchRequest - Profile
(one of)
profile_url
string<uri>
required
URL of the profile you want to get content data level.

Example:
https://x.com/waitin4agi_
work_platform_id
string
required
Work platform ID for the platform on which you want to search for the profile using the above identifier

Example:
Twitter WPID
content_type
string
To be used along with profile_url to fetch specific content types.
REELS, IGTV, STORY are used for Instagram.
TWEETS, REPLIES, MENTIONS, ALL are used for Twitter.

Allowed values:
REELS
IGTV
STORY
TWEETS
REPLIES
MENTIONS
ALL
Default:
ALL
offset
integer
Increase sequentially from 0 to fetch analytics of profile posts.

Example:
17
Responses
200
Returns detailed analytics of the profile's content or the single content item.

Headers
request-id
string<uuid>
required
Unique ID associated with this request. Please quote this request while requesting support.

Body

application/json

application/json
responses
/
200
id
string<uuid>
status
any
data
array[CreatorContentData]
Represents the Content object. It contains data of media (images, videos, audio) present in a connected account.

work_platform
WorkPlatformAttribute
required
engagement
object
platform_content_id
string
Unique content ID on the platform

Example:
12ccaf87
title
string
Title of the content item

Example:
USA Tours
format
string
Media type of the content item

Allowed values:
VIDEO
IMAGE
AUDIO
TEXT
OTHER
Example:
VIDEO
type
string
Platform specific content type

Allowed values:
REELS
IGTV
STORY
TWEET
REPLIES
MENTIONS
Example:
REELS
url
string<uri>
Platform content URL.

Example:
https://youtu.be/jzWweY4xPe8
media_url
string<uri> or null
Direct media URL of the content item, which can be used to download the media item. This is usually a signed URL and may have certain expiry limits so we recommend using it for downloads as soon as possible (such as when a webhook is received), if you are looking to cache media files with you

Example:
https://video.cdninstagram.com/v/t50.16885-16/273384537_472655704353078_8308247021721136693_n.mp4?_nc_cat=100&vs=661086908417570_1261186177&_nc_vs=HBksFQAYJEdGbUVTeEEyNlZ1NzRLMEJBRFd1NHJPbDBreHpidlZCQUFBRhUAAsgBABUAGCRHSnU0U3hEM2kwQ0VQVk1EQUM3S29OeTlueUJzYnZWQkFBQUYVAgLIAQAoABgAGwGIB3VzZV9vaWwBMRUAACbG3%2FGq0JXjPxUCKAJDMywXQCOhysCDEm8YEmRhc2hfYmFzZWxpbmVfMV92MREAdewHAA%3D%3D&ccb=1-5&_nc_sid=59939d&efg=eyJ2ZW5jb2RlX3RhZyI6InZ0c192b2RfdXJsZ2VuLjQ4MC5pZ3R2In0%3D&_nc_ohc=qcTIWWC39rQAX9xprW6&_nc_ht=video.cdninstagram.com&edm=AM6HXa8EAAAA&oh=00_AT85xcdCSq921RH5KCSfIukPMfk0QCajZEP5Ym4fY3p1Pw&oe=621D1EA5&_nc_rid=5d42feb0d5
thumbnail_url
string<uri>
Thumbnail URL of the content item, which can be used to download the media thumbnail. This is usually a signed URL and may have certain expiry limits so we recommend using it for downloads as soon as possible (such as when a webhook is received), if you are looking to cache thumbnails with you

Example:
https://youtu.be/jzWweY4xPe8.png
subtitles
object
duration
number or null
Video duration in seconds (only available for YouTube).

Example:
523
description
string
Description of the content item.

Example:
US tours video.
published_at
string<date-time>
Publishing timestamp of the content item.

Example:
2021-05-26T00:00:00.000000
audio_track_info
AudioTrackInfo
Audio track details of the video/reel.

mentions
array[MentionsPublicContentResponse]
collaborators
array[CollaboratorsPublicContentResponse]
sponsors
array[SponsorsPublicContentResponse]
hashtags
array[string]
Hashtags present in the post description

links
array[LinksPublicContentResponse]
Links present in the Instagram story

profile
CreatorProfileBasicDetails
locations
object
Location of the story (Instagram only)

likes_and_views_disabled
boolean
Not for Instagram story, only for Instagram post and reels

Default:
false
keywords
array[string]
genre
string
Example:
Science & Technology


# Sample Test/Show # 

Username
:
username
Password
:
password
{
  "profile_url": "http://example.com",
  "work_platform_id": "string",
  "content_type": "REELS"
}
{
  "profile_url": "http://example.com",
  "work_platform_id": "string",
  "content_type": "REELS"
}
Send API Request

Sandbox
import axios from 'axios';

const options = {
  method: 'POST',
  url: 'https://api.sandbox.insightiq.ai/v1/social/creators/contents/fetch',
  headers: {
    'Content-Type': 'application/json',
    Accept: 'application/json',
    Authorization: 'Basic 123'
  },
  data: {
    profile_url: 'http://example.com',
    work_platform_id: 'string',
    content_type: 'REELS'
  }
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "data": [
    {
      "work_platform": {
        "id": "fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb",
        "name": "Instagram",
        "logo_url": "https://insightiq.ai/storage/instagram.png"
      },
      "engagement": {
        "like_count": 42134,
        "comment_count": 4234,
        "view_count": 42343,
        "share_count": 42343
      },
      "platform_content_id": "12ccaf87",
      "title": "USA Tours",
      "format": "VIDEO",
      "type": "VIDEO",
      "url": "https://youtu.be/jzWweY4xPe8",
      "media_url": "https://video.cdninstagram.com/v/t50.16885-16/273384537_472655704353078_8308247021721136693_n.mp4?_nc_cat=100&vs=661086908417570_1261186177&_nc_vs=HBksFQAYJEdGbUVTeEEyNlZ1NzRLMEJBRFd1NHJPbDBreHpidlZCQUFBRhUAAsgBABUAGCRHSnU0U3hEM2kwQ0VQVk1EQUM3S29OeTlueUJzYnZWQkFBQUYVAgLIAQAoABgAGwGIB3VzZV9vaWwBMRUAACbG3%2FGq0JXjPxUCKAJDMywXQCOhysCDEm8YEmRhc2hfYmFzZWxpbmVfMV92MREAdewHAA%3D%3D&ccb=1-5&_nc_sid=59939d&efg=eyJ2ZW5jb2RlX3RhZyI6InZ0c192b2RfdXJsZ2VuLjQ4MC5pZ3R2In0%3D&_nc_ohc=qcTIWWC39rQAX9xprW6&_nc_ht=video.cdninstagram.com&edm=AM6HXa8EAAAA&oh=00_AT85xcdCSq921RH5KCSfIukPMfk0QCajZEP5Ym4fY3p1Pw&oe=621D1EA5&_nc_rid=5d42feb0d5",
      "duration": 523,
      "description": "US tours video.",
      "thumbnail_url": "https://youtu.be/jzWweY4xPe8.png",
      "published_at": "2021-05-26T00:00:00.000000"
    }
  ]
}



2   Create content fetch request
post
https://api.sandbox.insightiq.ai/v1/social/creators/async/contents/fetch
Endpoint to submit a request to fetch content data. CONTENTS_FETCH.SUCCESS webhook event will be triggered once the submitted job is successful. Please refer the webhook events guide for more information.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Body

application/json

application/json
CreatorContentFetchRequest - Content
(one of)
content_url
string<uri>
required
URL of the content you want to get data for. It fetches data for a single content.

work_platform_id
string
required
Work platform ID for the platform on which you want to search for the profile using the above identifier

Responses
202
Accepted

Body

application/json

application/json
responses
/
202
id
string<uuid>
required
InsightIQ's unique job ID for the submitted request

profile_url
string<uri>
required
Submitted content url for which the engagement metrics will be fetched, if any.

content_url
string<uri>
required
Submitted profile url for which engagement metrics will be fetched, if any.

work_platform
object
required
id
string<uuid>
Unique ID of the work platform.

name
string
Name of the work platform.

logo_url
string
Image URL of the work platform logo.

status
string
required
Status of the submitted job

Allowed values:
IN_PROGRESS
SUCCESS
FAILURE
content_limit
integer
Supported by Facebook, Snapchat and Twitter to limit the number of contents


# Sample Test/Show # 


Username
:
username
Password
:
password
{
  "content_url": "http://example.com",
  "work_platform_id": "string"
}
{
  "content_url": "http://example.com",
  "work_platform_id": "string"
}
Send API Request

Sandbox
import axios from 'axios';

const options = {
  method: 'POST',
  url: 'https://api.sandbox.insightiq.ai/v1/social/creators/async/contents/fetch',
  headers: {
    'Content-Type': 'application/json',
    Accept: 'application/json',
    Authorization: 'Basic 123'
  },
  data: {content_url: 'http://example.com', work_platform_id: 'string'}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
  "profile_url": "http://example.com",
  "content_url": "http://example.com",
  "work_platform": {
    "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
    "name": "string",
    "logo_url": "string"
  },
  "status": "IN_PROGRESS",
  "content_limit": 0
}



3  Retrieve content data for a profile or single content item
get
https://api.sandbox.insightiq.ai/v1/social/creators/async/contents/fetch/{id}
Get the content data for a profile or single content item with the supplied job ID.

Usually used in conjunction with the "CONTENTS_FETCH.*" webhooks, read more.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Path Parameters
id
string<uuid>
required
InsightIQ's unique job ID for the submitted public content request

Query Parameters
limit
integer
The number of search results to be returned.

offset
integer
The number of search results to skip. Use this argument for pagination.

Responses
200
OK

Body

application/json

application/json
responses
/
200
id
string<uuid>
required
InsightIQ's unique job ID

status
string
required
Status of the submitted request

Allowed values:
IN_PROGRESS
SUCCESS
FAILURE
data
array[ProfessionalCreatorContentData]
required
Represents the Content object. It contains data of media (images, videos, audio) present in a connected account.

work_platform
object
required
Work platform object

profile
object
required
Work platform object

engagement
object
platform_content_id
string
Unique content ID on the platform.

Example:
12ccaf87
title
string
Title of the content item.

Example:
USA Tours
format
string
Media type of the content item.

Allowed values:
VIDEO
IMAGE
AUDIO
TEXT
OTHER
Example:
VIDEO
type
string
Platform specific content type.

url
string<uri>
Platform content URL.

media_url
string<uri> or null
Direct media URL of the content item, which can be used to download the media item. This is usually a signed URL and may have certain expiry limits so we recommend using it for downloads as soon as possible (such as when a webhook is received), if you are looking to cache media files with you.

thumbnail_url
string<uri>
Thumbnail URL of the content item, which can be used to download the media thumbnail. This is usually a signed URL and may have certain expiry limits so we recommend using it for downloads as soon as possible (such as when a webhook is received), if you are looking to cache thumbnails with you.

duration
number or null
Video duration in seconds (only available for YouTube).

Example:
523
description
string
Description of the content item.

Example:
US tours video.
published_at
string<date-time>
Publishing timestamp of the content item.

Example:
2021-05-26T00:00:00.000000
is_reposted
boolean
True, if the post wasn't made by the profile but was a repost of someone else's post.

audio_track_info
AudioTrackInfo
Audio track details of the video/reel.

collaborators
array[CollaboratorsPublicContentResponse]
sponsors
array[SponsorsPublicContentResponse]
mentions
array[MentionsPublicContentResponse]
links
array[LinksPublicContentResponse]
Links present in the Instagram story

hashtags
array[string]
Hashtags present in the post description


# Sample Test/Show # 

Username
:
username
Password
:
password
id*
:
string
limit
:
integer
offset
:
integer
Send API Request

Staging
import axios from 'axios';

const options = {
  method: 'GET',
  url: 'https://api.staging.insightiq.ai/v1/social/creators/async/contents/fetch/{id}',
  headers: {Accept: 'application/json', Authorization: 'Basic 123'}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
  "status": "IN_PROGRESS",
  "data": [
    {
      "work_platform": {
        "id": "fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb",
        "name": "LinkedIn",
        "logo_url": "https://insightiq.ai/storage/linkedin.png"
      },
      "profile": {
        "platform_username": "fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb",
        "url": "LinkedIn",
        "external_id": "https://insightiq.ai/storage/linkedin.png",
        "image_url": "http://example.com",
        "is_verified": true
      },
      "engagement": {
        "like_count": 42134,
        "applause_count": 0,
        "support_count": 0,
        "love_count": 0,
        "interest_count": 0,
        "laugh_count": 0,
        "comment_count": 4234,
        "view_count": 42343,
        "share_count": 42343
      },
      "platform_content_id": "12ccaf87",
      "title": "USA Tours",
      "format": "VIDEO",
      "type": "string",
      "url": "http://example.com",
      "media_url": "http://example.com",
      "thumbnail_url": "http://example.com",
      "duration": 523,
      "description": "US tours video.",
      "published_at": "2021-05-26T00:00:00.000000",
      "is_reposted": true,
      "audio_track_info": {
        "id": "UCEyLTzBtHJhlUwkeWhxfMXw",
        "title": "Bad at Love",
        "artist": "Halsey",
        "original": true
      },
      "collaborators": [
        {
          "platform_username": "string",
          "image_url": "http://example.com",
          "is_verified": true
        }
      ],
      "sponsors": [
        {
          "platform_username": "string",
          "first_name": "string",
          "image_url": "http://example.com",
          "is_verified": true
        }
      ],
      "mentions": [
        {
          "platform_username": "string",
          "first_name": "string",
          "image_url": "http://example.com",
          "is_verified": true
        }
      ],
      "links": [
        {
          "title": "string",
          "url": "http://example.com",
          "display_url": "http://example.com"
        }
      ],
      "hashtags": [
        "string"
      ]
    }
  ]
}



4  Create content fetch request for LinkedIn
post
https://api.staging.insightiq.ai/v1/professional/creators/contents/fetch
Endpoint to submit a request to fetch LinkedIn content data. CONTENTS_FETCH.SUCCESS webhook event will be triggered once the submitted job is successful. Please refer the webhook events guide for more information.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Body

application/json

application/json
CreatorContentFetchRequest - Content
(one of)
content_url
string<uri>
required
URL of the content you want to get data for. It fetches data for a single content.

work_platform_id
string
required
Work platform ID for the platform on which you want to search for the profile using the above identifier

Responses
202
Accepted

Body

application/json

application/json
responses
/
202
id
string<uuid>
required
InsightIQ's unique job ID for the submitted request

profile_url
string<uri>
required
Submitted content url for which the engagement metrics will be fetched, if any.

content_url
string<uri>
required
Submitted profile url for which engagement metrics will be fetched, if any.

work_platform
object
required
id
string<uuid>
Unique ID of the work platform.

name
string
Name of the work platform.

logo_url
string
Image URL of the work platform logo.

status
string
required
Status of the submitted job

Allowed values:
IN_PROGRESS
SUCCESS
FAILURE
content_limit
integer
Supported by Facebook, Snapchat and Twitter to limit the number of contents


# Sample Test/Show # 

Username
:
username
Password
:
password
{
  "content_url": "http://example.com",
  "work_platform_id": "string"
}
{
  "content_url": "http://example.com",
  "work_platform_id": "string"
}
Send API Request

Staging
import axios from 'axios';

const options = {
  method: 'POST',
  url: 'https://api.staging.insightiq.ai/v1/professional/creators/contents/fetch',
  headers: {
    'Content-Type': 'application/json',
    Accept: 'application/json',
    Authorization: 'Basic 123'
  },
  data: {content_url: 'http://example.com', work_platform_id: 'string'}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
  "profile_url": "http://example.com",
  "content_url": "http://example.com",
  "work_platform": {
    "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
    "name": "string",
    "logo_url": "string"
  },
  "status": "IN_PROGRESS",
  "content_limit": 0
}



5  Retrieve content data for a LinkedIn profile or single LinkedIn content item
get
https://api.staging.insightiq.ai/v1/professional/creators/contents/fetch/{id}
Get the content data for a profile or single content item with the supplied job ID.

Usually used in conjunction with the "CONTENTS_FETCH.*" webhooks, read more.

Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Path Parameters
id
string<uuid>
required
InsightIQ's unique job ID

Query Parameters
limit
integer
The number of search results to be returned.

offset
integer
The number of search results to skip. Use this argument for pagination.

Responses
200
OK

Body

application/json

application/json
responses
/
200
id
string<uuid>
required
InsightIQ's unique job ID

status
string
required
Status of the submitted request

Allowed values:
IN_PROGRESS
SUCCESS
FAILURE
data
array[ProfessionalCreatorContentData]
required
Represents the Content object. It contains data of media (images, videos, audio) present in a connected account.

work_platform
object
required
Work platform object

profile
object
required
Work platform object

engagement
object
platform_content_id
string
Unique content ID on the platform.

Example:
12ccaf87
title
string
Title of the content item.

Example:
USA Tours
format
string
Media type of the content item.

Allowed values:
VIDEO
IMAGE
AUDIO
TEXT
OTHER
Example:
VIDEO
type
string
Platform specific content type.

url
string<uri>
Platform content URL.

media_url
string<uri> or null
Direct media URL of the content item, which can be used to download the media item. This is usually a signed URL and may have certain expiry limits so we recommend using it for downloads as soon as possible (such as when a webhook is received), if you are looking to cache media files with you.

thumbnail_url
string<uri>
Thumbnail URL of the content item, which can be used to download the media thumbnail. This is usually a signed URL and may have certain expiry limits so we recommend using it for downloads as soon as possible (such as when a webhook is received), if you are looking to cache thumbnails with you.

duration
number or null
Video duration in seconds (only available for YouTube).

Example:
523
description
string
Description of the content item.

Example:
US tours video.
published_at
string<date-time>
Publishing timestamp of the content item.

Example:
2021-05-26T00:00:00.000000
is_reposted
boolean
True, if the post wasn't made by the profile but was a repost of someone else's post.

audio_track_info
AudioTrackInfo
Audio track details of the video/reel.

collaborators
array[CollaboratorsPublicContentResponse]
sponsors
array[SponsorsPublicContentResponse]
mentions
array[MentionsPublicContentResponse]
links
array[LinksPublicContentResponse]
Links present in the Instagram story

hashtags
array[string]
Hashtags present in the post description


# Sample Test/Show # 


Username
:
username
Password
:
password
id*
:
string
limit
:
integer
offset
:
integer
Send API Request

Staging
import axios from 'axios';

const options = {
  method: 'GET',
  url: 'https://api.staging.insightiq.ai/v1/professional/creators/contents/fetch/{id}',
  headers: {Accept: 'application/json', Authorization: 'Basic 123'}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
  "status": "IN_PROGRESS",
  "data": [
    {
      "work_platform": {
        "id": "fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb",
        "name": "LinkedIn",
        "logo_url": "https://insightiq.ai/storage/linkedin.png"
      },
      "profile": {
        "platform_username": "fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb",
        "url": "LinkedIn",
        "external_id": "https://insightiq.ai/storage/linkedin.png",
        "image_url": "http://example.com",
        "is_verified": true
      },
      "engagement": {
        "like_count": 42134,
        "applause_count": 0,
        "support_count": 0,
        "love_count": 0,
        "interest_count": 0,
        "laugh_count": 0,
        "comment_count": 4234,
        "view_count": 42343,
        "share_count": 42343
      },
      "platform_content_id": "12ccaf87",
      "title": "USA Tours",
      "format": "VIDEO",
      "type": "string",
      "url": "http://example.com",
      "media_url": "http://example.com",
      "thumbnail_url": "http://example.com",
      "duration": 523,
      "description": "US tours video.",
      "published_at": "2021-05-26T00:00:00.000000",
      "is_reposted": true,
      "audio_track_info": {
        "id": "UCEyLTzBtHJhlUwkeWhxfMXw",
        "title": "Bad at Love",
        "artist": "Halsey",
        "original": true
      },
      "collaborators": [
        {
          "platform_username": "string",
          "image_url": "http://example.com",
          "is_verified": true
        }
      ],
      "sponsors": [
        {
          "platform_username": "string",
          "first_name": "string",
          "image_url": "http://example.com",
          "is_verified": true
        }
      ],
      "mentions": [
        {
          "platform_username": "string",
          "first_name": "string",
          "image_url": "http://example.com",
          "is_verified": true
        }
      ],
      "links": [
        {
          "title": "string",
          "url": "http://example.com",
          "display_url": "http://example.com"
        }
      ],
      "hashtags": [
        "string"
      ]
    }
  ]
}



6 Get public comments for a single content item (beta, subject to change)
post
https://api.staging.insightiq.ai/v1/social/creators/contents/comments
Request
Basic authentication is a simple authentication scheme built into the HTTP protocol. To use it, send your HTTP requests with an Authorization header that contains the word Basic followed by a space and a base64-encoded string username:password.

Example: Authorization: Basic ZGVtbzpwQDU1dzByZA==

Body

application/json

application/json
content_url
string<uri>
required
Content URL to fetch comments data

work_platform_id
string<uuid>
required
Platform over which content is being fetched

offset
integer
Increase sequentially from 0

Responses
200
OK

Body

application/json

application/json
responses
/
200
work_platform
WorkPlatformAttribute
required
id
string<uuid>
required
Unique ID of the work platform.

Example:
9bb8913b-ddd9-430b-a66a-d74d846e6c66
name
string
required
Name of the work platform.

Example:
Instagram, Twitter
logo_url
string<uri>
required
Image URL of the work platform logo.

Example:
https://insightiq.ai/storage/instagram.png
content_url
string<uri>
required
`Content url for which comments are fetched

Example:
https://www.instagram.com/p/Cng_jhAIsj2/
text
string
required
Comment text

Example:
USA Tours
commenter_username
string
required
Commenter username

Example:
Rashford
commenter_display_name
string
Commenter display name

Example:
Rashford
like_count
integer
Comment like count

Example:
456
reply_count
integer
Comment reply count

Example:
786
published_at
string<date-time>
Comment publishing timestamp

Example:
2021-05-26T00:00:00.000000



# Sample Test/Show # 


Username
:
username
Password
:
password
{
  "content_url": "http://example.com",
  "work_platform_id": "69dc0dd2-b78e-4013-b0d6-5693bb48b548",
  "offset": 0
}
{
  "content_url": "http://example.com",
  "work_platform_id": "69dc0dd2-b78e-4013-b0d6-5693bb48b548",
  "offset": 0
}
Send API Request

Staging
import axios from 'axios';

const options = {
  method: 'POST',
  url: 'https://api.staging.insightiq.ai/v1/social/creators/contents/comments',
  headers: {
    'Content-Type': 'application/json',
    Accept: 'application/json',
    Authorization: 'Basic 123'
  },
  data: {
    content_url: 'http://example.com',
    work_platform_id: '69dc0dd2-b78e-4013-b0d6-5693bb48b548',
    offset: 0
  }
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "data": [
    {
      "work_platform": {
        "id": "fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb",
        "name": "Instagram",
        "logo_url": "https://insightiq.ai/storage/instagram.png"
      },
      "content_url": "https://insightiq.ai/storage/instagram.png",
      "text": "USA Tours",
      "commenter_username": "Rashford",
      "commenter_display_name": "Rashford",
      "like_count": 42134,
      "reply_count": 4234,
      "published_at": "2021-05-26T00:00:00.000000"
    }
  ]
}



7  Create comments fetch request for a single LinkedIn content item
post
https://api.staging.insightiq.ai/v1/professional/creators/contents/comments
Endpoint to submit a request to fetch LinkedIn content comments data. CONTENT_COMMENTS_FETCH.SUCCESS webhook event will be triggered once the submitted job is successful. Please refer the webhook events guide for more information.

Request
Body

application/json

application/json
content_url
string<uri>
required
LinkedIn Content URL to fetch comments

work_platform_id
string<uuid>
required
Work platform ID for the platform on which you want to fetch comments.

Responses
202
Accepted

Body

application/json

application/json
responses
/
202
id
string<uuid>
required
InsightIQ's unique job ID for the submitted request

content_url
string<uri>
required
Content url for which the comments will be fetched

work_platform
WorkPlatformAttribute
required
id
string<uuid>
required
Unique ID of the work platform.

Example:
fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb
name
string
required
Name of the work platform.

Example:
LinkedIn
logo_url
string<uri>
required
Image URL of the work platform logo.

Example:
https://insightiq.ai/storage/linkedin.png



# Sample Test/Show #


Username
:
username
Password
:
password
{
  "content_url": "http://example.com",
  "work_platform_id": "69dc0dd2-b78e-4013-b0d6-5693bb48b548"
}
{
  "content_url": "http://example.com",
  "work_platform_id": "69dc0dd2-b78e-4013-b0d6-5693bb48b548"
}
Send API Request

Staging
import axios from 'axios';

const options = {
  method: 'POST',
  url: 'https://api.staging.insightiq.ai/v1/professional/creators/contents/comments',
  headers: {
    'Content-Type': 'application/json',
    Accept: 'application/json',
    Authorization: 'Basic 123'
  },
  data: {
    content_url: 'http://example.com',
    work_platform_id: '69dc0dd2-b78e-4013-b0d6-5693bb48b548'
  }
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
  "content_url": "http://example.com",
  "work_platform": {
    "id": "fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb",
    "name": "LinkedIn",
    "logo_url": "https://insightiq.ai/storage/linkedin.png"
  }
}



8  Retrieve comments data for a LinkedIn content item
get
https://api.staging.insightiq.ai/v1/professional/creators/contents/comments/{id}
Get the comments data for a single content item with the supplied job ID.

Usually used in conjunction with the "CONTENT_COMMENTS_FETCH.*" webhooks, read more.

Request
Path Parameters
id
string<uuid>
required
InsightIQ's unique job ID

Query Parameters
limit
integer
The number of comments to be returned.

offset
integer
The number of comments to skip. Use this argument for pagination.

Responses
200
OK

Body

application/json

application/json
responses
/
200
ProfessionalCommentsResponse
id
string<uuid>
required
InsightIQ's unique job ID.

status
string
required
Status of the job.

Allowed values:
IN_PROGRESS
SUCCESS
FAILURE
data
array[object]
required
Array of content comments objects.



# Sample Test/Show # 


Username
:
username
Password
:
password
id*
:
string
limit
:
integer
offset
:
integer
Send API Request

Staging
import axios from 'axios';

const options = {
  method: 'GET',
  url: 'https://api.staging.insightiq.ai/v1/professional/creators/contents/comments/{id}',
  headers: {Accept: 'application/json', Authorization: 'Basic 123'}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "": {
    "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
    "status": "IN_PROGRESS",
    "data": [
      {
        "work_platform": {
          "id": "fb83e3ca-eae7-4eaa-bf51-601ea4b3daeb",
          "name": "LinkedIn",
          "logo_url": "https://insightiq.ai/storage/linkedin.png"
        },
        "platform_content_id": "string",
        "content_url": "http://example.com",
        "comment_url": "http://example.com",
        "text": "string",
        "engagement": {
          "like_count": 0,
          "applause_count": 0,
          "support_count": 0,
          "love_count": 0,
          "interest_count": 0,
          "reply_count": 0
        },
        "hashtags": [
          "string"
        ],
        "media_urls": [
          "http://example.com"
        ],
        "links": [
          "http://example.com"
        ],
        "mentions": [
          {
            "platform_username": "string",
            "first_name": "string"
          }
        ],
        "commenter_username": "string",
        "commenter_display_name": "string",
        "published_at": "2019-08-24T14:15:22Z",
        "metadata": {
          "limit": 0,
          "offset": 0
        }
      }
    ]
  }
}



9   Create a content demographics request
post
https://api.staging.insightiq.ai/v1/social/creators/contents/audience
Get demographic information about the audience that has interacted with the provided content items. The API retrieves aggregated audience demographics data for up to 5 content items shared by a particular profile. Snapchat Spotlights are the only content type supported currently.

Usually used in conjunction with the "CONTENT_AUDIENCE_FETCH.*" webhooks, read more.

Request
Body

application/json

application/json
content_urls
array[string<uri>]
required
Content URL to fetch audience. All content items should belong to a single profile only.

>= 1 items
<= 5 items
work_platform_id
string<uuid>
required
Work platform ID for the platform on which you want to fetch audience.

identifier
string
required
Profile URL or username of the profile associated with the content items requested.

Responses
202
Accepted

Body

application/json

application/json
responses
/
202
id
string
created_at
string
post_count
integer or null
total_like_count
integer or null




# Sample Test/Show # 



Username
:
username
Password
:
password
{
  "content_urls": [
    "http://example.com"
  ],
  "work_platform_id": "69dc0dd2-b78e-4013-b0d6-5693bb48b548",
  "identifier": "string"
}
{
  "content_urls": [
    "http://example.com"
  ],
  "work_platform_id": "69dc0dd2-b78e-4013-b0d6-5693bb48b548",
  "identifier": "string"
}
Send API Request

Staging
import axios from 'axios';

const options = {
  method: 'POST',
  url: 'https://api.staging.insightiq.ai/v1/social/creators/contents/audience',
  headers: {
    'Content-Type': 'application/json',
    Accept: 'application/json',
    Authorization: 'Basic 123'
  },
  data: {
    content_urls: ['http://example.com'],
    work_platform_id: '69dc0dd2-b78e-4013-b0d6-5693bb48b548',
    identifier: 'string'
  }
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "id": "string",
  "created_at": "string",
  "post_count": 0,
  "total_like_count": 0
}




10   Retrieve content demographics
get
https://api.staging.insightiq.ai/v1/social/creators/contents/audience/{id}
Get demographic information with the supplied job ID. The API retrieves aggregated audience demographics data for up to 5 content items shared by a particular profile. Snapchat Spotlights are the only content type supported currently.

Usually used in conjunction with the "CONTENT_AUDIENCE_FETCH.*" webhooks, read more.

Request
Path Parameters
id
string
required
Unique job ID

Responses
200
OK

Body

application/json

application/json
responses
/
200
id
string
required
Unique ID of the demographics report

status
string
required
Status of the submitted job

Allowed values:
IN_PROGRESS
SUCCESS
FAILURE
data
object
required
report
object
required
creators
object
required
posts
object
required
audience
object
required
error
object
type
string
required
Type of the error.

Example:
INVALID_REQUEST_PARAMETERS
error_code
string
required
Code of the error.

Example:
MISSING_FIELDS
message
string
required
Message of the error.

Example:
Request is missing required fields: [enabled, name].
request_id
string<uuid>
required
Unique ID associated with this request. Please quote this request while requesting support.

http_status_code
number
required
Standard HTTP status code for the given request, which is also present in the HTTP response

Example:
400


# Sample Test/Show # 


Username
:
username
Password
:
password
id*
:
string
Send API Request

Staging
import axios from 'axios';

const options = {
  method: 'GET',
  url: 'https://api.staging.insightiq.ai/v1/social/creators/contents/audience/{id}',
  headers: {Accept: 'application/json', Authorization: 'Basic 123'}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "id": "string",
  "status": "IN_PROGRESS",
  "data": {
    "report": {
      "created_at": "2020-03-27T12:56:34.534978",
      "content_urls": [
        "http://example.com"
      ],
      "failed_content_urls": [
        "http://example.com"
      ],
      "creator_count": 0,
      "post_count": 0,
      "total_like_count": 0,
      "total_reach_count": 0
    },
    "creators": {
      "full_name": "string",
      "platform_profile_name": "Peter Parker",
      "url": "http://example.com",
      "image_url": "http://example.com",
      "follower_count": 0,
      "analysed_post_count": 0,
      "is_verified": true
    },
    "posts": {
      "platform_profile_name": "string",
      "url": "https://youtu.be/jzWweY4xPe8",
      "thumbnail_url": "https://youtu.be/jzWweY4xPe8.png",
      "format": "VIDEO",
      "published_at": "2021-05-26T00:00:00.000000",
      "title": "USA Tours",
      "like_count": 42134,
      "view_count": 42343,
      "share_count": 42343,
      "hashtags": [
        "['#couponcommunity', '#amazonfinds', '#like', '#amazondeals', '#promocodes', '#rundeal', '#explorepage', '#amazon', '#neverpayfullprice', '#onlinedeals']"
      ]
    },
    "audience": {
      "gender_age_distribution": [
        {
          "gender": "MALE",
          "age_range": "13-18",
          "value": 12.3
        }
      ],
      "countries": [
        {
          "code": "US",
          "value": 78.9
        }
      ]
    }
  },
  "error": {
    "type": "INVALID_REQUEST_PARAMETERS",
    "error_code": "MISSING_FIELDS",
    "message": "Request is missing required fields: [enabled, name].",
    "request_id": "266ea41d-adf5-480b-af50-15b940c2b846",
    "http_status_code": 400
  }
}


11   Create comments fetch request for a content item
post
https://api.staging.insightiq.ai/v1/social/creators/async/contents/comments/fetch
Request
Body

application/json

application/json
content_url
string
required
Content URL to fetch comments data

work_platform_id
string<uuid>
required
Platform identifier for work platform on which you want to fetch comments.

max_result
integer
Maximum number of comments fetched

<= 600
Default:
100
Responses
202
Accepted

Body

application/json

application/json
responses
/
202
id
string
required
InsightIQ's unique job ID for the submitted request

work_platform
WorkPlatformAttribute
required
id
string<uuid>
required
Unique ID of the work platform.

Example:
9bb8913b-ddd9-430b-a66a-d74d846e6c66
name
string
required
Name of the work platform.

Example:
Instagram, Twitter
logo_url
string<uri>
required
Image URL of the work platform logo.

Example:
https://insightiq.ai/storage/instagram.png
status
any
Status of the submitted request

Allowed values:
SUCCESS
IN PROGRESS
FAILURE
content_url
string
URL of the content for which the comments will be fetched



# Sample Test/Show # 


Username
:
username
Password
:
password
{
  "content_url": "IG1234567890",
  "work_platform_id": "instagram-uuid",
  "max_result": "300"
}
{
  "content_url": "IG1234567890",
  "work_platform_id": "instagram-uuid",
  "max_result": "300"
}
Send API Request

Staging
import axios from 'axios';

const options = {
  method: 'POST',
  url: 'https://api.staging.insightiq.ai/v1/social/creators/async/contents/comments/fetch',
  headers: {
    'Content-Type': 'application/json',
    Accept: 'application/json',
    Authorization: 'Basic 123'
  },
  data: {
    content_url: 'IG1234567890',
    work_platform_id: 'instagram-uuid',
    max_result: '300'
  }
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "id": "generated-uuid",
  "work_platform": {
    "id": "instagram-uuid",
    "name": "Instagram",
    "logo_url": "https://insightiq.ai/storage/instagram.png"
  },
  "status": "IN_PROGRESS",
  "content_url": "IG1234567890"
}



12   Fetch comments of a content item
get
https://api.staging.insightiq.ai/v1/social/creators/async/contents/comments/fetch/{id}
Request
Path Parameters
id
string
required
Query Parameters
limit
integer
Number of items per page

offset
integer
Pagination offset

Responses
202
Accepted

Body

application/json

application/json
responses
/
202
id
string
required
InsightIQ's unique job ID for the submitted request

status
any
required
Status of the submitted job

Allowed values:
IN PROGRESS
SUCCESS
FAILURE
data
array[object]
work_platform
WorkPlatformAttribute
required
id
string
commenter_id
string
commenter_username
string
Username of the commenter

reply_count
integer
Number of replies on the comment

Example:
10
created_time
string<time>
Time when comment was created

like_count
integer
Number of likes on comment

Example:
100
parent_id
string
text
string
Text in the comment

Example:
Hey
timestamp
integer
metadata
BasicMetadata
Basic metadata object representing meta information about resources.

offset
integer
required
Offset value passed in the query parameter.

Default:
0
Example:
0
limit
integer
required
Limit value passed in the query parameter.

Default:
10
Example:
10



# Sample Test/Show # 



Username
:
username
Password
:
password
id*
:
string
limit
:
integer
offset
:
integer
Send API Request

Staging
import axios from 'axios';

const options = {
  method: 'GET',
  url: 'https://api.staging.insightiq.ai/v1/social/creators/async/contents/comments/fetch/{id}',
  headers: {Accept: 'application/json', Authorization: 'Basic 123'}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "id": "string",
  "status": "IN PROGRESS",
  "data": [
    {
      "work_platform": {
        "id": "9bb8913b-ddd9-430b-a66a-d74d846e6c66",
        "name": "Instagram, Twitter",
        "logo_url": "https://insightiq.ai/storage/instagram.png"
      },
      "id": "string",
      "commenter_id": "string",
      "commenter_username": "string",
      "reply_count": 10,
      "created_time": "14:15:22Z",
      "like_count": 100,
      "parent_id": "string",
      "text": "Hey",
      "timestamp": 0
    }
  ],
  "metadata": {
    "offset": 0,
    "limit": 10
  }
}




13  Create content fetch request for company profile on LinkedIn
post
https://api.staging.insightiq.ai/v1/professional/companies/contents/fetch
Endpoint to submit a request to fetch LinkedIn content data for a company profile. CONTENTS_FETCH.SUCCESS webhook event will be triggered once the submitted job is successful. Please refer the webhook events guide for more information.

Request
Body

application/json

application/json
profile_url
string<uri>
URL of the profile you want to get content data for

content_url
string<uri>
URL of the content you want to get data for

work_platform_id
string<uuid>
required
Work platform ID for the platform of the above profile url

from_date
string<date>
to_date
string<date>
Responses
202
Accepted

Body

application/json

application/json
responses
/
202
id
string<uuid>
required
InsightIQ's unique job ID for the submitted request

profile_url
string
Profile url for which the posts data will be fetched

content_url
string
URL of the content

work_platform
WorkPlatformAttribute
required
id
string<uuid>
required
Unique ID of the work platform.

Example:
9bb8913b-ddd9-430b-a66a-d74d846e6c66
name
string
required
Name of the work platform.

Example:
Instagram, Twitter
logo_url
string<uri>
required
Image URL of the work platform logo.

Example:
https://insightiq.ai/storage/instagram.png
status
any
required
Status of the requested job

Allowed values:
IN_PROGRESS
PARTIAL_SUCCESS
SUCCESS
FAILED
TIMED_OUT
THROTTLED



# Sample Test/Show # 


Username
:
username
Password
:
password
{
  "profile_url": "http://example.com",
  "content_url": "http://example.com",
  "work_platform_id": "69dc0dd2-b78e-4013-b0d6-5693bb48b548",
  "from_date": "2019-08-24",
  "to_date": "2019-08-24"
}
{
  "profile_url": "http://example.com",
  "content_url": "http://example.com",
  "work_platform_id": "69dc0dd2-b78e-4013-b0d6-5693bb48b548",
  "from_date": "2019-08-24",
  "to_date": "2019-08-24"
}
Send API Request

Staging
import axios from 'axios';

const options = {
  method: 'POST',
  url: 'https://api.staging.insightiq.ai/v1/professional/companies/contents/fetch',
  headers: {
    'Content-Type': 'application/json',
    Accept: 'application/json',
    Authorization: 'Basic 123'
  },
  data: {
    profile_url: 'http://example.com',
    content_url: 'http://example.com',
    work_platform_id: '69dc0dd2-b78e-4013-b0d6-5693bb48b548',
    from_date: '2019-08-24',
    to_date: '2019-08-24'
  }
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
  "profile_url": "string",
  "content_url": "string",
  "work_platform": {
    "id": "9bb8913b-ddd9-430b-a66a-d74d846e6c66",
    "name": "Instagram, Twitter",
    "logo_url": "https://insightiq.ai/storage/instagram.png"
  },
  "status": "IN_PROGRESS"
}



14   Retrieve content data for company profile on LinkedIn
get
https://api.staging.insightiq.ai/v1/professional/companies/contents/fetch/{id}
Get the content data for a company profile or single content item with the supplied job ID.

Usually used in conjunction with the "CONTENTS_FETCH.*" webhooks, read more.

Request
Path Parameters
id
string<uuid>
required
InsightIQ's unique job ID

Query Parameters
limit
integer
The number of search results to be returned.

>= 1
<= 100
Default:
10
offset
integer
The number of search results to skip. Use this argument for pagination.

Default:
0
Responses
200
OK

Body

application/json

application/json
responses
/
200
Data of posts from an organization's LinkedIn page

id
string<uuid>
required
InsightIQ's unique job ID for the submitted request

Example:
497f6eca-6276-4993-bfeb-53cbbbba6f08
status
any
required
Status of the requested job

Allowed values:
IN_PROGRESS
PARTIAL_SUCCESS
SUCCESS
FAILED
TIMED_OUT
THROTTLED
data
ProfessionalCompanyContentItemProfessionalContentItem

any of: ProfessionalCompanyContentItem
work_platform
WorkPlatformAttribute
required
profile
CompanyProfessionalProfile
audio_track_info
AudioTrackInfo
Audio track details of the video/reel.

platform_content_id
string
Platform Content Id

title
string
Title on the content

format
any
Media type of the content item

Allowed values:
VIDEO
IMAGE
AUDIO
TEXT
COLLECTION
OTHER
DOCUMENT
ARTICLE
MEDIA_TYPE_IMAGE
MEDIA_TYPE_VIDEO
type
any
Platform specific content type

Allowed values:
IMAGE
VIDEO
TWEET
OTHER
REELS
STORY
BLOG
THREAD
POST
PODCAST
TRACK
STREAM
FEED
IGTV
SPOTLIGHT
SAVED_STORY
ARTICLE
SHORTS
RETWEET
REPLY
QUOTE
STATIC_POST
CAROUSEL
url
string
URL of the content

media_urls
array[string]
duration
string
Video content duration in seconds

description
string
Description of the content item

thumbnail_url
string
Thumbnail URL of the content item, which can be used to download the media thumbnail. This is usually a signed URL and may have certain expiry limits so we recommend using it for downloads as soon as possible (such as when a webhook is received), if you are looking to cache thumbnails with you

published_at
string<date-time>
Publishing timestamp of the content item

is_reposted
boolean
True, if the post wasn't made by the profile but was a repost of someone else's post

engagement
ProfessionalContentEngagement
required
Engagement metrics of a content

collaborators
array[ProfessionalCollaboratorResponse]
sponsors
array[ProfessionalSponsorsResponse]
mentions
array[ProfessionalMentionResponse]
links
object
Links present in the content

hashtags
array[string]
Hashtags present in the post description


# Sample Test/Show # 


Username
:
username
Password
:
password
id*
:
string
limit
:
defaults to: 10
offset
:
defaults to: 0
Send API Request

Staging
import axios from 'axios';

const options = {
  method: 'GET',
  url: 'https://api.staging.insightiq.ai/v1/professional/companies/contents/fetch/{id}',
  headers: {Accept: 'application/json', Authorization: 'Basic 123'}
};

try {
  const { data } = await axios.request(options);
  console.log(data);
} catch (error) {
  console.error(error);
}
{
  "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
  "status": "IN_PROGRESS",
  "data": {
    "work_platform": {
      "id": "9bb8913b-ddd9-430b-a66a-d74d846e6c66",
      "name": "Instagram, Twitter",
      "logo_url": "https://insightiq.ai/storage/instagram.png"
    },
    "profile": {
      "organization_name": "Phyllo",
      "platform_username": "getphyllo",
      "url": "https://www.linkedin.com/company/getphyllo/",
      "external_id": "179a0bb4-c572-4477-9457-7dacf1b84848",
      "image_url": "string",
      "is_verified": true
    },
    "audio_track_info": {
      "id": "UCEyLTzBtHJhlUwkeWhxfMXw",
      "title": "Bad at Love",
      "artist": "Halsey",
      "original": true
    },
    "platform_content_id": "string",
    "title": "string",
    "format": "VIDEO",
    "type": "IMAGE",
    "url": "string",
    "media_urls": [
      "string"
    ],
    "duration": "string",
    "description": "string",
    "thumbnail_url": "string",
    "published_at": "2019-08-24T14:15:22Z",
    "is_reposted": true,
    "engagement": {
      "like_count": 42134,
      "applause_count": 0,
      "support_count": 0,
      "love_count": 0,
      "interest_count": 0,
      "laugh_count": 0,
      "comment_count": 4234,
      "view_count": 42343,
      "share_count": 42343
    },
    "collaborators": [
      {
        "username": "string",
        "profile_pic_url": "http://example.com",
        "is_verified": true
      }
    ],
    "sponsors": [
      {
        "username": "string",
        "full_name": "string",
        "profile_pic_url": "http://example.com",
        "is_verified": true
      }
    ],
    "mentions": [
      {
        "username": "string",
        "full_name": "string",
        "profile_pic_url": "http://example.com",
        "is_verified": true
      }
    ],
    "links": {
      "link_title": "string",
      "url": "http://example.com",
      "display_url": "http://example.com"
    },
    "hashtags": [
      "string"
    ]
  }
}



**-------- Insights ----------**

// I dont think we need this, when we do I would provide

**-------- Safety ----------**

// I dont think we need this, when we do I would provide

